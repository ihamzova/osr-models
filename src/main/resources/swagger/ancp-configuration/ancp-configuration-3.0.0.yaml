openapi: 3.0.1
info:
  title: ANCP-Configuration
  description: ANCP-Configuration API
  version: 3.0.0
servers:
  - url: http://localhost:8099
    description: basePath for internal use only
  - url: https://{API_GATEWAY_URL}
    description: basePath for communication via api gateway

tags:
  - name: AncpConfigurationController
  - name: AncpConfigurationControllerV2
  - name: AncpConfigurationControllerV3
  - name: ancpSessionV3
  - name: ancpIpSubnetV3
  - name: ancpMaintenance
  - name: ancpMaintenanceV3
paths:
  /api/ancpConfiguration/v1/ancp/timeout:
    post:
      tags:
        - ancpMaintenance
      summary: Start checking timeout of running ancp configurations/deconfigurations
      operationId: checkTimeout
      responses:
        202:
          description: Running process checked for timeout
          content: {}
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/ancpConfiguration/v1/ancp/{ancpSessionId}/cleanup:
    delete:
      tags:
        - ancpMaintenance
      summary: Delete ancp session and all dependent child object WITHOUT deconfiguration
        in SEAL and RMK. This operation should be used by expert users only. All partnersystems
        (SEAL/RMK) must be clean manually.
      operationId: cleanupAncpSession
      parameters:
        - name: ancpSessionId
          in: path
          description: ID of ancp session which should be deleted.
          required: true
          schema:
            type: integer
            format: int64
      responses:
        201:
          description: Successfully deleted
          content: {}
        400:
          description: Can't perform operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/ancpConfiguration/v1/configuration/ancpConfiguration:
    get:
      tags:
        - AncpConfigurationController
      summary: Get ancp configuration
      operationId: sessionStatusTest
      deprecated: true
      parameters:
        - $ref: '#/components/parameters/X-Callback-Id'
        - $ref: '#/components/parameters/X-Callback-Correlation-Id'
        - $ref: '#/components/parameters/X-Callback-Url'
        - $ref: '#/components/parameters/X-Callback-Error-Url'
        - $ref: '#/components/parameters/X-Callback-Method'
        - $ref: '#/components/parameters/X-Business-Context'
        - $ref: '#/components/parameters/X-Correlation-ID'
        - $ref: '#/components/parameters/X-Request-ID'
        - name: oltEndSz
          in: query
          description: EndSz of olt
          required: true
          allowEmptyValue: true
          schema:
            $ref: '#/components/schemas/EndszType'
        - name: sealConfigurationId
          in: query
          description: Ancp configuration id from seal
          required: true
          schema:
            type: string
      responses:
        202:
          description: Request to get ancp configuration is accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        400:
          description: Bad Request (Sync Response on POST Request)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      callbacks:
        callbackGetAncpConfiguration:
          $ref: '#/components/callbacks/callbackGetAncpConfiguration'
  /api/ancpConfiguration/v1/configuration/ancpConfiguration/{uplinkId}:
    post:
      tags:
        - AncpConfigurationController
      summary: Create ancp configuration
      operationId: createAncpConfiguration
      deprecated: true
      parameters:
        - $ref: '#/components/parameters/X-Callback-Id'
        - $ref: '#/components/parameters/X-Callback-Correlation-Id'
        - $ref: '#/components/parameters/X-Callback-Url'
        - $ref: '#/components/parameters/X-Callback-Error-Url'
        - $ref: '#/components/parameters/X-Callback-Method'
        - $ref: '#/components/parameters/X-Business-Context'
        - $ref: '#/components/parameters/X-Correlation-ID'
        - $ref: '#/components/parameters/X-Request-ID'
        - name: uplinkId
          in: path
          description: Properties of uplink
          required: true
          schema:
            type: integer
            format: int64
      responses:
        202:
          description: Request to сreate ancp configuration is accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        400:
          description: Bad Request (Sync Response on POST Request)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      callbacks:
        callbackCreateAncpConfiguration:
          $ref: '#/components/callbacks/callbackCreateAncpConfiguration'
    delete:
      tags:
        - AncpConfigurationController
      summary: Delete ancp configuration
      operationId: startDeconfiguration
      deprecated: true
      parameters:
        - $ref: '#/components/parameters/X-Callback-Id'
        - $ref: '#/components/parameters/X-Callback-Correlation-Id'
        - $ref: '#/components/parameters/X-Callback-Url'
        - $ref: '#/components/parameters/X-Callback-Error-Url'
        - $ref: '#/components/parameters/X-Callback-Method'
        - $ref: '#/components/parameters/X-Business-Context'
        - $ref: '#/components/parameters/X-Correlation-ID'
        - $ref: '#/components/parameters/X-Request-ID'
        - name: uplinkId
          in: path
          description: Id of uplink
          required: true
          schema:
            type: integer
            format: int64
      responses:
        202:
          description: Request to delete ancp configuration is accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        400:
          description: Bad Request (Sync Response on POST Request)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      callbacks:
        callbackDeleteAncpConfiguration:
          $ref: '#/components/callbacks/callbackDeleteAncpConfiguration'
  /api/ancpConfiguration/v2/ancp:
    post:
      tags:
        - AncpConfigurationControllerV2
      summary: Create ancp configuration
      operationId: createAncpConfigurationV2
      parameters:
        - $ref: '#/components/parameters/X-Callback-Id'
        - $ref: '#/components/parameters/X-Callback-Correlation-Id'
        - $ref: '#/components/parameters/X-Callback-Url'
        - $ref: '#/components/parameters/X-Callback-Error-Url'
        - $ref: '#/components/parameters/X-Callback-Method'
        - name: uplinkId
          in: query
          description: Id of ethernet link on which the ancp session should be configured
          schema:
            type: integer
            format: int64
        - name: endSz
          in: query
          description: EndSz of device for which ancp session should be configured
          required: true
          schema:
            $ref: '#/components/schemas/EndszType'
        - name: sessionType
          in: query
          description: Type of ancp session
          required: true
          schema:
            $ref: '#/components/schemas/AncpSessionType'
      responses:
        202:
          description: Request to сreate ancp configuration is accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        400:
          description: Bad Request (Sync Response on POST Request)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        500:
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      callbacks:
        callbackCreateAncpConfiguration:
          $ref: '#/components/callbacks/callbackCreateAncpConfiguration'
  /api/ancpConfiguration/v2/ancp/{ancpSessionId}:
    get:
      tags:
        - AncpConfigurationControllerV2
      summary: Get Operation State of the ANCP-session
      operationId: sessionStatusTestV2
      parameters:
        - $ref: '#/components/parameters/X-Callback-Id'
        - $ref: '#/components/parameters/X-Callback-Correlation-Id'
        - $ref: '#/components/parameters/X-Callback-Url'
        - $ref: '#/components/parameters/X-Callback-Error-Url'
        - $ref: '#/components/parameters/X-Callback-Method'
        - name: ancpSessionId
          in: path
          description: Id of ancp session for which operation state should be determined
          required: true
          schema:
            type: integer
            format: int64
      responses:
        202:
          description: Request to get ancp configuration is accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        400:
          description: Bad Request (Sync Response on POST Request)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        404:
          description: ANCP-Session not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        500:
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      callbacks:
        callbackGetAncpConfiguration:
          $ref: '#/components/callbacks/callbackGetAncpConfiguration'
    delete:
      tags:
        - AncpConfigurationControllerV2
      summary: Delete ancp configuration
      operationId: startDeconfigurationV2
      parameters:
        - $ref: '#/components/parameters/X-Callback-Id'
        - $ref: '#/components/parameters/X-Callback-Correlation-Id'
        - $ref: '#/components/parameters/X-Callback-Url'
        - $ref: '#/components/parameters/X-Callback-Error-Url'
        - $ref: '#/components/parameters/X-Callback-Method'
        - name: ancpSessionId
          in: path
          description: Id of ancp session which should be deconfigured
          required: true
          schema:
            type: integer
            format: int64
      responses:
        202:
          description: Request to delete ancp configuration is accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        400:
          description: Bad Request (Sync Response on POST Request)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        404:
          description: ANCP-Session not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        500:
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      callbacks:
        callbackDeleteAncpConfiguration:
          $ref: '#/components/callbacks/callbackDeleteAncpConfiguration'
  /resource-order-resource-inventory/v3/ancp/ancpConfigurationCheckTimeoutTask:
    post:
      tags:
        - ancpMaintenanceV3
      summary: Start checking timeout of running ancp configurations/deconfigurations
      operationId: checkTimeoutV3
      responses:
        202:
          description: Running process checked for timeout
          content: {}
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /resource-order-resource-inventory/v3/ancpConfigurationCleanupTask/{ancpSessionId}:
    post:
      tags:
        - ancpMaintenanceV3
      summary: Delete ancp session and all dependent child object WITHOUT deconfiguration
        in SEAL and RMK. This operation should be used by expert users only. All partnersystems
        (SEAL/RMK) must be clean manually.
      operationId: cleanupAncpSessionV3
      parameters:
        - name: ancpSessionId
          in: path
          description: ID of ancp session which should be deleted.
          required: true
          schema:
            type: integer
            format: int64
      responses:
        201:
          description: Successfully deleted
          content: {}
        400:
          description: Can't perform operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /reqcb/resource-order-resource-inventory/v3/ancpConfigurationStartConfigurationTask:
    post:
      tags:
        - AncpConfigurationControllerV3
      summary: Create ancp configuration
      operationId: createAncpConfigurationV3
      parameters:
        - $ref: '#/components/parameters/X-Callback-Id'
        - $ref: '#/components/parameters/X-Callback-Correlation-Id'
        - $ref: '#/components/parameters/X-Callback-Url'
        - $ref: '#/components/parameters/X-Callback-Error-Url'
        - $ref: '#/components/parameters/X-Callback-Method'
        - name: uplinkId
          in: query
          description: Id of ethernet link on which the ancp session should be configured
          schema:
            type: integer
            format: int64
        - name: endSz
          in: query
          description: EndSz of device for which ancp session should be configured
          required: true
          schema:
            $ref: '#/components/schemas/EndszType'
        - name: sessionType
          in: query
          description: Type of ancp session
          required: true
          schema:
            $ref: '#/components/schemas/AncpSessionType'
      responses:
        202:
          description: Request to сreate ancp configuration is accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        400:
          description: Bad Request (Sync Response on POST Request)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      callbacks:
        callbackCreateAncpConfiguration:
          $ref: '#/components/callbacks/callbackCreateAncpConfiguration'

  /reqcb/resource-order-resource-inventory/v3/ancpConfigurationGetOperationStateTask/{ancpSessionId}:
    post:
      tags:
        - AncpConfigurationControllerV3
      summary: Get Operation State of the ANCP-session
      operationId: sessionStatusTestV3
      parameters:
        - $ref: '#/components/parameters/X-Callback-Id'
        - $ref: '#/components/parameters/X-Callback-Correlation-Id'
        - $ref: '#/components/parameters/X-Callback-Url'
        - $ref: '#/components/parameters/X-Callback-Error-Url'
        - $ref: '#/components/parameters/X-Callback-Method'
        - name: ancpSessionId
          in: path
          description: Id of ancp session for which operation state should be determined
          required: true
          schema:
            type: integer
            format: int64
      responses:
        202:
          description: Request to get ancp configuration is accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        400:
          description: Bad Request (Sync Response on POST Request)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: ANCP-Session not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      callbacks:
        callbackGetAncpConfiguration:
          $ref: '#/components/callbacks/callbackGetAncpConfiguration'
  /reqcb/resource-order-resource-inventory/v3/ancpConfigurationStartDeconfigurationTask/{ancpSessionId}:
    post:
      tags:
        - AncpConfigurationControllerV3
      summary: Delete ancp configuration
      operationId: startDeconfigurationV3
      parameters:
        - $ref: '#/components/parameters/X-Callback-Id'
        - $ref: '#/components/parameters/X-Callback-Correlation-Id'
        - $ref: '#/components/parameters/X-Callback-Url'
        - $ref: '#/components/parameters/X-Callback-Error-Url'
        - $ref: '#/components/parameters/X-Callback-Method'
        - name: ancpSessionId
          in: path
          description: Id of ancp session which should be deconfigured
          required: true
          schema:
            type: integer
            format: int64
      responses:
        202:
          description: Request to delete ancp configuration is accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        400:
          description: Bad Request (Sync Response on POST Request)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: ANCP-Session not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      callbacks:
        callbackDeleteAncpConfiguration:
          $ref: '#/components/callbacks/callbackDeleteAncpConfiguration'

  /resource-order-resource-inventory/v3/ancpSession:
    post:
      tags:
        - ancpSessionV3
      summary: Creates a AncpSession entity
      description: This operation creates a AncpSession entity without configuration activities.
      operationId: createAncpSessionV3
      requestBody:
        description: The AncpSession to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AncpSession_Create'
        required: true
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AncpSession'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        405:
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        409:
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: ancpSession

  /resource-order-resource-inventory/v3/ancpIpSubnet:
    post:
      tags:
        - ancpIpSubnetV3
      summary: Creates a AncpIpSubnet entity
      description: This operation creates a AncpIpSubnet entity without configuration activities.
      operationId: createAncpIpSubnetV3
      requestBody:
        description: The AncpIpSubnet to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AncpIpSubnet_Create'
        required: true
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AncpIpSubnet'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        405:
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        409:
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: ancpIpSubnet

components:
  schemas:
    ConfigurationUplinkDTOResult:
      type: object
      properties:
        error:
          $ref: '#/components/schemas/ErrorResponse'
        response:
          type: object
        success:
          type: boolean
      description: result of configuration ethernet link
    DeconfigurationUplinkDTOResult:
      type: object
      properties:
        error:
          $ref: '#/components/schemas/ErrorResponse'
        response:
          type: object
        success:
          type: boolean
      description: result of delete configuration ethernet link
    ErrorResponse:
      type: object
      properties:
        errorCode:
          type: string
          description: Error code
        message:
          type: string
          description: Message
      description: Error response of 4xx and 5xx http statuses
    GetConfigurationUplinkDTOResult:
      type: object
      properties:
        error:
          $ref: '#/components/schemas/ErrorResponse'
        response:
          type: string
          description: Result of successful operation.
        success:
          type: boolean
      description: result of get ancp configuration ethernet link
    ProblemDetails:
      required:
        - title
        - type
      type: object
      properties:
        type:
          type: string
          description: type
        title:
          type: string
          description: title
        status:
          type: integer
          description: status
          format: int32
        detail:
          type: string
          description: detail
        instance:
          type: string
          description: instance
        embedded:
          $ref: '#/components/schemas/SpecificProblemDetails'
      description: Error response of 4xx and 5xx http statuses.
    Response:
      required:
        - modifiedIndex
        - status
      type: object
      properties:
        correlationId:
          type: string
        modifiedIndex:
          type: integer
          format: int32
        status:
          type: string
          enum:
            - RMK_ENDPOINT_START
            - RMK_ENDPOINT_DONE
            - SEAL_PROCESS_START
            - SEAL_PROCESS_DONE
            - DONE
            - ERROR
            - START
        message:
          type: string

    SpecificProblemDetails:
      required:
        - code
        - reason
      type: object
      properties:
        code:
          type: string
          description: code
        reason:
          type: string
          description: reason
        message:
          type: string
          description: message
        status:
          type: integer
          description: status
          format: int32
      description: Specific problem details(including fehlerbuildnummer code).

    EquipmentBusinessRef:
      type: object
      properties:
        deviceType:
          $ref: '#/components/schemas/DeviceType'
        endSz:
          example: 49/8571/0/76H1
          type: string
          description: ENDSZ of Device
        portName:
          example: '2'
          type: string
          description: Name of port
        portType:
          $ref: '#/components/schemas/PortType'
        slotName:
          example: '1'
          type: string
          description: Name of slot
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
          default: EquipmentBusinessRef
        '@referredType':
          type: string
          description: The type of the referred entity
          format: uri

    EntityRef:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
        name:
          type: string
          description: Name of the related entity.
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
          default: EntityRef
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: Entity reference schema to be use for all entityRef class.

    AncpIpSubnet:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          description: Identifier of an instance of the resource. Required to be unique
            within the resource type.  Used in URIs as the identifier for specific
            instances of a type.
        href:
          type: string
          description: The URI for the object itself.
          format: uri
        ancpIpSubnetType:
          $ref: '#/components/schemas/AncpIpSubnetType'
        creationDate:
          type: string
          description: Date of creation (ISO-8601)
          format: date-time
          example: '2021-01-22T15:21:27.19554+01:00'
        ipAddressBng:
          type: string
          description: IPv4 address of BNG
          example: 10.150.240.102
        ipAddressBroadcast:
          type: string
          description: Broadcast IPv4 address
          example: 10.150.240.103
        ipAddressLoopback:
          type: string
          description: Loopback IPv4 address
          example: 10.150.240.100
        rmkAccessId:
          type: string
          description: ID of RMK Access A/T
          example: "1341434323"
        subnetMask:
          type: string
          description: Subnet mask
          example: /30
        allocatedIpAddresses:
          type: array
          description: Allocated IP adresses
          example: 10.150.240.106
          items:
            $ref: '#/components/schemas/AllocatedAncpIpAddress'
        modificationDate:
          type: string
          description: Date of modification (ISO-8601)
          format: date-time
          example: '2021-01-22T15:21:27.19554+01:00'
        bngDownlinkPortEquipmentBusinessRef:
          $ref: '#/components/schemas/EquipmentBusinessRef'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
          default: AncpIpSubnet
      description: |-
        AncpIpSubnet
        Skipped properties: category,endOperatingDate,administrativeState,operationalState,resourceStatus,usageState,note,place,relatedParty,resourceRelationship,resourceCharacteristic,attachment,resourceSpecification,startOperatingDate,resourceVersion,activationFeature,description,name,manufactureDate,powerState,versionNumber,serialNumber,value

    AncpIpSubnet_Create:
      type: object
      required:
        - ipAddressBng
        - ipAddressBroadcast
        - ipAddressLoopback
        - rmkAccessId
        - allocatedIpAddresses
      properties:
        ipAddressBng:
          type: string
          description: IPv4 address of BNG
          example: 10.150.240.102
        ipAddressBroadcast:
          type: string
          description: Broadcast IPv4 address
          example: 10.150.240.103
        ipAddressLoopback:
          type: string
          description: Loopback IPv4 address
          example: 10.150.240.100
        rmkAccessId:
          type: string
          description: ID of RMK Access A/T
          example: "1341434323"
        subnetMask:
          type: string
          description: Subnet mask
          example: /30
          default: /30
        allocatedIpAddresses:
          type: array
          description: Allocated IP adresses for access nodes. BNG IP address is not part of this list.
          example: 10.150.240.106
          items:
            $ref: '#/components/schemas/AllocatedAncpIpAddress'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
          default: AncpIpSubnet
      description: |-
        AncpIpSubnet
        Skipped properties: category,endOperatingDate,administrativeState,operationalState,resourceStatus,usageState,note,place,relatedParty,resourceRelationship,resourceCharacteristic,attachment,resourceSpecification,startOperatingDate,resourceVersion,activationFeature,description,name,manufactureDate,powerState,versionNumber,serialNumber,value,id,href

    AncpSession:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          description: Identifier of an instance of the resource. Required to be unique
            within the resource type.  Used in URIs as the identifier for specific
            instances of a type.
        href:
          type: string
          description: The URI for the object itself.
          format: uri
        additionalInfo:
          type: string
          description: Additional info
          example: ""
        configurationStatus:
          $ref: '#/components/schemas/AncpConfigurationStatus'
        configurationStep:
          $ref: '#/components/schemas/AncpConfigurationStep'
        creationDate:
          type: string
          description: Date of creation (ISO-8601)
          format: date-time
          example: '2021-01-22T15:21:27.19554+01:00'
        ipAddressAccessNode:
          type: string
          description: IPv4 adress of OLT
          example: 10.150.240.101
        ipAddressBng:
          type: string
          description: IPv4 adress of BNG
          example: 10.150.240.102
        lastActivity:
          type: string
          description: Timestamp of last activity (ISO-8601)
          format: date-time
          example: '2021-01-22T15:21:27.19554+01:00'
        modificationDate:
          type: string
          description: Date of modification (ISO-8601)
          format: date-time
          example: '2021-01-22T15:21:27.19554+01:00'
        partitionId:
          type: integer
          description: Identifier of Access Node partition
          example: 2
        rmkEndpointId:
          type: string
          description: identifier of RMK A/T
          example: 1341abc434323
        sealConfigurationId:
          type: string
          description: Identifier of SEAL
          example: 0-19-1-2-16
        sessionId:
          type: integer
          description: Unique id of ancp session
          example: 2
        sessionType:
          $ref: '#/components/schemas/AncpSessionType'
        vlan:
          type: integer
          description: Virtual LAN Identifier used by ANCP link
          example: 16
        accessNodeEquipmentBusinessRef:
          $ref: '#/components/schemas/EquipmentBusinessRef'
        ancpIpSubnetRef:
          $ref: '#/components/schemas/EntityRef'
        bngDownlinkPortEquipmentBusinessRef:
          $ref: '#/components/schemas/EquipmentBusinessRef'
        oltUplinkPortEquipmentBusinessRef:
          $ref: '#/components/schemas/EquipmentBusinessRef'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
          default: AncpSession
      description: |-
        AncpSession
        Skipped properties: category,endOperatingDate,administrativeState,operationalState,resourceStatus,usageState,note,place,relatedParty,resourceRelationship,resourceCharacteristic,attachment,resourceSpecification,startOperatingDate,resourceVersion,activationFeature,description,name,manufactureDate,powerState,versionNumber,serialNumber,value

    AncpSession_Create:
      type: object
      required:
        - ipAddressAccessNode
        - partitionId
        - rmkEndpointId
        - sealConfigurationId
        - sessionType
        - sessionId
        - vlan
        - accessNodeEquipmentBusinessRef
        - ancpIpSubnetRef
        - bngDownlinkPortEquipmentBusinessRef
        - oltUplinkPortEquipmentBusinessRef
        - configurationStatus
      properties:
        additionalInfo:
          type: string
          description: Additional info
          example: ""
        configurationStatus:
          $ref: '#/components/schemas/AncpConfigurationStatus'
        configurationStep:
          $ref: '#/components/schemas/AncpConfigurationStep'
        ipAddressAccessNode:
          type: string
          description: IPv4 adress of OLT
          example: 10.150.240.101
        lastActivity:
          type: string
          description: Timestamp of last activity (ISO-8601)
          format: date-time
          example: '2021-01-22T15:21:27.19554+01:00'
        partitionId:
          type: integer
          description: Identifier of Access Node partition
          example: 2
        rmkEndpointId:
          type: string
          description: identifier of RMK A/T
          example: 1341abc434323
        sealConfigurationId:
          type: string
          description: Identifier of SEAL
          example: 0-19-1-2-16
        sessionId:
          type: integer
          description: Unique id of ancp session
          example: 2
        sessionType:
          $ref: '#/components/schemas/AncpSessionType'
        vlan:
          type: integer
          description: Virtual LAN Identifier used by ANCP link
          example: 16
        accessNodeEquipmentBusinessRef:
          $ref: '#/components/schemas/EquipmentBusinessRef'
        ancpIpSubnetRef:
          $ref: '#/components/schemas/EntityRef'
        bngDownlinkPortEquipmentBusinessRef:
          $ref: '#/components/schemas/EquipmentBusinessRef'
        oltUplinkPortEquipmentBusinessRef:
          $ref: '#/components/schemas/EquipmentBusinessRef'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
          default: AncpSession
      description: AncpSession

    Error:
      required:
        - code
        - reason
      type: object
      properties:
        code:
          type: string
          description: Application relevant detail, defined in the API or a common
            list.
        reason:
          type: string
          description: Explanation of the reason for the error which can be shown
            to a client user.
        message:
          type: string
          description: More details and corrective actions related to the error which
            can be shown to a client user.
        status:
          type: string
          description: HTTP Error code extension
        referenceError:
          type: string
          description: URI of documentation describing the error.
          format: uri
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class.
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name.
          default: Error
      description: Used when an API throws an Error, typically with a HTTP error response-code
        (3xx, 4xx, 5xx)

    AllocatedAncpIpAddress:
      type: object
      required:
        - ipAddress
      properties:
        id:
          type: string
          description: Identifier of an instance of the resource. Required to be unique
            within the resource type.  Used in URIs as the identifier for specific
            instances of a type.
        ipAddress:
          type: string
          description: IPv4 address
          example: 10.150.240.101
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class.
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name.
          default: AllocatedAncpIpAddress

    AncpConfigurationStep:
      type: string
      description: Step of configuration
      example: CREATE_IP_RANGE_ASSIGNMENT
      enum:
        - CREATE_IP_RANGE_ASSIGNMENT
        - CREATE_ANCP_ENDPOINT
        - CREATE_ANCP_CONFIGURATION
        - DELETE_ANCP_CONFIGURATION
        - DEACTIVATE_ANCP_ENDPOINT
        - DELETE_IP_RANGE_ASSIGNMENT

    AncpConfigurationStatus:
      type: string
      description: The status of current configuration
      example: ACTIVE
      enum:
        - ACTIVE
        - IN_CONFIGURATION
        - IN_DECONFIGURATION
        - ERROR

    AncpSessionType:
      type: string
      description: Type of ANCP session
      example: OLT
      enum:
       - OLT
       - DPU

    AncpIpSubnetType:
      type: string
      description: Type of subnet
      example: OLT
      enum:
      - OLT
      - DPU

    DeviceType:
      example: OLT
      type: string
      description: Type of device
      enum:
       - OLT
       - BNG
       - DPU

    PortType:
      example: PON
      type: string
      description: Type of port
      enum:
       - PON
       - ETHERNET
       - GFAST

    EndszType:
      type: string
      pattern: '[0-9]{1,6}\/[0-9]{1,6}\/[0-9]{1,6}\/[a-zA-Z0-9]{2,4}'
      example: '49/8571/0/76HA'

  parameters:
    X-Callback-Id:
      name: X-Callback-Id
      in: header
      description: Callback Id
      schema:
        type: string
    X-Callback-Correlation-Id:
      name: X-Callback-Correlation-Id
      in: header
      description: Correlation Id
      schema:
        type: string
        format: uuid
    X-Callback-Url:
      name: X-Callback-Url
      in: header
      description: Callback url
      schema:
        type: string
    X-Callback-Error-Url:
      name: X-Callback-Error-Url
      in: header
      description: Error callback url
      schema:
        type: string
    X-Callback-Method:
      name: X-Callback-Method
      in: header
      description: Callback http method
      schema:
        type: string
    X-Correlation-ID:
      name: X-Correlation-ID
      in: header
      description: Value for identifying a single transaction across multiple services
        up to the backend. Usually set by the originating consumer.Any service receiving
        this header parameter MUST forward it unmodified to other services it invokes.
        Non-REST technologies (e.g. SOABP) might use a different identifier for this
        attribute. If this ID is not available (not supplied, empty or at origin),
        the service MUST create it as a UUID. The maximum length of 256 characters
        MUST NOT be exceeded (a standard UUID has 36 characters). The creator MAY
        prefix the UUID with an application and/or instance defined string.
      schema:
        type: string
    X-Request-ID:
      name: X-Request-ID
      in: header
      description: Value to identify an individual request across consuming application,
        middleware and service provider. This ID is to be generated for every single
        request and not to be passed down (as X-Correlation-ID) to sub-services. Every
        consuming application MUST create this value as UUID. The maximum length of
        256 characters MUST NOT be exceeded (a standard UUID has 36 characters). The
        creator MAY prefix the UUID with an application and/or instance defined string.
      schema:
        type: string
    X-Business-Context:
      name: X-Business-Context
      in: header
      description: The business context is a general classification for a larger number
        of requests (types) usually set by the originating consumer. Any service receiving
        this header parameter MUST forward it unmodified to other services it invokes.
        Non-REST technologies (e.g. SOABP) might use a different identifier for this
        attribute.
      schema:
        type: string

  callbacks:
    callbackCreateAncpConfiguration:
      '{$request.header.X-Callback-Url}':
        post:
          summary: Create Ancp Configuration
          parameters:
            - name: X-Callback-Correlation-Id
              in: header
              description: Value for identifying a single transaction across multiple services
                up to the backend. Usually set by the originating consumer
              required: true
              schema:
                type: string
                format: uuid
          requestBody:
            description: Result of configuration ethernet link
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ConfigurationUplinkDTOResult'
            required: true
          responses:
            200:
              description: Callback received
              content: { }
            500:
              description: Internal error
              content: { }

    callbackDeleteAncpConfiguration:
      '{$request.header.X-Callback-Url}':
        post:
          parameters:
            - name: X-Callback-Correlation-Id
              in: header
              description: Value for identifying a single transaction across multiple services
                up to the backend. Usually set by the originating consumer
              required: true
              schema:
                type: string
                format: uuid
          requestBody:
            description: Result of delete configuration ethernet link
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/DeconfigurationUplinkDTOResult'
            required: true
          responses:
            200:
              description: Callback received
              content: { }
            500:
              description: Internal error
              content: { }

    callbackGetAncpConfiguration:
      '{$request.header.X-Callback-Url}':
        post:
          summary: Get Ancp Configuration Status
          parameters:
            - name: X-Callback-Correlation-Id
              in: header
              description: Correlation Id
              required: true
              schema:
                type: string
                format: uuid
          requestBody:
            description: Result of  status check ancp configuration
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GetConfigurationUplinkDTOResult'
            required: true
          responses:
            200:
              description: Callback received
              content: { }
            500:
              description: Internal error
              content: { }

