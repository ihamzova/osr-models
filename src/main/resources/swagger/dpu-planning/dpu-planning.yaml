swagger: '2.0'
info:
  title: DPU Demand Inventory Management
  description: This is TMF Device Resource Inventory Management API specification for DPU Demand
  version: 1.2.1
host: 'localhost:8080'
basePath: /resource-order-resource-inventory/v1

schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
tags:
  - name: dpuDemand
securityDefinitions:
  OauthSecurity:
    type: oauth2
    flow: application
    tokenUrl: 'https://example.org/token'
    scopes:
      'rori:dpuDemand:read': DpuDemand Read Scope
      'rori:dpuDemand:full': DpuDemand Full Scope
      'giga:cga:all-area-access': Default Scope
paths:

  /dpuDemand:
    get:
      security:
        - OauthSecurity:
            - 'rori:dpuDemand:read'
            - 'giga:cga:all-area-access'
      operationId: findDpuDemand
      summary: find DpuDemand objects
      description: This operation list or find DpuDemand entities
      tags:
        - dpuDemand
      parameters:
        - name: dpuAccessTechnology
          description: For filtering on the base of 'dpuAccessTechnology' field (equality)
          in: query
          enum:
            -  FTTB_COAX
            -  FTTB_CUDA
          type: string
        - name: dpuEndSz
          description: For filtering on the base of 'dpuEndSz' field (equality)
          in: query
          type: string
        - name: fiberOnLocationId
          description: For filtering on the base of 'fiberOnLocationId' field (equality)
          in: query
          type: string
        - name: klsId
          description: For filtering on the base of 'klsId' field (equality)
          in: query
          type: string
        - name: numberOfNeededDpuPorts
          description: For filtering on the base of 'numberOfNeededDpuPorts' field (equality)
          in: query
          type: string
        - name: state
          description: For filtering on the base of 'state' field (equality)
          in: query
          enum:
            -  OPEN
            -  FULFILLED
          type: string
        - name: workorderId
          description: For filtering on the base of 'workorderId' field (equality)
          in: query
          type: string
      responses:
        '200':
          description: Success
          headers:
            X-Result-Count:
              description: Actual number of items returned in the response body
              type: integer
            X-Total-Count:
              description: Total number of items matching criteria
              type: integer
          schema:
            type: array
            items:
              $ref: '#/definitions/DpuDemand'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '405':
          description: Method Not allowed
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
    post:
      security:
        - OauthSecurity:
            - 'rori:dpuDemand:full'
            - 'giga:cga:all-area-access'
      operationId: createDpuDemand
      summary: Creates a DpuDemand
      description: This operation creates a DpuDemand entity.
      tags:
        - dpuDemand
      parameters:
        - name: dpuDemand
          description: The DpuDemand to be created
          required: true
          schema:
            $ref: '#/definitions/DpuDemand_Create'
          in: body
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/DpuDemand'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '405':
          description: Method Not allowed
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
  '/dpuDemand/{id}':
    get:
      security:
        - OauthSecurity:
            - 'rori:dpuDemand:read'
            - 'giga:cga:all-area-access'
      operationId: retrieveDpuDemand
      summary: Retrieves a DpuDemand by ID
      description: This operation retrieves a DpuDemand entity. Attribute selection is enabled for all first level attributes.
      tags:
        - dpuDemand
      parameters:
        - name: id
          description: Identifier of the DpuDemand
          required: true
          type: string
          in: path
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DpuDemand'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '405':
          description: Method Not allowed
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
    patch:
      security:
        - OauthSecurity:
            - 'rori:dpuDemand:full'
            - 'giga:cga:all-area-access'
      operationId: patchDpuDemand
      summary: Updates partially a DpuDemand
      description: This operation updates partially a DpuDemand entity.
      tags:
        - dpuDemand
      consumes:
        - application/json-patch+json
      parameters:
        - name: id
          description: Identifier of the DpuDemand
          required: true
          type: string
          in: path
        - name: JsonPatchOperation
          description: List of JSONPatch operation as defined by RFC 6902
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/JsonPatchOperation'
          in: body
      responses:
        '200':
          description: Updated
          schema:
            $ref: '#/definitions/DpuDemand'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '405':
          description: Method Not allowed
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
    delete:
      security:
        - OauthSecurity:
            - 'rori:dpuDemand:full'
            - 'giga:cga:all-area-access'
      operationId: deleteDpuDemand
      summary: Deletes a DpuDemand
      description: This operation deletes a DpuDemand entity.
      tags:
        - dpuDemand
      parameters:
        - name: id
          description: Identifier of the DpuDemand
          required: true
          type: string
          in: path
      responses:
        '204':
          description: Deleted
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '405':
          description: Method Not allowed
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'

definitions:
  DpuDemand:
    type: object
    description: |-
      A DpuDemand represents the need for one DPU at a location to be planned and commissioned. There can be multiple demands/DPUs at a location.
    required:
      - href
      - id
      - fiberOnLocationId
      - klsId
      - numberOfNeededDpuPorts
      - state
      - dpuAccessTechnology
      - type
      - baseType
    properties:
      id:
        type: string
        description: Identifier of an instance of the resource. Required to be unique within the resource type.  Used in URIs as the identifier for specific instances of a type.
      href:
        format: uri
        type: string
        description: The URI for the object itself.
      creationDate:
        example: '2021-01-22T15:21:27.19554+01:00'
        format: date-time
        type: string
        description: creation date with timezone (ISO-8601)
      modificationDate:
        example: '2021-01-22T15:21:27.19554+01:00'
        format: date-time
        type: string
        description: modification date with timezone (ISO-8601)

      dpuAccessTechnology:
        $ref: '#/definitions/dpuAccessTechnology'
      dpuEndSz:
        example: '49/341/4/76G1'
        type: string
        description: 'Endstellenschlüsselzahl – Termination node key. Filled once DPU was planned. Reference to DPU which fulfills this demand.'
      dpuInstallationInstruction:
        example: '30cm neben APL'
        type: string
        description: 'Freetext description of location or other instruction as to where and how DPU shall be installed within dpuLocation.'
      dpuLocation:
        example: 'Technikraum Keller links'
        type: string
        description: 'Freetext description of location of the DPU within the building.'
      fiberOnLocationId:
        example: '11116666555544443333'
        type: string
        description: 'reference to FiberOnLocation (Gebäudeteil)'
      klsId:
        example: '16828404'
        type: string
        description: 'Reference the postal address in KLS'
      numberOfNeededDpuPorts:
        example: '12'
        type: integer
        description: 'Number of ports that are needed at least on the DPU to fulfill the demand.'
      state:
        $ref: '#/definitions/DpuDemandState'
      workorderId:
        example: '2'
        type: string
        description: 'reference to dpu installation workorder'
      '@baseType':
        type: string
        description: 'When sub-classing, this defines the super-class: Entity'
      '@schemaLocation':
        type: string
        format: uri
        description: A URI to a JSON-Schema file that defines additional attributes and relationships
      '@type':
        type: string
        description: 'When sub-classing, this defines the sub-class entity name: DpuDemand'
  DpuDemand_Create:
    type: object
    description: |-
      DPU Demand without an ID, which has to be created bs inventory
    required:
      - fiberOnLocationId
      - klsId
      - numberOfNeededDpuPorts
      - state
      - dpuAccessTechnology
      - type
      - baseType
    properties:
      dpuAccessTechnology:
        $ref: '#/definitions/dpuAccessTechnology'
      dpuEndSz:
        example: '49/341/4/76G1'
        type: string
        description: 'Endstellenschlüsselzahl – Termination node key'
      dpuInstallationInstruction:
        example: '30cm neben APL'
        type: string
        description: 'Freetext description of location or other instruction as to where and how DPU shall be installed within dpuLocation'
      dpuLocation:
        example: 'Technikraum Keller links'
        type: string
        description: 'Freetext description of location of the DPU within the building'
      fiberOnLocationId:
        example: '11116666555544443333'
        type: string
        description: 'reference to FiberOnLocation (Gebäudeteil)'
      klsId:
        example: '16828404'
        type: string
        description: 'Reference to an information object in KLS'
      numberOfNeededDpuPorts:
        example: '12'
        type: integer
        description: 'Number of ports that are needed at least on the DPU to fulfill the demand.'
      state:
        $ref: '#/definitions/DpuDemandState'
      workorderId:
        example: '2'
        type: string
        description: 'reference to dpu installation workorder'
      '@baseType':
        type: string
        description: 'When sub-classing, this defines the super-class'
      '@schemaLocation':
        type: string
        format: uri
        description: A URI to a JSON-Schema file that defines additional attributes and relationships
      '@type':
        type: string
        description: 'When sub-classing, this defines the sub-class entity name'
  DpuDemandState:
    type: string
    description: state enumeration of an dpuDemand
    example: OPEN
    enum:
      -  OPEN
      -  FULFILLED
  dpuAccessTechnology:
    type: string
    description: The technology offered by DPU to customer side, access medium of an dpuDemand.
    example: FTTB_CUDA
    enum:
      -  FTTB_CUDA
      -  FTTB_COAX
  JsonPatchOperation:
    type: object
    description: A JSONPatch operation as defined by RFC 6902
    properties:
      op:
        type: string
        description: The operation to be performed
        enum:
          - add
          - remove
          - replace
          - move
          - copy
          - test
      path:
        type: string
        description: JSON-Pointer
      value:
        type: object
        description: Value to be used within the operations
      from:
        type: string
        description: String containing a JSON Pointer value
    required:
      - op
      - path

  Error:
    description: 'Used when an API throws an Error, typically with a HTTP error response-code (3xx, 4xx, 5xx)'
    type: object
    required:
      - code
      - reason
    properties:
      code:
        type: string
        description: 'Application relevant detail, defined in the API or a common list.'
      reason:
        type: string
        description: Explanation of the reason for the error which can be shown to a client user.
      message:
        type: string
        description: More details and corrective actions related to the error which can be shown to a client user.
      state:
        type: string
        description: HTTP Error code extension
      referenceError:
        type: string
        format: uri
        description: URI of documentation describing the error.
      '@baseType':
        type: string
        description: 'When sub-classing, this defines the super-class.'
      '@schemaLocation':
        type: string
        format: uri
        description: A URI to a JSON-Schema file that defines additional attributes and relationships
      '@type':
        type: string
        description: 'When sub-classing, this defines the sub-class entity name.'
