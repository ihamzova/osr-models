openapi: 3.0.3
info:
  title: NetworkElementLink import event
  description: NetworkElementLink import event
  version: 1.0.0
tags:
  - name: Callback Subscriptions
  - name: HealthCheck
paths:
  /resource-order-resource-inventory/a4InventoryImport/v1/linkImport/processEvent:
    post:
      security:
        - OAuth2:
            - rori:linkevent:full
            - giga:cga:all-area-access
      tags:
        - Event
      operationId: linkImportEventCallback
      summary: callback endpoint for link import event
      requestBody:
        description: link import status event
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
        required: true
      responses:
        200:
          description: event received
          content: {}
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
    head:
      tags:
        - HealthCheck
      summary: health check endpoint
      description: may be called to check whether the endpoint is available
      operationId: checkHealth
      responses:
        "204":
          description: '`No Content` - endpoint available.'
          headers:
            X-Health-Check-Timestamp:
              description: time when the health check was done
              style: simple
              schema:
                format: date-time
                type: string
        '500':
          description: 'Internal Server Error. The intermediary could not fulfil the request due to some unexpected condition.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
components:
  schemas:
    eventData:
      description: >-
        This additional data object specifies all relevant objects used to emit events of Network Element Link changed events.
      required:
        - uewegId
        - uewegStatus
      type: object
      properties:
        uewegId:
          description: >-
            ueweg Id.
          type: string
          example: 'I402922123'
          nullable: false
        uewegStatus:
          description: >-
            State of object which was relevant for this event.
          type: string
          example: 'Geprueft'
          nullable: false
        endszA:
          description: >-
            endszA.
          type: string
          example: '49/6244/0/76G1'
          nullable: false
        endszB:
          description: >-
            endszB.
          type: string
          example: '49/6241/5/7ZJA'
          nullable: false
    Event:
      description: "This resource is used to emit and receive events, and resource\
            \ representations or resource identifiers (subject). Note that either 'data' or 'dataref' must be present, if
            subscribers use both, both must be present. Subscribers will only receive one, depending on their subscription."
      required:
        - id
        - type
        - source
        - specversion
      type: object
      properties:
        data:
          $ref: '#/components/schemas/eventData'
        datacontenttype:
          description: "Content type of `data` value. This attribute enables `data`\
                \ to carry any type of content, whereby format and encoding might differ\
                \ from that of the chosen event format."
          type: string
          example: application/json
        dataref:
          format: url
          description: "The `dataref` attribute MAY be used to reference another location\
                \ where this information is stored. The information, whether accessed\
                \ via `data` or `dataref` MUST be identical."
          type: string
          example: http://apihost/some/api/v1/resource/1234
          nullable: false
        dataschema:
          format: url
          description: Identifies the schema that `data` adheres to. Incompatible
            changes to the schema SHOULD be reflected by a different URL.
          type: string
          example: http://apihost/some/path/resource/1234
        id:
          format: uuid
          description: Identifies the event. Producers MUST ensure that `source` +
            `id` is unique for each distinct event.
          type: string
          example: 38ce597-bca4-4bc9-9f00-0339c935568b
          nullable: false
        source:
          format: url
          description: "Identifies the context in which an event happened. Often this\
                \ will include information such as the type of the event source, the organization\
                \ publishing the event or the process that produced the event. The exact\
                \ syntax and semantics behind the data encoded in the URL is defined by\
                \ the event producer."
          type: string
          example: http://apihost/some/path/resource/1234
          nullable: false
        specversion:
          description: The version of the CloudEvents specification which the event
            uses. This enables the interpretation of the context. Compliant event
            producers MUST use a value of `1.0` when referring to this version of
            the specification.
          minLength: 1
          example: "1.0"
          type: string
          nullable: false
        time:
          format: date-time
          description: "Timestamp when the occurrence happened. If the time of the\
                \ occurrence cannot be determined then this attribute MAY be set to some\
                \ other time (such as the current time) by the CloudEvents producer, however\
                \ all producers for the same `source` MUST be consistent in this respect."
          type: string
          example: 2020-10-02T15:00:00.05Z
        type:
          description: "This attribute contains a value describing the type of event\n\
                related to the originating occurrence. Often this attribute is used for\n\
                routing, observability, policy enforcement, etc."
          type: string
          example: com.group.org.service.function.v1
          nullable: false
      example:
        datacontenttype: 'application/json'
        id: '9f840acb-55e2-40c6-888e-8ec5ee6a207a'
        source: 'https://rebell-ws1.telekom.de:9465/resource-order-resource-inventory/v1/uewege?uewegId=I545253020'
        specversion: '1.0'
        time: '2022-09-01T11:11:00.12345Z'
        type: 'com.telekom.net4f.tafel.v1'
        dataref: 'https://rebell-ws1.telekom.de:9465/resource-order-resource-inventory/v1/uewege?uewegId=I545253020'
        dataschema: 'http://apihost/schema/definition.json'
        data: {
          uewegId: 'I545253020',
          uewegStatus: 'InBetrieb',
          endszA: '49/6501/129/7MA1',
          endszB: '49/651/0/7ZJA'
        }
    Problem:
      description: >-
        RFC Problem Details. See https://tools.ietf.org/html/rfc7807#page-5 for
        more details.
      type: object
      properties:
        detail:
          description: >-
            A human-readable explanation specific to this occurrence of the
            problem. The "detail" member, if present, ought to focus on helping
            the client correct the problem, rather than giving debugging
            information.
          type: string
        instance:
          format: uri
          description: >-
            A URI reference that identifies the specific occurrence of the
            problem. It may or may not yield further information if
            dereferenced.
          type: string
        status:
          format: int32
          description: >-
            The HTTP status code ([RFC7231], Section 6) generated by the origin
            server for this occurrence of the problem. The "status" member, if
            present, is only advisory; it conveys the HTTP status code used for
            the convenience of the consumer. Generators MUST use the same status
            code in the actual HTTP response.
          type: integer
        title:
          description: >-
            A short, human-readable summary of the problem type. Consumers
            SHOULD NOT automatically dereference the type URL.
          type: string
        type:
          format: url
          description: >-
            A URL reference [RFC3986] that identifies the problem type.
            Consumers MUST use the "type" string as the primary identifier for
            the problem type.
          default: 'about:blank'
          type: string
  securitySchemes:
    OAuth2:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: https://example.org/token # Just leave this. It is mandatory but not used by our implementation
          scopes:
            'rori:linkevent:full': Callback Scope
            'giga:cga:all-area-access': Default Scope