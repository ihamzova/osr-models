swagger: '2.0'
info:
  description: This YAML describes a Service to trigger Tasks to update Resources in A4 Resource Inventory to NEMO.
  version: 1.2.1
  title: A4 Trigger Nemo Update Task API
  contact:
    name: Team Berlinium
    email: DL_Berlinium@telekom.de
    url: http://telekom.de

basePath: /resource-order-resource-inventory/v1/
tags:
  - name: NemoUpdateService
    description: >-
      This service provides a functionality to trigger updates of Logical Resources to NEMO from the A4 Resource Inventory.
schemes:
  - https

paths:
  /updateNemoTask:
    post:
      tags:
        - NemoUpdateService
      summary: Triggers a Resource Update to Nemo
      description: Triggers a Resource Update to Nemo by UUID of the relevant Object
      operationId: updateNemoTask
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: UUID
          description: UUID of the Logical Resource which has to be updated in NEMO
          required: true
          schema:
            $ref: '#/definitions/UpdateNemoTask'
      responses:
        '201':
          description: >-
            trigger request successful created
        '400':
          description: post to NemoUpdateService - Bad Request
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: post to NemoUpdateService - Forbidden
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: post to NemoUpdateService - Internal Server Error
          schema:
            $ref: '#/definitions/Error'
        '502':
          description: NEMO or A4-Resource-Inventory returned an error - Bad Gateway
          schema:
            $ref: '#/definitions/Error'
        '503':
          description: NEMO or A4-Resource-Inventory is not available - Service unavailable
          schema:
            $ref: '#/definitions/Error'
  /asyncUpdateNemoTask:
    post:
      tags:
        - NemoUpdateServiceAsync
      summary: Triggers a Resource Update to Nemo in asyn modus
      description: Triggers a Resource Update to Nemo by a list of UUID of the relevant Objects
      operationId: updateNemoTaskAsync
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: UUIDS
          in: body
          required: true
          description: list of UUIDs of the Logical Resource which has to be updated in NEMO
          schema:
            $ref: '#/definitions/UpdateNemoTaskAsync'
      responses:
        '201':
          description: >-
            trigger request successful created
        '400':
          description: post to NemoUpdateService - Bad Request
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: post to NemoUpdateService - Forbidden
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: post to NemoUpdateService - Internal Server Error
          schema:
            $ref: '#/definitions/Error'
        '502':
          description: NEMO or A4-Resource-Inventory returned an error - Bad Gateway
          schema:
            $ref: '#/definitions/Error'
        '503':
          description: NEMO or A4-Resource-Inventory is not available - Service unavailable
          schema:
            $ref: '#/definitions/Error'
definitions:
  UpdateNemoTask:
    type: object
    properties:
      EntityUuid:
        type: string
        pattern: '[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}'
        description: UUID of the entity (e.g. NetworkElementGroup, NetworkElement...)
    required:
      - EntityUuid
  UpdateNemoTaskAsync:
    type: array
    items:
      type: string
  Error:
    description: Error model from the TMF OpenAPI
    type: object
    properties:
      code:
        type: string
        description: Fehlerbildnummer
      reason:
        type: string
        description: Text that explains the reason for error. This can be shown to a client user.
        example: Http Error
      message:
        type: string
        description: Text that provide more details and corrective actions related to the error. This can be shown to a client user.
        example: Please check your request
