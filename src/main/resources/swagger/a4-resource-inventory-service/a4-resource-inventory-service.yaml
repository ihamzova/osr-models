openapi: 3.0.1
info:
  title: Resource Inventory Management
  description: This is TMF Resource Inventory Management API specification for Access4.0 TMF 639 V4
  contact:
    name: API Support
    url: https://www.example.com/support
    email: DL_Berlinium@telekom.de
  version: 4.1.0
#SECURITY--------------------------------------------------------------------------------------------------
security:
  - OAuth2:
      - giga:cga:all-area-access
tags:
  - name: networkElement
  - name: networkElementGroup
  - name: networkElementLink
  - name: networkElementPort
  - name: nspFtthAccess
  - name: terminationPoint
paths:
  /networkElements:
    get:
      security:
        - OAuth2:
            - 'rori:networkElements:get'
            - 'giga:cga:all-area-access'
      tags:
        - networkElement
      summary: List or find NetworkElement objects
      description: This operation list or find NetworkElement entities
      operationId: listNetworkElement
      parameters:
        - name: fields
          in: query
          description: Comma-separated properties to be provided in response
          schema:
            type: string
        - name: offset
          in: query
          description: Requested index for start of resources to be provided in response
          schema:
            type: integer
        - name: limit
          in: query
          description: Requested number of resources to be provided in response
          schema:
            type: integer
        - name: category
          in: query
          description: For filtering on the base of 'category' field (equality)
          schema:
            type: string
        - name: endsz
          in: query
          description: For filtering on the base of 'endsz' field (equality)
          schema:
            type: string
        - name: fsz
          in: query
          description: For filtering on the base of 'fsz' field (equality)
          schema:
            type: string
        - name: networkElementGroupUuid
          in: query
          description: For filtering on the base of 'networkElementGroupUuid' field
            (equality)
          schema:
            type: string
        - name: vpsz
          in: query
          description: For filtering on the base of 'vpsz' field (equality)
          schema:
            type: string
      responses:
        200:
          description: Success
          headers:
            X-Total-Count:
              description: Total number of items matching criteria
              schema:
                type: integer
            X-Result-Count:
              description: Actual number of items returned in the response body
              schema:
                type: integer
          content:
            application/json;charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NetworkElement'
        400:
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        405:
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        409:
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /networkElements/{id}:
    get:
      security:
        - OAuth2:
            - 'rori:networkElements:get'
            - 'giga:cga:all-area-access'
      tags:
        - networkElement
      summary: Retrieves a NetworkElement by ID
      description: This operation retrieves a NetworkElement entity. Attribute selection
        is enabled for all first level attributes.
      operationId: retrieveNetworkElement
      parameters:
        - name: id
          in: path
          description: Identifier of the NetworkElement
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Comma-separated properties to provide in response
          schema:
            type: string
      responses:
        200:
          description: Success
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/NetworkElement'
        400:
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        405:
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        409:
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /networkElementGroup:
    get:
      security:
        - OAuth2:
            - 'rori:networkElementGroup:get'
            - 'giga:cga:all-area-access'
      tags:
        - networkElementGroup
      summary: List or find NetworkElementGroup objects
      description: This operation list or find NetworkElementGroup entities
      operationId: listNetworkElementGroup
      parameters:
        - name: fields
          in: query
          description: Comma-separated properties to be provided in response
          schema:
            type: string
        - name: offset
          in: query
          description: Requested index for start of resources to be provided in response
          schema:
            type: integer
        - name: limit
          in: query
          description: Requested number of resources to be provided in response
          schema:
            type: integer
        - name: name
          in: query
          description: For filtering on the base of 'name' field (equality)
          schema:
            type: string
      responses:
        200:
          description: Success
          headers:
            X-Total-Count:
              description: Total number of items matching criteria
              schema:
                type: integer
            X-Result-Count:
              description: Actual number of items returned in the response body
              schema:
                type: integer
          content:
            application/json;charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NetworkElementGroup'
        400:
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        405:
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        409:
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /networkElementGroup/{id}:
    get:
      security:
        - OAuth2:
            - 'rori:networkElementGroup:get'
            - 'giga:cga:all-area-access'
      tags:
        - networkElementGroup
      summary: Retrieves a NetworkElementGroup by ID
      description: This operation retrieves a NetworkElementGroup entity. Attribute
        selection is enabled for all first level attributes.
      operationId: retrieveNetworkElementGroup
      parameters:
        - name: id
          in: path
          description: Identifier of the NetworkElementGroup
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Comma-separated properties to provide in response
          schema:
            type: string
      responses:
        200:
          description: Success
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/NetworkElementGroup'
        400:
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        405:
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        409:
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /networkElementLink:
    get:
      security:
        - OAuth2:
            - 'rori:networkElementLink:get'
            - 'giga:cga:all-area-access'
      tags:
        - networkElementLink
      summary: List or find NetworkElementLink objects
      description: This operation list or find NetworkElementLink entities
      operationId: listNetworkElementLink
      parameters:
        - name: fields
          in: query
          description: Comma-separated properties to be provided in response
          schema:
            type: string
        - name: offset
          in: query
          description: Requested index for start of resources to be provided in response
          schema:
            type: integer
        - name: limit
          in: query
          description: Requested number of resources to be provided in response
          schema:
            type: integer
        - name: endszA
          in: query
          description: For filtering on the base of 'endszA' field (equality)
          schema:
            type: string
        - name: endszB
          in: query
          description: For filtering on the base of 'endszB' field (equality)
          schema:
            type: string
        - name: lbz
          in: query
          description: For filtering on the base of 'lbz' field (equality)
          schema:
            type: string
        - name: lsz
          in: query
          description: For filtering on the base of 'lsz' field (equality)
          schema:
            type: string
        - name: networkElementPortUuid
          in: query
          description: For filtering on the base of 'networkElementPortUuid' field (equality)
          schema:
            type: string
        - name: ueWegId
          in: query
          description: For filtering on the base of 'ueWegId' field (equality)
          schema:
            type: string
      responses:
        200:
          description: Success
          headers:
            X-Total-Count:
              description: Total number of items matching criteria
              schema:
                type: integer
            X-Result-Count:
              description: Actual number of items returned in the response body
              schema:
                type: integer
          content:
            application/json;charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NetworkElementLink'
        400:
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        405:
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        409:
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /networkElementLink/{id}:
    get:
      security:
        - OAuth2:
            - 'rori:networkElementLink:get'
            - 'giga:cga:all-area-access'
      tags:
        - networkElementLink
      summary: Retrieves a NetworkElementLink by ID
      description: This operation retrieves a NetworkElementLink entity. Attribute
        selection is enabled for all first level attributes.
      operationId: retrieveNetworkElementLink
      parameters:
        - name: id
          in: path
          description: Identifier of the NetworkElementLink
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Comma-separated properties to provide in response
          schema:
            type: string
      responses:
        200:
          description: Success
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/NetworkElementLink'
        400:
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        405:
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        409:
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /networkElementPort:
    get:
      security:
        - OAuth2:
            - 'rori:networkElementPort:get'
            - 'giga:cga:all-area-access'
      tags:
        - networkElementPort
      summary: List or find NetworkElementPort objects
      description: This operation list or find NetworkElementPort entities
      operationId: listNetworkElementPort
      parameters:
        - name: fields
          in: query
          description: Comma-separated properties to be provided in response
          schema:
            type: string
        - name: offset
          in: query
          description: Requested index for start of resources to be provided in response
          schema:
            type: integer
        - name: limit
          in: query
          description: Requested number of resources to be provided in response
          schema:
            type: integer
        - name: functionalPortLabel
          in: query
          description: For filtering on the base of 'functionalPortLabel' field (equality)
          schema:
            type: string
        - name: networkElementEndsz
          in: query
          description: For filtering on the base of 'networkElementEndsz' field (equality)
          schema:
            type: string
        - name: networkElementUuid
          in: query
          description: For filtering on the base of 'networkElementUuid' field (equality)
          schema:
            type: string
        - name: portNumber
          in: query
          description: For filtering on the base of 'portNumber' field (equality)
          schema:
            type: string
        - name: portType
          in: query
          description: For filtering on the base of 'portType' field (equality)
          schema:
            type: string
      responses:
        200:
          description: Success
          headers:
            X-Total-Count:
              description: Total number of items matching criteria
              schema:
                type: integer
            X-Result-Count:
              description: Actual number of items returned in the response body
              schema:
                type: integer
          content:
            application/json;charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NetworkElementPort'
        400:
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        405:
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        409:
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /networkElementPort/{id}:
    get:
      security:
        - OAuth2:
            - 'rori:networkElementPort:get'
            - 'giga:cga:all-area-access'
      tags:
        - networkElementPort
      summary: Retrieves a NetworkElementPort by ID
      description: This operation retrieves a NetworkElementPort entity. Attribute
        selection is enabled for all first level attributes.
      operationId: retrieveNetworkElementPort
      parameters:
        - name: id
          in: path
          description: Identifier of the NetworkElementPort
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Comma-separated properties to provide in response
          schema:
            type: string
      responses:
        200:
          description: Success
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/NetworkElementPort'
        400:
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        405:
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        409:
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /nspFtthAccess:
    get:
      security:
        - OAuth2:
            - 'rori:nspFtthAccess:get'
            - 'giga:cga:all-area-access'
      tags:
        - nspFtthAccess
      summary: List or find NspFtthAccess objects
      description: This operation list or find NspFtthAccess entities
      operationId: listNspFtthAccess
      parameters:
        - name: fields
          in: query
          description: Comma-separated properties to be provided in response
          schema:
            type: string
        - name: offset
          in: query
          description: Requested index for start of resources to be provided in response
          schema:
            type: integer
        - name: limit
          in: query
          description: Requested number of resources to be provided in response
          schema:
            type: integer
        - name: lineId
          in: query
          description: For filtering on the base of 'lineId' field (equality)
          schema:
            type: string
        - name: ontSerialNumber
          in: query
          description: For filtering on the base of 'ontSerialNumber' field (equality)
          schema:
            type: string
        - name: terminationPointUuid
          in: query
          description: For filtering on the base of 'terminationPointUuid' field (equality)
          schema:
            type: string
      responses:
        200:
          description: Success
          headers:
            X-Total-Count:
              description: Total number of items matching criteria
              schema:
                type: integer
            X-Result-Count:
              description: Actual number of items returned in the response body
              schema:
                type: integer
          content:
            application/json;charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NspFtthAccess'
        400:
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        405:
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        409:
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /nspFtthAccess/{id}:
    get:
      security:
        - OAuth2:
            - 'rori:nspFtthAccess:get'
            - 'giga:cga:all-area-access'
      tags:
        - nspFtthAccess
      summary: Retrieves a NspFtthAccess by ID
      description: This operation retrieves a NspFtthAccess entity. Attribute selection
        is enabled for all first level attributes.
      operationId: retrieveNspFtthAccess
      parameters:
        - name: id
          in: path
          description: Identifier of the NspFtthAccess
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Comma-separated properties to provide in response
          schema:
            type: string
      responses:
        200:
          description: Success
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/NspFtthAccess'
        400:
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        405:
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        409:
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /terminationPoint:
    get:
      security:
        - OAuth2:
            - 'rori:terminationPoint:get'
            - 'giga:cga:all-area-access'
      tags:
        - terminationPoint
      summary: List or find TerminationPoint objects
      description: This operation list or find TerminationPoint entities
      operationId: listTerminationPoint
      parameters:
        - name: fields
          in: query
          description: Comma-separated properties to be provided in response
          schema:
            type: string
        - name: offset
          in: query
          description: Requested index for start of resources to be provided in response
          schema:
            type: integer
        - name: limit
          in: query
          description: Requested number of resources to be provided in response
          schema:
            type: integer
        - name: parentUuid
          in: query
          description: For filtering on the base of 'parentUuid' field (equality)
          schema:
            type: string
      responses:
        200:
          description: Success
          headers:
            X-Total-Count:
              description: Total number of items matching criteria
              schema:
                type: integer
            X-Result-Count:
              description: Actual number of items returned in the response body
              schema:
                type: integer
          content:
            application/json;charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TerminationPoint'
        400:
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        405:
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        409:
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /terminationPoint/{id}:
    get:
      security:
        - OAuth2:
            - 'rori:terminationPoint:get'
            - 'giga:cga:all-area-access'
      tags:
        - terminationPoint
      summary: Retrieves a TerminationPoint by ID
      description: This operation retrieves a TerminationPoint entity. Attribute selection
        is enabled for all first level attributes.
      operationId: retrieveTerminationPoint
      parameters:
        - name: id
          in: path
          description: Identifier of the TerminationPoint
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Comma-separated properties to provide in response
          schema:
            type: string
      responses:
        200:
          description: Success
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/TerminationPoint'
        400:
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        405:
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        409:
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Addressable:
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
      description: Base schema for adressable entities
    AdministrationModeType:
      type: string
      description: AdministrationMode for Access 4.0
    Any:
      type: object
    Attachment:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for this particular attachment
          example: 4aafacbd-11ff-4dc8-b445-305f2215715f
        href:
          type: string
          description: URI for this Attachment
          format: uri
          example: http://host/Attachment/4aafacbd-11ff-4dc8-b445-305f2215715f
        attachmentType:
          type: string
          description: Attachment type such as video, picture
          example: video
        content:
          type: string
          description: The actual contents of the attachment object, if embedded,
            encoded as base64
          format: base64
        description:
          type: string
          description: A narrative text describing the content of the attachment
          example: Photograph of the Product
        mimeType:
          type: string
          description: Attachment mime type such as extension file for video, picture
            and document
        name:
          type: string
          description: The name of the attachment
        url:
          type: string
          description: Uniform Resource Locator, is a web page address (a subset of
            URI)
          format: uri
          example: http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f
        size:
          $ref: '#/components/schemas/Quantity'
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
      description: Complements the description of an element (for instance a product)
        through video, pictures...
    AttachmentRef:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          description: Unique-Identifier for this attachment
        href:
          type: string
          description: URL serving as reference for the attachment resource
          format: uri
        description:
          type: string
          description: A narrative text describing the content of the attachment
        name:
          type: string
          description: Name of the related entity.
        url:
          type: string
          description: Link to the attachment media/content
          format: uri
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: Attachment reference. An attachment complements the description
        of an element (for instance a product) through video, pictures
    AttachmentRefOrValue:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for this particular attachment
          example: 4aafacbd-11ff-4dc8-b445-305f2215715f
        href:
          type: string
          description: URI for this Attachment
          format: uri
          example: http://host/Attachment/4aafacbd-11ff-4dc8-b445-305f2215715f
        attachmentType:
          type: string
          description: Attachment type such as video, picture
          example: video
        content:
          type: string
          description: The actual contents of the attachment object, if embedded,
            encoded as base64
          format: base64
        description:
          type: string
          description: A narrative text describing the content of the attachment
          example: Photograph of the Product
        mimeType:
          type: string
          description: Attachment mime type such as extension file for video, picture
            and document
        name:
          type: string
          description: The name of the attachment
        url:
          type: string
          description: Uniform Resource Locator, is a web page address (a subset of
            URI)
          format: uri
          example: http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f
        size:
          $ref: '#/components/schemas/Quantity'
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: An attachment by value or by reference. An attachment complements
        the description of an element, for example through a document, a video, a
        picture.
    AttachmentRefOrValue_Create:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for this particular attachment
          example: 4aafacbd-11ff-4dc8-b445-305f2215715f
        href:
          type: string
          description: URI for this Attachment
          format: uri
          example: http://host/Attachment/4aafacbd-11ff-4dc8-b445-305f2215715f
        attachmentType:
          type: string
          description: Attachment type such as video, picture
          example: video
        content:
          type: string
          description: The actual contents of the attachment object, if embedded,
            encoded as base64
          format: base64
        description:
          type: string
          description: A narrative text describing the content of the attachment
          example: Photograph of the Product
        mimeType:
          type: string
          description: Attachment mime type such as extension file for video, picture
            and document
        name:
          type: string
          description: The name of the attachment
        url:
          type: string
          description: Uniform Resource Locator, is a web page address (a subset of
            URI)
          format: uri
          example: http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f
        size:
          $ref: '#/components/schemas/Quantity'
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: An attachment by value or by reference. An attachment complements
        the description of an element, for example through a document, a video, a
        picture.
    Characteristic:
      required:
        - name
        - value
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the characteristic
        name:
          type: string
          description: Name of the characteristic
        valueType:
          type: string
          description: Data type of the value of the characteristic
        characteristicRelationship:
          type: array
          items:
            $ref: '#/components/schemas/CharacteristicRelationship'
        value:
          $ref: '#/components/schemas/Any'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description: Describes a given characteristic of an object or entity through
        a name/value pair.
    CharacteristicRelationship:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the characteristic
        relationshipType:
          type: string
          description: The type of relationship
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
      description: Another Characteristic that is related to the current Characteristic;
    ConstraintRef:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          description: reference id to the target constraint
        href:
          type: string
          description: Hyperlink reference to the target constraint
          format: uri
        name:
          type: string
          description: Name given to the constraint
        version:
          type: string
          description: constraint version
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
        '@referredType':
          type: string
          description: The (class) type of the referred constraint
      description: Constraint reference. The Constraint resource represents a policy/rule
        applied to an entity or entity spec.
    EntityRef:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
        name:
          type: string
          description: Name of the related entity.
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: Entity reference schema to be use for all entityRef class.
    Extensible:
      type: object
      properties:
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description: Base Extensible schema for use in TMForum Open-APIs
    Feature:
      required:
        - featureCharacteristic
        - name
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the feature.
        isBundle:
          type: boolean
          description: True if this is a feature group. Default is false.
        isEnabled:
          type: boolean
          description: True if this feature is enabled. Default is true.
        name:
          type: string
          description: This is the name for the feature.
        constraint:
          type: array
          description: This is a list of feature constraints.
          items:
            $ref: '#/components/schemas/ConstraintRef'
        featureCharacteristic:
          minItems: 1
          type: array
          description: This is a list of Characteristics for a particular feature.
          items:
            $ref: '#/components/schemas/Characteristic'
        featureRelationship:
          type: array
          items:
            $ref: '#/components/schemas/FeatureRelationship'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
      description: Configuration feature.
    FeatureRelationship:
      required:
        - name
        - relationshipType
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the target feature.
        name:
          type: string
          description: This is the name of the target feature.
        relationshipType:
          type: string
          description: This is the type of the feature relationship.
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
      description: Configuration feature
    LifecycleStateType:
      type: string
      description: LifecycleStateType for Access 4.0
    Location:
      type: object
      properties:
        address:
          type: string
          description: Human readable string of the address identified by the klsId.
        klsId:
          type: string
          description: 'KLS - Core Information Object (KIO) Locality Server - is a
            central reference data server for localities and network locations. It
            is the master system for holding and changing address and location reference
            data (also network mapping). See also: https://yam.telekom.de/docs/DOC-482263'
        plannedRackId:
          type: string
          description: To be provided
        plannedRackPosition:
          type: string
          description: To be provided
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
      description: Location within Access 4.0 project
    LogicalResource:
      required:
        - href
        - id
      type: object
      properties:
        id:
          type: string
          description: Identifier of an instance of the resource. Required to be unique
            within the resource type.  Used in URIs as the identifier for specific
            instances of a type.
        href:
          type: string
          description: The URI for the object itself.
          format: uri
        category:
          type: string
          description: Category of the concrete resource. e.g Gold, Silver for MSISDN
            concrete resource
        description:
          type: string
          description: free-text description of the resource
        endOperatingDate:
          type: string
          description: A date time( DateTime). The date till the resource is operating
          format: date-time
        name:
          type: string
          description: A string used to give a name to the resource
        resourceVersion:
          type: string
          description: A field that identifies the specific version of an instance
            of a resource.
        startOperatingDate:
          type: string
          description: A date time( DateTime). The date from which the resource is
            operating
          format: date-time
        value:
          type: string
          description: the value of the logical resource. E.g '0746712345' for  MSISDN's
        activationFeature:
          type: array
          description: Configuration features
          items:
            $ref: '#/components/schemas/Feature'
        administrativeState:
          $ref: '#/components/schemas/ResourceAdministrativeStateType'
        attachment:
          type: array
          items:
            $ref: '#/components/schemas/AttachmentRefOrValue'
        note:
          type: array
          items:
            $ref: '#/components/schemas/Note'
        operationalState:
          $ref: '#/components/schemas/ResourceOperationalStateType'
        place:
          $ref: '#/components/schemas/RelatedPlaceRefOrValue'
        relatedParty:
          type: array
          items:
            $ref: '#/components/schemas/RelatedParty'
        resourceCharacteristic:
          type: array
          items:
            $ref: '#/components/schemas/Characteristic'
        resourceRelationship:
          type: array
          items:
            $ref: '#/components/schemas/ResourceRelationship'
        resourceSpecification:
          $ref: '#/components/schemas/ResourceSpecificationRef'
        resourceStatus:
          $ref: '#/components/schemas/ResourceStatusType'
        usageState:
          $ref: '#/components/schemas/ResourceUsageStateType'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
      description: Logic resource is a type of resource that describes the common
        set of attributes shared by all concrete logical resources (e.g. TPE, MSISDN,
        IP Addresses) in the inventory.
    NetworkElement:
      required:
        - href
        - id
      type: object
      properties:
        id:
          type: string
          description: Identifier of an instance of the resource. Required to be unique
            within the resource type.  Used in URIs as the identifier for specific
            instances of a type.
        href:
          type: string
          description: The URI for the object itself.
          format: uri
        address:
          type: string
          description: Human readable string of the address identified by the klsId.
        category:
          type: string
          description: Category of the concrete resource. e.g Gold, Silver for MSISDN
            concrete resource
        creationTime:
          type: string
          description: This optional attribute identifies the DT material number of
            a physical entity before it is installed. Set by OSS based on the retrieved
            material number from the PSL system. This allows the OSS to convert/relate
            the links retrieved from REBELL to functional network element links (NEL).
        description:
          type: string
          description: free-text description of the resource
        endsz:
          type: string
          description: combination vpsz/fsz
        fsz:
          type: string
          description: This attribute contains the functional key number FSZ (Funktionsschlüsselzahl).
            It identifies the class of the device and at the same time provides the
            identification of the function of the network element.
        klsId:
          type: string
          description: 'KLS - Core Information Object (KIO) Locality Server - is a
            central reference data server for localities and network locations. It
            is the master system for holding and changing address and location reference
            data (also network mapping). See also: https://yam.telekom.de/docs/DOC-482263'
        lastUpdateTime:
          type: string
          description: This optional attribute identifies the DT material number of
            a physical entity before it is installed. Set by OSS based on the retrieved
            material number from the PSL system. This allows the OSS to convert/relate
            the links retrieved from REBELL to functional network element links (NEL).
        networkElementGroupUuid:
          type: string
          description: This attribute is for the search by networkElementGroupUuid
        partyId:
          type: string
          description: This attribute defines the partyId of the requesting system.
        plannedMatNumber:
          type: string
          description: This optional attribute identifies the DT material number of
            a physical entity before it is installed. Set by OSS based on the retrieved
            material number from the PSL system. This allows the OSS to convert/relate
            the links retrieved from REBELL to functional network element links (NEL).
        plannedRackId:
          type: string
          description: To be provided
        plannedRackPosition:
          type: string
          description: To be provided
        planningDeviceName:
          type: string
          description: This attribute contains the device name in the planning context.
        specificationVersion:
          type: integer
          description: This attribute contains the version of the class specification.
        type:
          type: string
          description: Contains the value of the name attribute of the NE type instance
            that was used to instantiate the network element.
        vpsz:
          type: string
          description: This attribute contains the connection node key VPSZ (Verbindungspunktschlüsselzahl).
            It logically identifies the site where devices and other connections are
            terminated.
        ztpIdent:
          type: string
          description: This optional attribute contains the zero-touch-provisioning
            identifier set by the installation process (the technician doing the installation
            of the hardware that is targeted to act as this NetworknElement). The
            value is used to map the identifier received from a technical identification
            process (e.g. the client identifier / option 61 field in a DHCP request)
            to the Network Element instance. It must be unique within the NEMO domain.
        administrativeMode:
          $ref: '#/components/schemas/AdministrationModeType'
        lifecycleState:
          $ref: '#/components/schemas/LifecycleStateType'
        operationalState:
          $ref: '#/components/schemas/ResourceOperationalStateType'
        resourceCharacteristic:
          type: array
          items:
            $ref: '#/components/schemas/Characteristic'
        resourceRelationship:
          type: array
          items:
            $ref: '#/components/schemas/ResourceRelationship'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
      description: |-
        NetworkElement within Access 4.0 project
        Skipped properties: activationFeature,attachment,note,place,resourceSpecification,value,startOperatingDate,endOperatingDate,administrativeState,resourceStatus,usageState,name,resourceVersion,relatedParty
    NetworkElementGroup:
      required:
        - href
        - id
      type: object
      properties:
        id:
          type: string
          description: Identifier of an instance of the resource. Required to be unique
            within the resource type.  Used in URIs as the identifier for specific
            instances of a type.
        href:
          type: string
          description: The URI for the object itself.
          format: uri
        creationTime:
          type: string
          description: This optional attribute identifies the DT material number of
            a physical entity before it is installed. Set by OSS based on the retrieved
            material number from the PSL system. This allows the OSS to convert/relate
            the links retrieved from REBELL to functional network element links (NEL).
        description:
          type: string
          description: free-text description of the resource
        lastUpdateTime:
          type: string
          description: This optional attribute identifies the DT material number of
            a physical entity before it is installed. Set by OSS based on the retrieved
            material number from the PSL system. This allows the OSS to convert/relate
            the links retrieved from REBELL to functional network element links (NEL).
        name:
          type: string
          description: A string used to give a name to the resource
        partyId:
          type: string
          description: This attribute defines the partyId of the requesting system.
        specificationVersion:
          type: integer
          description: This attribute contains the version of the class specification.
        type:
          type: string
          description: This attribute identifies the type of the network element group.
        lifecycleState:
          $ref: '#/components/schemas/LifecycleStateType'
        operationalState:
          $ref: '#/components/schemas/ResourceOperationalStateType'
        resourceCharacteristic:
          type: array
          items:
            $ref: '#/components/schemas/Characteristic'
        resourceRelationship:
          type: array
          items:
            $ref: '#/components/schemas/ResourceRelationship'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
      description: |-
        NetworkElementGroup within Access 4.0 project
        Skipped properties: activationFeature,attachment,note,place,resourceSpecification,value,startOperatingDate,endOperatingDate,administrativeState,resourceStatus,usageState,category,resourceVersion,relatedParty
    NetworkElementLink:
      required:
        - href
        - id
      type: object
      properties:
        id:
          type: string
          description: Identifier of an instance of the resource. Required to be unique
            within the resource type.  Used in URIs as the identifier for specific
            instances of a type.
        href:
          type: string
          description: The URI for the object itself.
          format: uri
        creationTime:
          type: string
          description: This optional attribute identifies the DT material number of
            a physical entity before it is installed. Set by OSS based on the retrieved
            material number from the PSL system. This allows the OSS to convert/relate
            the links retrieved from REBELL to functional network element links (NEL).
        description:
          type: string
          description: free-text description of the resource
        endszA:
          type: string
          description: Link to NE ENDSZ A
        endszB:
          type: string
          description: Link to NE ENDSZ B
        lastUpdateTime:
          type: string
          description: This optional attribute identifies the DT material number of
            a physical entity before it is installed. Set by OSS based on the retrieved
            material number from the PSL system. This allows the OSS to convert/relate
            the links retrieved from REBELL to functional network element links (NEL).
        lbz:
          type: string
          description: 'Leitungsbezeichnung in Rebell  Die Leitungsbezeichnung (LBZ)
            bzw. die Leitungsbuchungsnummer (LBuNr) ist eine Zeichenkette, die sich
            aus der LSZ (92Z), der OrdNr (1), der LSZ-Erg (EG), dem ZuBu, dem KennBu,
            der EndSZ der Endstelle A und der EndSZ der Endstelle B zusammensetzt.
            Beispiel: 92Z/1 EG 49/211/79/38 – 49/211/80/38 Langtext-Schreibweise:
            92Z/1 EG Düsseldorf 79/38 – Düsseldorf 80/38 <LSZ> / <order number 10
            digits with leading zeros> - <EndSzA> - <EndSzB> example: 4C1 / 0000000005-49
            / 711/880001 / 7MC1-49 / 911/85 / 7ZJA'
        lsz:
          type: string
          description: 'Leitungsschlüsselzahl This attribute defines the type of the
            link. The lsz is part of the lbz (Leitungsbezeichnung). LSZ values used
            in A4: https://gard.telekom.de/gardwiki/pages/viewpage.action?pageId=293228420
            Note: A link in an FTTB PON tree does not have an lsz.'
        orderNumber:
          type: string
          description: This attribute defines ...? The order number is part of the
            lbz (Leitungsbezeichnung).
        partyId:
          type: string
          description: This attribute defines the partyId of the requesting system.
        pluralId:
          type: string
          description: This attribute contains the identifier of the link in Plural
            (only FYI for user).
        specificationVersion:
          type: integer
          description: This attribute contains the version of the class specification.
        ueWegId:
          type: string
          description: Übertragungsweg-ID This attribute contains the unique identificator
            of the link. (Line-ID?, LSZ?)
        lifecycleState:
          $ref: '#/components/schemas/LifecycleStateType'
        operationalState:
          $ref: '#/components/schemas/ResourceOperationalStateType'
        resourceCharacteristic:
          type: array
          items:
            $ref: '#/components/schemas/Characteristic'
        resourceRelationship:
          type: array
          items:
            $ref: '#/components/schemas/ResourceRelationship'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
      description: |-
        NetworkElementLink within Access 4.0 project
        Skipped properties: activationFeature,attachment,note,place,resourceSpecification,value,startOperatingDate,endOperatingDate,administrativeState,resourceStatus,usageState,category,name,resourceVersion,relatedParty,networkElementPortUuid
    NetworkElementPort:
      required:
        - href
        - id
      type: object
      properties:
        id:
          type: string
          description: Identifier of an instance of the resource. Required to be unique
            within the resource type.  Used in URIs as the identifier for specific
            instances of a type.
        href:
          type: string
          description: The URI for the object itself.
          format: uri
        creationTime:
          type: string
          description: This optional attribute identifies the DT material number of
            a physical entity before it is installed. Set by OSS based on the retrieved
            material number from the PSL system. This allows the OSS to convert/relate
            the links retrieved from REBELL to functional network element links (NEL).
        description:
          type: string
          description: free-text description of the resource
        functionalPortLabel:
          type: string
          description: This attribute contains an identifier for the port function
            as defined by the portList:PortSpec from the NetworkElementType catalog.
        lastUpdateTime:
          type: string
          description: This optional attribute identifies the DT material number of
            a physical entity before it is installed. Set by OSS based on the retrieved
            material number from the PSL system. This allows the OSS to convert/relate
            the links retrieved from REBELL to functional network element links (NEL).
        networkElementEndsz:
          type: string
          description: This attribute is the Endschlüsselzahl of the related NetworkElement
        networkElementUuid:
          type: string
          description: This attribute is for search by networkElementUuid
        partyId:
          type: string
          description: This attribute defines the partyId of the requesting system.
        portNumber:
          type: string
          description: This attribute defines the portNumber of NetworkElementPort.
            (This is a part of the functionPortLabel)
        portType:
          type: string
          description: This attribute defines the type of the NetworkElementPort (usually
            related to the type of technical interface of the hardware that acts as
            the NetworkElement). The value is taken from the portList:PortSpec from
            the NetworkElementType catalog.
        specificationVersion:
          type: integer
          description: This attribute contains the version of the class specification.
        administrativeMode:
          $ref: '#/components/schemas/AdministrationModeType'
        operationalState:
          $ref: '#/components/schemas/ResourceOperationalStateType'
        resourceCharacteristic:
          type: array
          items:
            $ref: '#/components/schemas/Characteristic'
        resourceRelationship:
          type: array
          items:
            $ref: '#/components/schemas/ResourceRelationship'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
      description: |-
        NetworkElementPort within Access 4.0 project
        Skipped properties: activationFeature,attachment,note,place,resourceSpecification,value,startOperatingDate,endOperatingDate,administrativeState,resourceStatus,usageState,category,name,resourceVersion,relatedParty
    NetworkServiceProfile:
      required:
        - href
        - id
      type: object
      properties:
        id:
          type: string
          description: Identifier of an instance of the resource. Required to be unique
            within the resource type.  Used in URIs as the identifier for specific
            instances of a type.
        href:
          type: string
          description: The URI for the object itself.
          format: uri
        category:
          type: string
          description: Category of the concrete resource. e.g Gold, Silver for MSISDN
            concrete resource
        creationTime:
          type: string
          description: This optional attribute identifies the DT material number of
            a physical entity before it is installed. Set by OSS based on the retrieved
            material number from the PSL system. This allows the OSS to convert/relate
            the links retrieved from REBELL to functional network element links (NEL).
        description:
          type: string
          description: free-text description of the resource
        endOperatingDate:
          type: string
          description: A date time( DateTime). The date till the resource is operating
          format: date-time
        lastUpdateTime:
          type: string
          description: This optional attribute identifies the DT material number of
            a physical entity before it is installed. Set by OSS based on the retrieved
            material number from the PSL system. This allows the OSS to convert/relate
            the links retrieved from REBELL to functional network element links (NEL).
        name:
          type: string
          description: A string used to give a name to the resource
        partyId:
          type: string
          description: This attribute defines the partyId of the requesting system.
        productionScheme:
          type: string
          description: This attribute defines the customer segment of the service.
        resourceVersion:
          type: string
          description: A field that identifies the specific version of an instance
            of a resource.
        specificationVersion:
          type: integer
          description: This attribute contains the version of the class specification.
        startOperatingDate:
          type: string
          description: A date time( DateTime). The date from which the resource is
            operating
          format: date-time
        value:
          type: string
          description: the value of the logical resource. E.g '0746712345' for  MSISDN's
        activationFeature:
          type: array
          description: Configuration features
          items:
            $ref: '#/components/schemas/Feature'
        administrativeMode:
          $ref: '#/components/schemas/AdministrationModeType'
        administrativeState:
          $ref: '#/components/schemas/ResourceAdministrativeStateType'
        attachment:
          type: array
          items:
            $ref: '#/components/schemas/AttachmentRefOrValue'
        lifecycleState:
          $ref: '#/components/schemas/LifecycleStateType'
        note:
          type: array
          items:
            $ref: '#/components/schemas/Note'
        operationalState:
          $ref: '#/components/schemas/ResourceOperationalStateType'
        place:
          $ref: '#/components/schemas/RelatedPlaceRefOrValue'
        relatedParty:
          type: array
          items:
            $ref: '#/components/schemas/RelatedParty'
        resourceCharacteristic:
          type: array
          items:
            $ref: '#/components/schemas/Characteristic'
        resourceRelationship:
          type: array
          items:
            $ref: '#/components/schemas/ResourceRelationship'
        resourceSpecification:
          $ref: '#/components/schemas/ResourceSpecificationRef'
        resourceStatus:
          $ref: '#/components/schemas/ResourceStatusType'
        usageState:
          $ref: '#/components/schemas/ResourceUsageStateType'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
      description: NetworkServiceProfile within Access 4.0 project
    Note:
      type: object
      properties:
        id:
          type: string
          description: Identifier of the note within its containing entity (may or
            may not be globally unique, depending on provider implementation)
        author:
          type: string
          description: Author of the note
        date:
          type: string
          description: Date of the note
          format: date-time
        text:
          type: string
          description: Text of the note
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
      description: Extra information about a given entity
    NspFtthAccess:
      required:
        - href
        - id
      type: object
      properties:
        id:
          type: string
          description: Identifier of an instance of the resource. Required to be unique
            within the resource type.  Used in URIs as the identifier for specific
            instances of a type.
        href:
          type: string
          description: The URI for the object itself.
          format: uri
        creationTime:
          type: string
          description: This optional attribute identifies the DT material number of
            a physical entity before it is installed. Set by OSS based on the retrieved
            material number from the PSL system. This allows the OSS to convert/relate
            the links retrieved from REBELL to functional network element links (NEL).
        description:
          type: string
          description: free-text description of the resource
        lastUpdateTime:
          type: string
          description: This optional attribute identifies the DT material number of
            a physical entity before it is installed. Set by OSS based on the retrieved
            material number from the PSL system. This allows the OSS to convert/relate
            the links retrieved from REBELL to functional network element links (NEL).
        lineId:
          type: string
          description: This attribute contains the line identifier which provides
            a functional key to the Access Line handled in the OSS.
        ontSerialNumber:
          type: string
          description: This optional attribute contains - in case of FTTH - the serial
            number of the ONT (CPE). The number is provided by the cutomer.
        partyId:
          type: string
          description: This attribute defines the partyId of the requesting system.
        productionScheme:
          type: string
          description: This attribute defines the customer segment of the service.
        specificationVersion:
          type: integer
          description: This attribute contains the version of the class specification.
        terminationPointUuid:
          type: string
          description: This attribute is for the search by TP uuid
        administrativeMode:
          $ref: '#/components/schemas/AdministrationModeType'
        lifecycleState:
          $ref: '#/components/schemas/LifecycleStateType'
        operationalState:
          $ref: '#/components/schemas/ResourceOperationalStateType'
        resourceCharacteristic:
          type: array
          items:
            $ref: '#/components/schemas/Characteristic'
        resourceRelationship:
          type: array
          items:
            $ref: '#/components/schemas/ResourceRelationship'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
      description: |-
        NspFtthAccess within Access 4.0 project
        Skipped properties: activationFeature,attachment,note,place,resourceSpecification,value,startOperatingDate,endOperatingDate,administrativeState,resourceStatus,usageState,category,name,resourceVersion,relatedParty
    Place:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the place
        href:
          type: string
          description: Unique reference of the place
          format: uri
        name:
          type: string
          description: A user-friendly name for the place, such as [Paris Store],
            [London Store], [Main Home]
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
      description: Place reference. Place defines the places where the products are
        sold or delivered.
    PlaceRef:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
        name:
          type: string
          description: Name of the related entity.
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: Place reference. PlaceRef defines the placeRefs where the products
        are sold or delivered.
    Quantity:
      type: object
      properties:
        amount:
          type: number
          description: Numeric value in a given unit
          format: float
          default: 1.0
        units:
          type: string
          description: Unit
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
      description: An amount in a given unit
    RelatedParty:
      required:
        - '@referredType'
        - id
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
        name:
          type: string
          description: Name of the related entity.
        role:
          type: string
          description: Role played by the related party
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: Related Entity reference. A related party defines party or party
        role linked to a specific entity.
    RelatedPlaceRefOrValue:
      required:
        - role
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the place
        href:
          type: string
          description: Unique reference of the place
          format: uri
        name:
          type: string
          description: A user-friendly name for the place, such as [Paris Store],
            [London Store], [Main Home]
        role:
          type: string
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: Related Entity reference. A related place defines a place described
        by reference or by value linked to a specific entity. The polymorphic attributes
        @type, @schemaLocation & @referredType are related to the place entity and
        not the RelatedPlaceRefOrValue class itself
    RelatedPlaceRefOrValue_Create:
      required:
        - role
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the place
        href:
          type: string
          description: Unique reference of the place
          format: uri
        name:
          type: string
          description: A user-friendly name for the place, such as [Paris Store],
            [London Store], [Main Home]
        role:
          type: string
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: Related Entity reference. A related place defines a place described
        by reference or by value linked to a specific entity. The polymorphic attributes
        @type, @schemaLocation & @referredType are related to the place entity and
        not the RelatedPlaceRefOrValue class itself
    Resource:
      required:
        - href
        - id
      type: object
      properties:
        id:
          type: string
          description: Identifier of an instance of the resource. Required to be unique
            within the resource type.  Used in URIs as the identifier for specific
            instances of a type.
        href:
          type: string
          description: The URI for the object itself.
          format: uri
        category:
          type: string
          description: Category of the concrete resource. e.g Gold, Silver for MSISDN
            concrete resource
        description:
          type: string
          description: free-text description of the resource
        endOperatingDate:
          type: string
          description: A date time( DateTime). The date till the resource is operating
          format: date-time
        name:
          type: string
          description: A string used to give a name to the resource
        resourceVersion:
          type: string
          description: A field that identifies the specific version of an instance
            of a resource.
        startOperatingDate:
          type: string
          description: A date time( DateTime). The date from which the resource is
            operating
          format: date-time
        activationFeature:
          type: array
          description: Configuration features
          items:
            $ref: '#/components/schemas/Feature'
        administrativeState:
          $ref: '#/components/schemas/ResourceAdministrativeStateType'
        attachment:
          type: array
          items:
            $ref: '#/components/schemas/AttachmentRefOrValue'
        note:
          type: array
          items:
            $ref: '#/components/schemas/Note'
        operationalState:
          $ref: '#/components/schemas/ResourceOperationalStateType'
        place:
          $ref: '#/components/schemas/RelatedPlaceRefOrValue'
        relatedParty:
          type: array
          items:
            $ref: '#/components/schemas/RelatedParty'
        resourceCharacteristic:
          type: array
          items:
            $ref: '#/components/schemas/Characteristic'
        resourceRelationship:
          type: array
          items:
            $ref: '#/components/schemas/ResourceRelationship'
        resourceSpecification:
          $ref: '#/components/schemas/ResourceSpecificationRef'
        resourceStatus:
          $ref: '#/components/schemas/ResourceStatusType'
        usageState:
          $ref: '#/components/schemas/ResourceUsageStateType'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
      description: Resource is an abstract entity that describes the common set of
        attributes shared by all concrete resources (e.g. TPE, EQUIPMENT) in the inventory.
    ResourceAdministrativeStateType:
      type: string
      description: ResourceAdministrativeStateType
    ResourceOperationalStateType:
      type: string
      description: OperationalStateType for Access 4.0
    ResourceRef:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
        name:
          type: string
          description: Name of the related entity.
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
    ResourceRefOrValue:
      required:
        - href
        - id
      type: object
      properties:
        id:
          type: string
          description: Identifier of an instance of the resource. Required to be unique
            within the resource type.  Used in URIs as the identifier for specific
            instances of a type.
        href:
          type: string
          description: The URI for the object itself.
          format: uri
        category:
          type: string
          description: Category of the concrete resource. e.g Gold, Silver for MSISDN
            concrete resource
        description:
          type: string
          description: free-text description of the resource
        endOperatingDate:
          type: string
          description: A date time( DateTime). The date till the resource is operating
          format: date-time
        name:
          type: string
          description: A string used to give a name to the resource
        resourceVersion:
          type: string
          description: A field that identifies the specific version of an instance
            of a resource.
        startOperatingDate:
          type: string
          description: A date time( DateTime). The date from which the resource is
            operating
          format: date-time
        activationFeature:
          type: array
          description: Configuration features
          items:
            $ref: '#/components/schemas/Feature'
        administrativeState:
          $ref: '#/components/schemas/ResourceAdministrativeStateType'
        attachment:
          type: array
          items:
            $ref: '#/components/schemas/AttachmentRefOrValue'
        note:
          type: array
          items:
            $ref: '#/components/schemas/Note'
        operationalState:
          $ref: '#/components/schemas/ResourceOperationalStateType'
        place:
          $ref: '#/components/schemas/RelatedPlaceRefOrValue'
        relatedParty:
          type: array
          items:
            $ref: '#/components/schemas/RelatedParty'
        resourceCharacteristic:
          type: array
          items:
            $ref: '#/components/schemas/Characteristic'
        resourceRelationship:
          type: array
          items:
            $ref: '#/components/schemas/ResourceRelationship'
        resourceSpecification:
          $ref: '#/components/schemas/ResourceSpecificationRef'
        resourceStatus:
          $ref: '#/components/schemas/ResourceStatusType'
        usageState:
          $ref: '#/components/schemas/ResourceUsageStateType'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: Resource is an abstract entity that describes the common set of
        attributes shared by all concrete resources. The polymorphic attributes @type,
        @schemaLocation & @referredType are related to the Resource entity and not
        the related ResourceRefOrValue class itself
    ResourceRefOrValue_Create:
      type: object
      properties:
        id:
          type: string
          description: Identifier of an instance of the resource. Required to be unique
            within the resource type.  Used in URIs as the identifier for specific
            instances of a type.
        href:
          type: string
          description: The URI for the object itself.
          format: uri
        category:
          type: string
          description: Category of the concrete resource. e.g Gold, Silver for MSISDN
            concrete resource
        description:
          type: string
          description: free-text description of the resource
        endOperatingDate:
          type: string
          description: A date time( DateTime). The date till the resource is operating
          format: date-time
        name:
          type: string
          description: A string used to give a name to the resource
        resourceVersion:
          type: string
          description: A field that identifies the specific version of an instance
            of a resource.
        startOperatingDate:
          type: string
          description: A date time( DateTime). The date from which the resource is
            operating
          format: date-time
        activationFeature:
          type: array
          description: Configuration features
          items:
            $ref: '#/components/schemas/Feature'
        administrativeState:
          $ref: '#/components/schemas/ResourceAdministrativeStateType'
        attachment:
          type: array
          items:
            $ref: '#/components/schemas/AttachmentRefOrValue_Create'
        note:
          type: array
          items:
            $ref: '#/components/schemas/Note'
        operationalState:
          $ref: '#/components/schemas/ResourceOperationalStateType'
        place:
          $ref: '#/components/schemas/RelatedPlaceRefOrValue_Create'
        relatedParty:
          type: array
          items:
            $ref: '#/components/schemas/RelatedParty'
        resourceCharacteristic:
          type: array
          items:
            $ref: '#/components/schemas/Characteristic'
        resourceRelationship:
          type: array
          items:
            $ref: '#/components/schemas/ResourceRelationship'
        resourceSpecification:
          $ref: '#/components/schemas/ResourceSpecificationRef'
        resourceStatus:
          $ref: '#/components/schemas/ResourceStatusType'
        usageState:
          $ref: '#/components/schemas/ResourceUsageStateType'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: Resource is an abstract entity that describes the common set of
        attributes shared by all concrete resources. The polymorphic attributes @type,
        @schemaLocation & @referredType are related to the Resource entity and not
        the related ResourceRefOrValue class itself
    ResourceRelationship:
      required:
        - relationshipType
        - resource
      type: object
      properties:
        relationshipType:
          type: string
          description: 'Type of the resource relationship, such as [bundled] if the
            resource is a bundle and you want to describe the bundled resources inside
            this bundle; [reliesOn] if the resource needs another already owned resource
            to rely on (eg: an option on an already owned mobile access resource)
            [targets] or [isTargeted] (depending on the way of expressing the link)
            for any other kind of links that may be useful'
          example: bundled
        resource:
          $ref: '#/components/schemas/ResourceRefOrValue'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
      description: Linked resources to the one instantiate, such as [bundled] if the
        resource is a bundle and you want to describe the bundled resources inside
        this bundle; [reliesOn] if the resource needs another already owned resource
        to rely on (e.g. an option on an already owned mobile access resource) [targets]
        or [isTargeted] (depending on the way of expressing the link) for any other
        kind of links that may be useful
    ResourceSpecificationRef:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
        name:
          type: string
          description: Name of the related entity.
        version:
          type: string
          description: Resource Specification version
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: |-
        Resources are physical or non-physical components (or some combination of these) within an enterprise's infrastructure or inventory. They are typically consumed or used by services (for example a physical port assigned to a service) or contribute to the realization of a Product (for example, a SIM card). They can be drawn from the Application, Computing and Network domains, and include, for example, Network Elements, software, IT systems, content and information, and technology components.
        A ResourceSpecification is an abstract base class for representing a generic means for implementing a particular type of Resource. In essence, a ResourceSpecification defines the common attributes and relationships of a set of related Resources, while Resource defines a specific instance that is based on a particular ResourceSpecification.
    ResourceStatusType:
      type: string
      description: ResourceStatusType
    ResourceUsageStateType:
      type: string
      description: ResourceUsageStateType
    TerminationPoint:
      required:
        - href
        - id
      type: object
      properties:
        id:
          type: string
          description: Identifier of an instance of the resource. Required to be unique
            within the resource type.  Used in URIs as the identifier for specific
            instances of a type.
        href:
          type: string
          description: The URI for the object itself.
          format: uri
        creationTime:
          type: string
          description: This optional attribute identifies the DT material number of
            a physical entity before it is installed. Set by OSS based on the retrieved
            material number from the PSL system. This allows the OSS to convert/relate
            the links retrieved from REBELL to functional network element links (NEL).
        description:
          type: string
          description: free-text description of the resource
        lastUpdateTime:
          type: string
          description: This optional attribute identifies the DT material number of
            a physical entity before it is installed. Set by OSS based on the retrieved
            material number from the PSL system. This allows the OSS to convert/relate
            the links retrieved from REBELL to functional network element links (NEL).
        lockedForNspUsage:
          type: boolean
          description: This attribute defines if further network service profiles
            can be assigned to the termination point (true = cannot be assigned).
            Will be set via NEMO-GUI.
        parentUuid:
          type: string
          description: search for parent by uuid
        partyId:
          type: string
          description: This attribute defines the partyId of the requesting system.
        specificationVersion:
          type: integer
          description: This attribute contains the version of the class specification.
        state:
          type: string
          description: This attribute defines the state of the termination point.
            The value is defined by A4 and notified to the OSS.
        supportedDiagnoses:
          type: string
          description: 'Lists the supported diagnoses. The values are restricted to
            the diagnoses defined in the diagnosis catalog. The diagnoses catalog
            is defined by A4 and known in OpDiNG. Note: The diagnoses supported for
            a service (NSP) are defined by the sum of diagnoses of all TPs associated
            to the NSP.'
        supportedDiagnosesVersions:
          type: string
          description: comma-separated list of specification version of diagnoses
        type:
          type: string
          description: This attribute defines the kind of endpoint the termination
            point is representing.
        resourceCharacteristic:
          type: array
          items:
            $ref: '#/components/schemas/Characteristic'
        resourceRelationship:
          type: array
          items:
            $ref: '#/components/schemas/ResourceRelationship'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
      description: |-
        TerminationPoint. within Access 4.0 project
        Skipped properties: activationFeature,attachment,note,place,resourceSpecification,value,startOperatingDate,endOperatingDate,administrativeState,resourceStatus,usageState,operationalState,category,name,resourceVersion,relatedParty
    TimePeriod:
      type: object
      properties:
        endDateTime:
          type: string
          description: End of the time period, using IETC-RFC-3339 format
          format: date-time
          example: 1985-04-12T23:20:50.52Z
        startDateTime:
          type: string
          description: Start of the time period, using IETC-RFC-3339 format
          format: date-time
          example: 1985-04-12T23:20:50.52Z
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
      description: A period of time, either as a deadline (endDateTime only) a startDateTime
        only, or both
    Error:
      required:
        - code
        - reason
      type: object
      properties:
        code:
          type: string
          description: Application relevant detail, defined in the API or a common
            list.
        reason:
          type: string
          description: Explanation of the reason for the error which can be shown
            to a client user.
        message:
          type: string
          description: More details and corrective actions related to the error which
            can be shown to a client user.
        status:
          type: string
          description: HTTP Error code extension
        referenceError:
          type: string
          description: URI of documentation describing the error.
          format: uri
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class.
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name.
      description: Used when an API throws an Error, typically with a HTTP error response-code
        (3xx, 4xx, 5xx)
  securitySchemes:
    OAuth2:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: 'https://rhsso-develop.magic.telekom.de/auth/realms/GigabitHub/protocol/openid-connect/token'
          scopes:
            'giga:cga:all-area-access': General Access Scope
            'rori:networkElements:get': GET Scope
            'rori:networkElementGroup:get': GET Scope
            'rori:networkElementLink:get': GET Scope
            'rori:networkElementPort:get': GET Scope
            'rori:nspFtthAccess:get': GET Scope
            'rori:terminationPoint:get': GET Scope
