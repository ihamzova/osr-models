openapi: 3.0.1
info:
  title: Resource Ordering
  description: 'TMF652: The Resource Order API provides a standard mechanism for creating/placing,
    updating, canceling and deleting a Resource Order with all necessary order parameters.
    A Resource Order is based on a resource candidate that is defined in the resource
    catalog. A Resource candidate makes a Resource Specification available to a resource
    catalog. Resources can be logical (eg: MSISDN, IP-addresses) or physical (eg:
    cables, routers, firewalls).'
  version: 4.0.2
servers:
  - url: 'http://localhost'
#SECURITY--------------------------------------------------------------------------------------------------
security:
  - OAuth2:
      - giga:cga:all-area-access
tags:
  - name: resourceOrder
paths:
  /reqcb/resource-order-resource-inventory/v1/resourceOrder:
    post:
      security:
        - OAuth2:
            - 'rori:resourceOrder:write'
            - 'giga:cga:all-area-access'
      tags:
        - resourceOrder
      summary: Creates a ResourceOrder and used for Callback
      description: This operation creates a ResourceOrder entity. The basic structure
        is the same in the callback and the request, so we summerized both.
      operationId: createResourceOrder
      parameters:
        - name: X-Callback-Correlation-Id
          in: header
          required: true
          schema:
            type: string
        - name: X-Callback-Url
          in: header
          schema:
            type: string
        - name: X-Request-ID
          in: header
          schema:
            type: string
      requestBody:
        description: The ResourceOrder to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/ResourceOrder'
        required: true
      responses:
        201:
          description: Created
        400:
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        405:
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        409:
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
      callbacks:
        resourceOrderCallback:
          '{$request.header.X-Callback-Url}':
            post:
              summary: ResourceOrder callback
              parameters:
                - name: X-Callback-Correlation-Id
                  in: header
                  description: Value for identifying a single transaction across multiple services
                    up to the backend. Usually set by the originating consumer
                  required: true
                  schema:
                    type: string
                    format: uuid
              requestBody:
                description: Result of resource-order-processing
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/ResourceOrder'
              responses:
                202:
                  description: resource-order-process done
      x-codegen-request-body-name: resourceOrder
components:
  schemas:
    Addressable:
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
      description: Base schema for adressable entities
    Any:
      type: object
    AppointmentRef:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          description: The identifier of the referred appointment
        href:
          type: string
          description: The reference of the appointment
        description:
          type: string
          description: An explanatory text regarding the appointment made with a party
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation
      description: Refers an appointment, such as a Customer presentation or internal
        meeting or site visit
    Attachment:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for this particular attachment
          example: 4aafacbd-11ff-4dc8-b445-305f2215715f
        href:
          type: string
          description: URI for this Attachment
          format: uri
          example: http://host/Attachment/4aafacbd-11ff-4dc8-b445-305f2215715f
        attachmentType:
          type: string
          description: Attachment type such as video, picture
          example: video
        content:
          type: string
          description: The actual contents of the attachment object, if embedded,
            encoded as base64
          format: base64
        description:
          type: string
          description: A narrative text describing the content of the attachment
          example: Photograph of the Product
        mimeType:
          type: string
          description: Attachment mime type such as extension file for video, picture
            and document
        name:
          type: string
          description: The name of the attachment
        url:
          type: string
          description: Uniform Resource Locator, is a web page address (a subset of
            URI)
          format: uri
          example: http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f
        size:
          $ref: '#/components/schemas/Quantity'
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
      description: Complements the description of an element (for instance a product)
        through video, pictures...
    AttachmentRef:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          description: Unique-Identifier for this attachment
        href:
          type: string
          description: URL serving as reference for the attachment resource
          format: uri
        description:
          type: string
          description: A narrative text describing the content of the attachment
        name:
          type: string
          description: Name of the related entity.
        url:
          type: string
          description: Link to the attachment media/content
          format: uri
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: Attachment reference. An attachment complements the description
        of an element (for instance a product) through video, pictures
    AttachmentRefOrValue:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for this particular attachment
          example: 4aafacbd-11ff-4dc8-b445-305f2215715f
        href:
          type: string
          description: URI for this Attachment
          format: uri
          example: http://host/Attachment/4aafacbd-11ff-4dc8-b445-305f2215715f
        attachmentType:
          type: string
          description: Attachment type such as video, picture
          example: video
        content:
          type: string
          description: The actual contents of the attachment object, if embedded,
            encoded as base64
          format: base64
        description:
          type: string
          description: A narrative text describing the content of the attachment
          example: Photograph of the Product
        mimeType:
          type: string
          description: Attachment mime type such as extension file for video, picture
            and document
        name:
          type: string
          description: The name of the attachment
        url:
          type: string
          description: Uniform Resource Locator, is a web page address (a subset of
            URI)
          format: uri
          example: http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f
        size:
          $ref: '#/components/schemas/Quantity'
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: An attachment by value or by reference. An attachment complements
        the description of an element, for example through a document, a video, a
        picture.
    AttachmentRefOrValue_Create:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for this particular attachment
          example: 4aafacbd-11ff-4dc8-b445-305f2215715f
        href:
          type: string
          description: URI for this Attachment
          format: uri
          example: http://host/Attachment/4aafacbd-11ff-4dc8-b445-305f2215715f
        attachmentType:
          type: string
          description: Attachment type such as video, picture
          example: video
        content:
          type: string
          description: The actual contents of the attachment object, if embedded,
            encoded as base64
          format: base64
        description:
          type: string
          description: A narrative text describing the content of the attachment
          example: Photograph of the Product
        mimeType:
          type: string
          description: Attachment mime type such as extension file for video, picture
            and document
        name:
          type: string
          description: The name of the attachment
        url:
          type: string
          description: Uniform Resource Locator, is a web page address (a subset of
            URI)
          format: uri
          example: http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f
        size:
          $ref: '#/components/schemas/Quantity'
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: An attachment by value or by reference. An attachment complements
        the description of an element, for example through a document, a video, a
        picture.
    Characteristic:
      required:
        - name
        - value
        - valueType
        - '@baseType'
        - '@type'
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the characteristic
        name:
          type: string
          description: Name of the characteristic
        valueType:
          type: string
          description: Data type of the value of the characteristic
        characteristicRelationship:
          type: array
          items:
            $ref: '#/components/schemas/CharacteristicRelationship'
        value:
          $ref: '#/components/schemas/Any'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
          default: 'Characteristic'
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
          default: 'Characteristic'
      description: Describes a given characteristic of an object or entity through
        a name/value pair.
    CharacteristicRelationship:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the characteristic
        relationshipType:
          type: string
          description: The type of relationship
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
      description: Another Characteristic that is related to the current Characteristic;
    ConstraintRef:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          description: reference id to the target constraint
        href:
          type: string
          description: Hyperlink reference to the target constraint
          format: uri
        name:
          type: string
          description: Name given to the constraint
        version:
          type: string
          description: constraint version
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
        '@referredType':
          type: string
          description: The (class) type of the referred constraint
      description: Constraint reference. The Constraint resource represents a policy/rule
        applied to an entity or entity spec.
    EntityRef:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
        name:
          type: string
          description: Name of the related entity.
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: Entity reference schema to be use for all entityRef class.
    Extensible:
      type: object
      properties:
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description: Base Extensible schema for use in TMForum Open-APIs
    ExternalReference:
      required:
        - name
      type: object
      properties:
        externalReferenceType:
          type: string
          description: Type of the external reference
        name:
          type: string
          description: External reference name
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
      description: External reference of the individual or reference in other system
    Feature:
      required:
        - featureCharacteristic
        - name
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the feature.
        isBundle:
          type: boolean
          description: True if this is a feature group. Default is false.
        isEnabled:
          type: boolean
          description: True if this feature is enabled. Default is true.
        name:
          type: string
          description: This is the name for the feature.
        constraint:
          type: array
          description: This is a list of feature constraints.
          items:
            $ref: '#/components/schemas/ConstraintRef'
        featureCharacteristic:
          minItems: 1
          type: array
          description: This is a list of Characteristics for a particular feature.
          items:
            $ref: '#/components/schemas/Characteristic'
        featureRelationship:
          type: array
          items:
            $ref: '#/components/schemas/FeatureRelationship'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
      description: Configuration feature.
    FeatureRelationship:
      required:
        - name
        - relationshipType
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the target feature.
        name:
          type: string
          description: This is the name of the target feature.
        relationshipType:
          type: string
          description: This is the type of the feature relationship.
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
      description: Configuration feature
    Note:
      type: object
      properties:
        href:
          type: string
          description: "?"
        id:
          type: string
          description: Identifier of the note within its containing entity (may or
            may not be globally unique, depending on provider implementation)
        author:
          type: string
          description: Author of the note
        date:
          type: string
          description: Date of the note
          format: date-time
        text:
          type: string
          description: Text of the note
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
          default: 'Note'
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
          default: 'Note'
      description: Extra information about a given entity
    OrderItemActionType:
      type: string
      description: action to be performed on the product
      enum:
        - add
        - modify
        - delete
        - noChange
    Place:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the place
        href:
          type: string
          description: Unique reference of the place
          format: uri
        name:
          type: string
          description: A user-friendly name for the place, such as [Paris Store],
            [London Store], [Main Home]
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
      description: Place reference. Place defines the places where the products are
        sold or delivered.
    PlaceRef:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
        name:
          type: string
          description: Name of the related entity.
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: Place reference. PlaceRef defines the placeRefs where the products
        are sold or delivered.
    QosClass:
      type: object
      properties:
        qosBandwidthDown:
          type: string
        qospBit:
          type: string
        qosClass:
          type: string
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
      description: QosClass. within Access 4.0 project
    QosList:
      type: object
      properties:
        qosClasses:
          type: array
          items:
            $ref: '#/components/schemas/QosClass'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
      description: QosClass. within Access 4.0 project
    Quantity:
      type: object
      properties:
        amount:
          type: number
          description: Numeric value in a given unit
          format: float
          default: 1.0
        units:
          type: string
          description: Unit
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
      description: An amount in a given unit
    RelatedParty:
      required:
        - '@referredType'
        - id
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
        name:
          type: string
          description: Name of the related entity.
        role:
          type: string
          description: Role played by the related party
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: Related Entity reference. A related party defines party or party
        role linked to a specific entity.
    RelatedPlaceRefOrValue:
      required:
        - role
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the place
        href:
          type: string
          description: Unique reference of the place
          format: uri
        name:
          type: string
          description: A user-friendly name for the place, such as [Paris Store],
            [London Store], [Main Home]
        role:
          type: string
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: Related Entity reference. A related place defines a place described
        by reference or by value linked to a specific entity. The polymorphic attributes
        @type, @schemaLocation & @referredType are related to the place entity and
        not the RelatedPlaceRefOrValue class itself
    RelatedPlaceRefOrValue_Create:
      required:
        - role
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the place
        href:
          type: string
          description: Unique reference of the place
          format: uri
        name:
          type: string
          description: A user-friendly name for the place, such as [Paris Store],
            [London Store], [Main Home]
        role:
          type: string
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: Related Entity reference. A related place defines a place described
        by reference or by value linked to a specific entity. The polymorphic attributes
        @type, @schemaLocation & @referredType are related to the place entity and
        not the RelatedPlaceRefOrValue class itself
    Resource:
      required:
        - href
        - id
      type: object
      properties:
        id:
          type: string
          description: Identifier of an instance of the resource. Required to be unique
            within the resource type.  Used in URIs as the identifier for specific
            instances of a type.
        href:
          type: string
          description: The URI for the object itself.
          format: uri
        category:
          type: string
          description: Category of the concrete resource. e.g Gold, Silver for MSISDN
            concrete resource
        description:
          type: string
          description: free-text description of the resource
        endOperatingDate:
          type: string
          description: A date time( DateTime). The date till the resource is operating
          format: date-time
        name:
          type: string
          description: A string used to give a name to the resource
        resourceVersion:
          type: string
          description: A field that identifies the specific version of an instance
            of a resource.
        startOperatingDate:
          type: string
          description: A date time( DateTime). The date from which the resource is
            operating
          format: date-time
        activationFeature:
          type: array
          description: Configuration features
          items:
            $ref: '#/components/schemas/Feature'
        administrativeState:
          $ref: '#/components/schemas/ResourceAdministrativeStateType'
        attachment:
          type: array
          items:
            $ref: '#/components/schemas/AttachmentRefOrValue'
        note:
          type: array
          items:
            $ref: '#/components/schemas/Note'
        operationalState:
          $ref: '#/components/schemas/ResourceOperationalStateType'
        place:
          $ref: '#/components/schemas/RelatedPlaceRefOrValue'
        relatedParty:
          type: array
          items:
            $ref: '#/components/schemas/RelatedParty'
        resourceCharacteristic:
          type: array
          items:
            $ref: '#/components/schemas/Characteristic'
        resourceRelationship:
          type: array
          items:
            $ref: '#/components/schemas/ResourceRelationship'
        resourceSpecification:
          $ref: '#/components/schemas/ResourceSpecificationRef'
        resourceStatus:
          $ref: '#/components/schemas/ResourceStatusType'
        usageState:
          $ref: '#/components/schemas/ResourceUsageStateType'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
      description: Resource is an abstract entity that describes the common set of
        attributes shared by all concrete resources (e.g. TPE, EQUIPMENT) in the inventory.
    ResourceAdministrativeStateType:
      type: string
      description: ResourceAdministrativeStateType enumerations
      enum:
        - locked
        - unlocked
        - shutdown
    ResourceOperationalStateType:
      type: string
      description: ResourceOperationalStateType enumerations
      enum:
        - enable
        - disable
    ResourceOrder:
      required:
        - externalId
        - '@baseType'
        - '@type'
      type: object
      properties:
        id:
          type: string
          description: Identifier of an instance of the Resource Order. Required to
            be unique within the resource type.
          example: 9ba1047c38ce
        href:
          type: string
          description: Hyperlink to access the order
          format: uri
          example: http://host/resourceOrder/9ba1047c38ce
        cancellationDate:
          type: string
          description: Date when the order is cancelled - if cancelled, in RFC3339
            (subset of ISO8601) format
          format: date-time
        cancellationReason:
          type: string
          description: Reason why the order is cancelled - if cancelled
          example: Cables no longer required by customer
        category:
          type: string
          description: Used to categorize the order from a business perspective that
            can be useful for the order management system
          example: Premium
        completionDate:
          type: string
          description: Date when the order was actually completed, in RFC3339 (subset
            of ISO8601) format
          format: date-time
        description:
          type: string
          description: Free-text description of the Resource Order
          example: 7km of 6-fiber, double jacketed Optical Cable for Acme Inc
        expectedCompletionDate:
          type: string
          description: Date when the order is expected to be completed, in RFC3339
            (subset of ISO8601) format
          format: date-time
        externalId:
          type: string
          description: 'DEPRECATED: Use externalReference Instead. ID given by the
            consumer (to facilitate searches afterwards)'
          example: 'Customer Ref: 577e6b2be5e5'
        name:
          type: string
          description: A string used to give a name to the Resource Order
          example: 7km of Optical Cable for Acme Inc
        orderDate:
          type: string
          description: Date when the order was created, in RFC3339 (subset of ISO8601)
            format
          format: date-time
        orderType:
          type: string
          description: Name of the Resource Order type
        priority:
          type: integer
          description: 'A way that can be used by consumers to prioritize orders in
            OM system (such as: 0 is the highest priority, and 4 the lowest)'
          example: 0
        requestedCompletionDate:
          type: string
          description: Requested delivery date from the requestor perspective, in
            RFC3339 (subset of ISO8601) format
          format: date-time
        requestedStartDate:
          type: string
          description: Order start date wished by the requestor, in RFC3339 (subset
            of ISO8601) format
          format: date-time
        startDate:
          type: string
          description: Date when the order was actually started, in RFC3339 (subset
            of ISO8601) format
          format: date-time
        externalReference:
          type: array
          items:
            $ref: '#/components/schemas/ExternalReference'
        note:
          type: array
          items:
            $ref: '#/components/schemas/Note'
        orderItem:
          type: array
          items:
            $ref: '#/components/schemas/ResourceOrderItem'
        relatedParty:
          type: array
          items:
            $ref: '#/components/schemas/RelatedParty'
        state:
          $ref: '#/components/schemas/ResourceOrderStateType'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
          default: 'ResourceOrder'
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
          default: 'ResourceOrder'
      description: A Resource Order is a request to provision a set of Resources (logical
        and physical) triggered by the request to provision a Service through a Service
        Order
    ResourceOrderItem:
      required:
        - id
        - '@baseType'
        - '@type'
      type: object
      properties:
        id:
          type: string
          description: Identifier of the line item (such as a sequence number 01,
            02, 03)
          example: "01"
        quantity:
          type: integer
          description: Quantity ordered
          example: 7000
        action:
          $ref: '#/components/schemas/OrderItemActionType'
        appointment:
          $ref: '#/components/schemas/AppointmentRef'
        orderItemRelationship:
          type: array
          items:
            $ref: '#/components/schemas/ResourceOrderItemRelationship'
        resource:
          $ref: '#/components/schemas/ResourceRefOrValue'
        resourceSpecification:
          $ref: '#/components/schemas/ResourceSpecificationRef'
        state:
          $ref: '#/components/schemas/ResourceOrderItemStateType'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
          default: 'ResourceOrderItem'
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
          default: 'ResourceOrderItem'
      description: An identified part of the order. A resource order is decomposed
        into one or more order items.
    ResourceOrderItemRef:
      type: object
      properties:
        itemId:
          type: string
          description: Identifier of the line item
          example: "01"
        resourceOrderHref:
          type: string
          description: Link to the order to which this item belongs to
          format: uri
          example: http://host/resourceOrder/4b22f7cad22d
        resourceOrderId:
          type: string
          description: Identifier of the resource order that this item belongs to
          example: 4b22f7cad22d
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation
          example: PhysicalResource
    ResourceOrderItemRelationship:
      type: object
      properties:
        relationshipType:
          type: string
          description: Type of the order item relationship
          example: dependency
        orderItem:
          $ref: '#/components/schemas/ResourceOrderItemRef'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
    ResourceOrderItemStateType:
      type: string
      description: Possible values for the state of the order item
      enum:
        - acknowledged
        - rejected
        - pending
        - held
        - inProgress
        - cancelled
        - completed
        - failed
        - assessingCancellation
        - pendingCancellation
    ResourceOrderStateType:
      type: string
      description: Possible values for the state of the order
      enum:
        - acknowledged
        - rejected
        - pending
        - held
        - inProgress
        - cancelled
        - completed
        - failed
        - partial
        - assessingCancellation
        - pendingCancellation
    ResourceRef:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
        name:
          type: string
          description: Name of the related entity.
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
    ResourceRefOrValue:
      required:
        - name
        - '@baseType'
        - '@type'
      type: object
      properties:
        id:
          type: string
          description: Identifier of an instance of the resource. Required to be unique
            within the resource type.  Used in URIs as the identifier for specific
            instances of a type.
        href:
          type: string
          description: The URI for the object itself.
          format: uri
        category:
          type: string
          description: Category of the concrete resource. e.g Gold, Silver for MSISDN
            concrete resource
        description:
          type: string
          description: free-text description of the resource
        endOperatingDate:
          type: string
          description: A date time( DateTime). The date till the resource is operating
          format: date-time
        name:
          type: string
          description: A string used to give a name to the resource
        resourceVersion:
          type: string
          description: A field that identifies the specific version of an instance
            of a resource.
        startOperatingDate:
          type: string
          description: A date time( DateTime). The date from which the resource is
            operating
          format: date-time
        activationFeature:
          type: array
          description: Configuration features
          items:
            $ref: '#/components/schemas/Feature'
        administrativeState:
          $ref: '#/components/schemas/ResourceAdministrativeStateType'
        attachment:
          type: array
          items:
            $ref: '#/components/schemas/AttachmentRefOrValue'
        note:
          type: array
          items:
            $ref: '#/components/schemas/Note'
        operationalState:
          $ref: '#/components/schemas/ResourceOperationalStateType'
        place:
          $ref: '#/components/schemas/RelatedPlaceRefOrValue'
        relatedParty:
          type: array
          items:
            $ref: '#/components/schemas/RelatedParty'
        resourceCharacteristic:
          type: array
          items:
            $ref: '#/components/schemas/Characteristic'
        resourceRelationship:
          type: array
          items:
            $ref: '#/components/schemas/ResourceRelationship'
        resourceSpecification:
          $ref: '#/components/schemas/ResourceSpecificationRef'
        resourceStatus:
          $ref: '#/components/schemas/ResourceStatusType'
        usageState:
          $ref: '#/components/schemas/ResourceUsageStateType'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
          default: 'ResourceRefOrValue'
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
          default: 'ResourceRefOrValue'
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: Resource is an abstract entity that describes the common set of
        attributes shared by all concrete resources. The polymorphic attributes @type,
        @schemaLocation & @referredType are related to the Resource entity and not
        the related ResourceRefOrValue class itself
    ResourceRefOrValue_Create:
      type: object
      properties:
        id:
          type: string
          description: Identifier of an instance of the resource. Required to be unique
            within the resource type.  Used in URIs as the identifier for specific
            instances of a type.
        href:
          type: string
          description: The URI for the object itself.
          format: uri
        category:
          type: string
          description: Category of the concrete resource. e.g Gold, Silver for MSISDN
            concrete resource
        description:
          type: string
          description: free-text description of the resource
        endOperatingDate:
          type: string
          description: A date time( DateTime). The date till the resource is operating
          format: date-time
        name:
          type: string
          description: A string used to give a name to the resource
        resourceVersion:
          type: string
          description: A field that identifies the specific version of an instance
            of a resource.
        startOperatingDate:
          type: string
          description: A date time( DateTime). The date from which the resource is
            operating
          format: date-time
        activationFeature:
          type: array
          description: Configuration features
          items:
            $ref: '#/components/schemas/Feature'
        administrativeState:
          $ref: '#/components/schemas/ResourceAdministrativeStateType'
        attachment:
          type: array
          items:
            $ref: '#/components/schemas/AttachmentRefOrValue_Create'
        note:
          type: array
          items:
            $ref: '#/components/schemas/Note'
        operationalState:
          $ref: '#/components/schemas/ResourceOperationalStateType'
        place:
          $ref: '#/components/schemas/RelatedPlaceRefOrValue_Create'
        relatedParty:
          type: array
          items:
            $ref: '#/components/schemas/RelatedParty'
        resourceCharacteristic:
          type: array
          items:
            $ref: '#/components/schemas/Characteristic'
        resourceRelationship:
          type: array
          items:
            $ref: '#/components/schemas/ResourceRelationship'
        resourceSpecification:
          $ref: '#/components/schemas/ResourceSpecificationRef'
        resourceStatus:
          $ref: '#/components/schemas/ResourceStatusType'
        usageState:
          $ref: '#/components/schemas/ResourceUsageStateType'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: Resource is an abstract entity that describes the common set of
        attributes shared by all concrete resources. The polymorphic attributes @type,
        @schemaLocation & @referredType are related to the Resource entity and not
        the related ResourceRefOrValue class itself
    ResourceRelationship:
      required:
        - relationshipType
        - resource
      type: object
      properties:
        relationshipType:
          type: string
          description: 'Type of the resource relationship, such as [bundled] if the
            resource is a bundle and you want to describe the bundled resources inside
            this bundle; [reliesOn] if the resource needs another already owned resource
            to rely on (eg: an option on an already owned mobile access resource)
            [targets] or [isTargeted] (depending on the way of expressing the link)
            for any other kind of links that may be useful'
          example: bundled
        resource:
          $ref: '#/components/schemas/ResourceRefOrValue'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
      description: Linked resources to the one instantiate, such as [bundled] if the
        resource is a bundle and you want to describe the bundled resources inside
        this bundle; [reliesOn] if the resource needs another already owned resource
        to rely on (e.g. an option on an already owned mobile access resource) [targets]
        or [isTargeted] (depending on the way of expressing the link) for any other
        kind of links that may be useful
    ResourceSpecificationRef:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
        name:
          type: string
          description: Name of the related entity.
        version:
          type: string
          description: Resource Specification version
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: |-
        Resources are physical or non-physical components (or some combination of these) within an enterprise's infrastructure or inventory. They are typically consumed or used by services (for example a physical port assigned to a service) or contribute to the realization of a Product (for example, a SIM card). They can be drawn from the Application, Computing and Network domains, and include, for example, Network Elements, software, IT systems, content and information, and technology components.
        A ResourceSpecification is an abstract base class for representing a generic means for implementing a particular type of Resource. In essence, a ResourceSpecification defines the common attributes and relationships of a set of related Resources, while Resource defines a specific instance that is based on a particular ResourceSpecification.
    ResourceStatusType:
      type: string
      description: ResourceStatusType enumerations
      enum:
        - standby
        - alarm
        - available
        - reserved
        - unknown
        - suspended
    ResourceUsageStateType:
      type: string
      description: ResourceUsageStateType enumerations
      enum:
        - idle
        - active
        - busy
    TimePeriod:
      type: object
      properties:
        endDateTime:
          type: string
          description: End of the time period, using IETC-RFC-3339 format
          format: date-time
          example: 1985-04-12T23:20:50.52Z
        startDateTime:
          type: string
          description: Start of the time period, using IETC-RFC-3339 format
          format: date-time
          example: 1985-04-12T23:20:50.52Z
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
      description: A period of time, either as a deadline (endDateTime only) a startDateTime
        only, or both
    VlanRange:
      type: object
      properties:
        vlanRangeLower:
          type: string
        vlanRangeUpper:
          type: string
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
      description: VlanRange. within Access 4.0 project
    VlanRangeList:
      type: object
      properties:
        VlanRanges:
          type: array
          items:
            $ref: '#/components/schemas/VlanRange'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
      description: VlanRangeList. within Access 4.0 project
    Error:
      required:
        - code
        - reason
      type: object
      properties:
        code:
          type: string
          description: Application relevant detail, defined in the API or a common
            list.
        reason:
          type: string
          description: Explanation of the reason for the error which can be shown
            to a client user.
        message:
          type: string
          description: More details and corrective actions related to the error which
            can be shown to a client user.
        status:
          type: string
          description: HTTP Error code extension
        referenceError:
          type: string
          description: URI of documentation describing the error.
          format: uri
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class.
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name.
      description: Used when an API throws an Error, typically with a HTTP error response-code
        (3xx, 4xx, 5xx)
  securitySchemes:
    OAuth2:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: 'https://rhsso-develop.magic.telekom.de/auth/realms/GigabitHub/protocol/openid-connect/token'
          scopes:
            'giga:cga:all-area-access': General Access Scope
            'rori:resourceOrder:write': WRITE Scope