{
    "swagger": "2.0",
    "info": {
        "title": "Device Resource Inventory Management",
        "description": "This is TMF Device Resource Inventory Management API specification",
        "version": "5.6.0"
    },
    "host": "localhost:8080",
    "basePath": "/resource-order-resource-inventory/v5",
    "schemes": [
        "https"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "tags": [
        {
            "name": "device"
        },
        {
            "name": "card"
        },
        {
            "name": "port"
        },
        {
            "name": "opticalModule"
        },
        {
            "name": "uplink"
        },
        {
            "name": "dpuOltConfiguration"
        },
        {
            "name": "dpuEmsConfiguration"
        },
        {
            "name": "ancpSession"
        },
        {
            "name": "ancpIpSubnet"
        },
        {
            "name": "oltZtcConfiguration"
        }
    ],
    "securityDefinitions": {
        "OauthSecurity":{
              "type": "oauth2",
              "flow": "application",
              "tokenUrl": "https://example.org/token",
              "scopes": {
                  "rori:device:read": "Device Read Scope",
                  "rori:device:write": "Device Write Scope",
                  "rori:device:delete": "Device Delete Scope",
                  "rori:card:read": "Card Read Scope",
                  "rori:card:full": "Card Full Scope",
                  "rori:port:read": "Port Read Scope",
                  "rori:port:full": "Port Full Scope",
                  "rori:opticalmodule:read": "Optical Module Read Scope",
                  "rori:uplink:read": "Uplink Read Scope",
                  "rori:uplink:full": "Uplink Full Scope",
                  "rori:dpuconfiguration:read": "DPU Configuration Read Scope",
                  "rori:dpuconfiguration:full": "DPU Configuration Full Scope",
                  "rori:ancp:full": "ANCP Full Scope",
                  "rori:ipsubnet:full": "IP Subnet Full Scope",
                  "rori:ztcconfiguration:read": "OLT ZTC Configuration Read Scope",
                  "rori:ztcconfiguration:full": "OLT ZTC Configuration Full Scope",
                  "giga:cga:all-area-access": "Default Scope"
                  }
              }
    },
    "paths": {
        "/device": {
            "get": {
                "security": [
                    {
                      "OauthSecurity": [
                          "rori:device:read",
                          "giga:cga:all-area-access"
                      ]
                    }
                ],
                "operationId": "listDevice",
                "summary": "List or find Device objects",
                "description": "This operation list or find Device entities",
                "tags": [
                    "device"
                ],
                "parameters": [
                    {
                        "name": "fields",
                        "description": "Comma-separated properties to be provided in response",
                        "required": false,
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "offset",
                        "description": "Requested index for start of resources to be provided in response",
                        "required": false,
                        "in": "query",
                        "type": "integer"
                    },
                    {
                        "name": "limit",
                        "description": "Requested number of resources to be provided in response",
                        "required": false,
                        "in": "query",
                        "type": "integer"
                    },
                    {
                        "name": "depth",
                        "description": "Depth of references that are replaced with the actual loaded entities, with the corresponding level of details.\nIf depth = 0 (default), all referenced entities will contain the reference attributes, not the whole object itself.\nIf depth = 1, then the first level of related target entities is expanded.\nIf depth = N (N = 0..n) it expands reference objects of related entities recursively (n times).",
                        "required": false,
                        "in": "query",
                        "type": "integer"
                    },
                    {
                        "name": "emsNbiName",
                        "description": "For filtering on the base of 'emsNbiName' field (equality)",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "creationDate",
                        "description": "For filtering on the base of 'creationDate' field (equality)",
                        "in": "query",
                        "format": "date-time",
                        "type": "string"
                    },
                    {
                        "name": "creationDate.gt",
                        "description": "For filtering on the base of 'creationDate' field (great than)",
                        "type": "string",
                        "format": "date-time",
                        "in": "query"
                    },
                    {
                        "name": "creationDate.lt",
                        "description": "For filtering on the base of 'creationDate' field (less than)",
                        "type": "string",
                        "format": "date-time",
                        "in": "query"
                    },
                    {
                        "name": "modificationDate",
                        "description": "For filtering on the base of 'modificationDate' field (equality)",
                        "in": "query",
                        "format": "date-time",
                        "type": "string"
                    },
                    {
                        "name": "modificationDate.gt",
                        "description": "For filtering on the base of 'modificationDate' field (great than)",
                        "type": "string",
                        "format": "date-time",
                        "in": "query"
                    },
                    {
                        "name": "modificationDate.lt",
                        "description": "For filtering on the base of 'modificationDate' field (less than)",
                        "type": "string",
                        "format": "date-time",
                        "in": "query"
                    },
                    {
                        "name": "serialNumber",
                        "description": "For filtering on the base of 'serialNumber' field (equality)",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "deviceType",
                        "description": "For filtering on the base of 'deviceType' field (equality)",
                        "in": "query",
                        "enum": [
                            "OLT",
                            "DPU",
                            "BNG"
                        ],
                        "type": "string"
                    },
                    {
                        "name": "endSz",
                        "description": "For filtering on the base of 'endSz' field (equality)",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "fiberOnLocationId",
                        "description": "For filtering on the base of 'fiberOnLocationId' field (equality)",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "fsz",
                        "description": "For filtering on the base of 'fsz' field (equality)",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "klsId",
                        "description": "For filtering on the base of 'klsId' field (equality)",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "lifeCycleState",
                        "description": "For filtering on the base of 'lifeCycleState' field (equality)",
                        "in": "query",
                        "enum": [
                            "NOT_OPERATING",
                            "INSTALLING",
                            "OPERATING",
                            "RETIRING",
                            "PLANNING"
                        ],
                        "type": "string"
                    },
                    {
                        "name": "vpsz",
                        "description": "For filtering on the base of 'vpsz' field (equality)",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "relatedParty.id",
                        "description": "For filtering on the base of 'relatedParty.id' field (equality)",
                        "in": "query",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {
                            "X-Result-Count": {
                                "description": "Actual number of items returned in the response body",
                                "type": "integer"
                            },
                            "X-Total-Count": {
                                "description": "Total number of items matching criteria",
                                "type": "integer"
                            }
                        },
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Device"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "405": {
                        "description": "Method Not allowed",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "operationId": "createDevice",
                "summary": "Creates a Device",
                "description": "This operation creates a Device entity.",
                "tags": [
                    "device"
                ],
                "parameters": [
                    {
                        "name": "device",
                        "description": "The Device to be created",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Device_Create"
                        },
                        "in": "body"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/Device"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "405": {
                        "description": "Method Not allowed",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/device/{id}": {
            "get": {
                "security": [
                  {
                    "OauthSecurity": [
                      "rori:device:read",
                      "giga:cga:all-area-access"
                    ]
                  }
                ],
                "operationId": "retrieveDevice",
                "summary": "Retrieves a Device by ID",
                "description": "This operation retrieves a Device entity. Attribute selection is enabled for all first level attributes.",
                "tags": [
                    "device"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "Identifier of the Device",
                        "required": true,
                        "type": "string",
                        "in": "path"
                    },
                    {
                        "name": "fields",
                        "description": "Comma-separated properties to provide in response",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "depth",
                        "description": "Depth of references that are replaced with the actual loaded entities, with the corresponding level of details.\nIf depth = 0 (default), all referenced entities will contain the reference attributes, not the whole object itself.\nIf depth = 1, then the first level of related target entities is expanded.\nIf depth = N (N = 0..n) it expands reference objects of related entities recursively (n times).",
                        "required": false,
                        "in": "query",
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Device"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "405": {
                        "description": "Method Not allowed",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "patch": {
                "operationId": "patchDevice",
                "summary": "Updates partially a Device",
                "description": "This operation updates partially a Device entity.",
                "tags": [
                    "device"
                ],
                "consumes": [
                    "application/json-patch+json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "Identifier of the Device",
                        "required": true,
                        "type": "string",
                        "in": "path"
                    },
                    {
                        "name": "JsonPatchOperation",
                        "description": "List of JSONPatch operation as defined by RFC 6902",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/JsonPatchOperation"
                            }
                        },
                        "in": "body"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated",
                        "schema": {
                            "$ref": "#/definitions/Device"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "405": {
                        "description": "Method Not allowed",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "operationId": "deleteDevice",
                "summary": "Deletes a Device",
                "description": "This operation deletes a Device entity.",
                "tags": [
                    "device"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "Identifier of the Device",
                        "required": true,
                        "type": "string",
                        "in": "path"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deleted"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "405": {
                        "description": "Method Not allowed",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/card": {
            "get": {
                "security": [
                  {
                    "OauthSecurity": [
                      "rori:card:read",
                      "rori:card:full",
                      "giga:cga:all-area-access"
                    ]
                  }
                ],
                "operationId": "listCard",
                "summary": "List or find Card objects",
                "description": "This operation list or find Card entities",
                "tags": [
                    "card"
                ],
                "parameters": [
                    {
                        "name": "fields",
                        "description": "Comma-separated properties to be provided in response",
                        "required": false,
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "offset",
                        "description": "Requested index for start of resources to be provided in response",
                        "required": false,
                        "in": "query",
                        "type": "integer"
                    },
                    {
                        "name": "limit",
                        "description": "Requested number of resources to be provided in response",
                        "required": false,
                        "in": "query",
                        "type": "integer"
                    },
                    {
                        "name": "depth",
                        "description": "Depth of references that are replaced with the actual loaded entities, with the corresponding level of details.\nIf depth = 0 (default), all referenced entities will contain the reference attributes, not the whole object itself.\nIf depth = 1, then the first level of related target entities is expanded.\nIf depth = N (N = 0..n) it expands reference objects of related entities recursively (n times).",
                        "required": false,
                        "in": "query",
                        "type": "integer"
                    },
                    {
                        "name": "creationDate",
                        "description": "For filtering on the base of 'creationDate' field (equality)",
                        "in": "query",
                        "format": "date-time",
                        "type": "string"
                    },
                    {
                        "name": "creationDate.gt",
                        "description": "For filtering on the base of 'creationDate' field (great than)",
                        "type": "string",
                        "format": "date-time",
                        "in": "query"
                    },
                    {
                        "name": "creationDate.lt",
                        "description": "For filtering on the base of 'creationDate' field (less than)",
                        "type": "string",
                        "format": "date-time",
                        "in": "query"
                    },
                    {
                        "name": "modificationDate",
                        "description": "For filtering on the base of 'modificationDate' field (equality)",
                        "in": "query",
                        "format": "date-time",
                        "type": "string"
                    },
                    {
                        "name": "modificationDate.gt",
                        "description": "For filtering on the base of 'modificationDate' field (great than)",
                        "type": "string",
                        "format": "date-time",
                        "in": "query"
                    },
                    {
                        "name": "modificationDate.lt",
                        "description": "For filtering on the base of 'modificationDate' field (less than)",
                        "type": "string",
                        "format": "date-time",
                        "in": "query"
                    },
                    {
                        "name": "cardType",
                        "description": "For filtering on the base of 'cardType' field (equality)",
                        "in": "query",
                        "enum": [
                            "GPON",
                            "UPLINK_CARD",
                            "MANAGEMENT_CARD",
                            "SUPPORT_MODULE",
                            "PROCESSING_BOARD"
                        ],
                        "type": "string"
                    },
                    {
                        "name": "parentDeviceEquipmentRef.endSz",
                        "description": "For filtering on the base of 'parentDeviceEquipmentRef.endSz' field (equality)",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "slotName",
                        "description": "For filtering on the base of 'slotName' field (equality)",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "relatedParty.id",
                        "description": "For filtering on the base of 'relatedParty.id' field (equality)",
                        "in": "query",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {
                            "X-Result-Count": {
                                "description": "Actual number of items returned in the response body",
                                "type": "integer"
                            },
                            "X-Total-Count": {
                                "description": "Total number of items matching criteria",
                                "type": "integer"
                            }
                        },
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Card"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "405": {
                        "description": "Method Not allowed",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "operationId": "createCard",
                "summary": "Creates a Card",
                "description": "This operation creates a Card entity.",
                "tags": [
                    "card"
                ],
                "parameters": [
                    {
                        "name": "card",
                        "description": "The Card to be created",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Card_Create"
                        },
                        "in": "body"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/Card"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "405": {
                        "description": "Method Not allowed",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/card/{id}": {
            "get": {
                "security": [
                  {
                    "OauthSecurity": [
                      "rori:card:read",
                      "rori:card:full",
                      "giga:cga:all-area-access"
                    ]
                  }
                ],
                "operationId": "retrieveCard",
                "summary": "Retrieves a Card by ID",
                "description": "This operation retrieves a Card entity. Attribute selection is enabled for all first level attributes.",
                "tags": [
                    "card"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "Identifier of the Card",
                        "required": true,
                        "type": "string",
                        "in": "path"
                    },
                    {
                        "name": "fields",
                        "description": "Comma-separated properties to provide in response",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "depth",
                        "description": "Depth of references that are replaced with the actual loaded entities, with the corresponding level of details.\nIf depth = 0 (default), all referenced entities will contain the reference attributes, not the whole object itself.\nIf depth = 1, then the first level of related target entities is expanded.\nIf depth = N (N = 0..n) it expands reference objects of related entities recursively (n times).",
                        "required": false,
                        "in": "query",
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Card"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "405": {
                        "description": "Method Not allowed",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "patch": {
                "operationId": "patchCard",
                "summary": "Updates partially a Card",
                "description": "This operation updates partially a Card entity.",
                "tags": [
                    "card"
                ],
                "consumes": [
                    "application/json-patch+json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "Identifier of the Card",
                        "required": true,
                        "type": "string",
                        "in": "path"
                    },
                    {
                        "name": "JsonPatchOperation",
                        "description": "List of JSONPatch operation as defined by RFC 6902",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/JsonPatchOperation"
                            }
                        },
                        "in": "body"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated",
                        "schema": {
                            "$ref": "#/definitions/Card"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "405": {
                        "description": "Method Not allowed",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "operationId": "deleteCard",
                "summary": "Deletes a Card",
                "description": "This operation deletes a Card entity.",
                "tags": [
                    "card"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "Identifier of the Card",
                        "required": true,
                        "type": "string",
                        "in": "path"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deleted"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "405": {
                        "description": "Method Not allowed",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/port": {
            "get": {
                "security": [
                  {
                    "OauthSecurity": [
                      "rori:port:read",
                      "rori:port:full",
                      "giga:cga:all-area-access"
                    ]
                  }
                ],
                "operationId": "listPort",
                "summary": "List or find Port objects",
                "description": "This operation list or find Port entities",
                "tags": [
                    "port"
                ],
                "parameters": [
                    {
                        "name": "fields",
                        "description": "Comma-separated properties to be provided in response",
                        "required": false,
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "offset",
                        "description": "Requested index for start of resources to be provided in response",
                        "required": false,
                        "in": "query",
                        "type": "integer"
                    },
                    {
                        "name": "limit",
                        "description": "Requested number of resources to be provided in response",
                        "required": false,
                        "in": "query",
                        "type": "integer"
                    },
                    {
                        "name": "depth",
                        "description": "Depth of references that are replaced with the actual loaded entities, with the corresponding level of details.\nIf depth = 0 (default), all referenced entities will contain the reference attributes, not the whole object itself.\nIf depth = 1, then the first level of related target entities is expanded.\nIf depth = N (N = 0..n) it expands reference objects of related entities recursively (n times).",
                        "required": false,
                        "in": "query",
                        "type": "integer"
                    },
                    {
                        "name": "creationDate",
                        "description": "For filtering on the base of 'creationDate' field (equality)",
                        "in": "query",
                        "format": "date-time",
                        "type": "string"
                    },
                    {
                        "name": "creationDate.gt",
                        "description": "For filtering on the base of 'creationDate' field (great than)",
                        "type": "string",
                        "format": "date-time",
                        "in": "query"
                    },
                    {
                        "name": "creationDate.lt",
                        "description": "For filtering on the base of 'creationDate' field (less than)",
                        "type": "string",
                        "format": "date-time",
                        "in": "query"
                    },
                    {
                        "name": "modificationDate",
                        "description": "For filtering on the base of 'modificationDate' field (equality)",
                        "in": "query",
                        "format": "date-time",
                        "type": "string"
                    },
                    {
                        "name": "modificationDate.gt",
                        "description": "For filtering on the base of 'modificationDate' field (great than)",
                        "type": "string",
                        "format": "date-time",
                        "in": "query"
                    },
                    {
                        "name": "modificationDate.lt",
                        "description": "For filtering on the base of 'modificationDate' field (less than)",
                        "type": "string",
                        "format": "date-time",
                        "in": "query"
                    },
                    {
                        "name": "lifeCycleState",
                        "description": "For filtering on the base of 'lifeCycleState' field (equality)",
                        "in": "query",
                        "enum": [
                            "NOT_OPERATING",
                            "INSTALLING",
                            "OPERATING",
                            "RETIRING",
                            "PLANNING"
                        ],
                        "type": "string"
                    },
                    {
                        "name": "parentEquipmentRef.endSz",
                        "description": "For filtering on the base of 'parentEquipmentRef.endSz' field (equality)",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "parentEquipmentRef.slotName",
                        "description": "For filtering on the base of 'parentEquipmentRef.slotName' field (equality)",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "portName",
                        "description": "For filtering on the base of 'portName' field (equality)",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "portType",
                        "description": "For filtering on the base of 'portType' field (equality)",
                        "in": "query",
                        "enum": [
                            "PON",
                            "ETHERNET",
                            "GFAST"
                        ],
                        "type": "string"
                    },
                    {
                        "name": "relatedParty.id",
                        "description": "For filtering on the base of 'relatedParty.id' field (equality)",
                        "in": "query",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {
                            "X-Result-Count": {
                                "description": "Actual number of items returned in the response body",
                                "type": "integer"
                            },
                            "X-Total-Count": {
                                "description": "Total number of items matching criteria",
                                "type": "integer"
                            }
                        },
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Port"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "405": {
                        "description": "Method Not allowed",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/port/{id}": {
            "get": {
                "security": [
                  {
                    "OauthSecurity": [
                      "rori:port:read",
                      "rori:port:full",
                      "giga:cga:all-area-access"
                    ]
                  }
                ],
                "operationId": "retrievePort",
                "summary": "Retrieves a Port by ID",
                "description": "This operation retrieves a Port entity. Attribute selection is enabled for all first level attributes.",
                "tags": [
                    "port"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "Identifier of the Port",
                        "required": true,
                        "type": "string",
                        "in": "path"
                    },
                    {
                        "name": "fields",
                        "description": "Comma-separated properties to provide in response",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "name": "depth",
                        "description": "Depth of references that are replaced with the actual loaded entities, with the corresponding level of details.\nIf depth = 0 (default), all referenced entities will contain the reference attributes, not the whole object itself.\nIf depth = 1, then the first level of related target entities is expanded.\nIf depth = N (N = 0..n) it expands reference objects of related entities recursively (n times).",
                        "required": false,
                        "in": "query",
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Port"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "405": {
                        "description": "Method Not allowed",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "patch": {
                "operationId": "patchPort",
                "summary": "Updates partially a Port",
                "description": "This operation updates partially a Port entity.",
                "tags": [
                    "port"
                ],
                "consumes": [
                    "application/json-patch+json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "Identifier of the Port",
                        "required": true,
                        "type": "string",
                        "in": "path"
                    },
                    {
                        "name": "JsonPatchOperation",
                        "description": "List of JSONPatch operation as defined by RFC 6902",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/JsonPatchOperation"
                            }
                        },
                        "in": "body"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated",
                        "schema": {
                            "$ref": "#/definitions/Port"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "405": {
                        "description": "Method Not allowed",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/opticalModule": {
            "get": {
                "security": [
                  {
                    "OauthSecurity": [
                      "rori:opticalmodule:read",
                      "giga:cga:all-area-access"
                    ]
                  }
                ],
                "operationId": "listOpticalModule",
                "summary": "List or find OpticalModule objects",
                "description": "This operation list or find OpticalModule entities",
                "tags": [
                    "opticalModule"
                ],
                "parameters": [
                    {
                        "name": "fields",
                        "description": "Comma-separated properties to be provided in response",
                        "required": false,
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "offset",
                        "description": "Requested index for start of resources to be provided in response",
                        "required": false,
                        "in": "query",
                        "type": "integer"
                    },
                    {
                        "name": "limit",
                        "description": "Requested number of resources to be provided in response",
                        "required": false,
                        "in": "query",
                        "type": "integer"
                    },
                    {
                        "name": "creationDate",
                        "description": "For filtering on the base of 'creationDate' field (equality)",
                        "in": "query",
                        "format": "date-time",
                        "type": "string"
                    },
                    {
                        "name": "creationDate.gt",
                        "description": "For filtering on the base of 'creationDate' field (great than)",
                        "type": "string",
                        "format": "date-time",
                        "in": "query"
                    },
                    {
                        "name": "creationDate.lt",
                        "description": "For filtering on the base of 'creationDate' field (less than)",
                        "type": "string",
                        "format": "date-time",
                        "in": "query"
                    },
                    {
                        "name": "modificationDate",
                        "description": "For filtering on the base of 'modificationDate' field (equality)",
                        "in": "query",
                        "format": "date-time",
                        "type": "string"
                    },
                    {
                        "name": "modificationDate.gt",
                        "description": "For filtering on the base of 'modificationDate' field (great than)",
                        "type": "string",
                        "format": "date-time",
                        "in": "query"
                    },
                    {
                        "name": "modificationDate.lt",
                        "description": "For filtering on the base of 'modificationDate' field (less than)",
                        "type": "string",
                        "format": "date-time",
                        "in": "query"
                    },
                    {
                        "name": "parentPortEquipmentRef.endSz",
                        "description": "For filtering on the base of 'parentPortEquipmentRef.endSz' field (equality)",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "parentPortEquipmentRef.portName",
                        "description": "For filtering on the base of 'parentPortEquipmentRef.portName' field (equality)",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "parentPortEquipmentRef.slotName",
                        "description": "For filtering on the base of 'parentPortEquipmentRef.slotName' field (equality)",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "relatedParty.id",
                        "description": "For filtering on the base of 'relatedParty.id' field (equality)",
                        "in": "query",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {
                            "X-Result-Count": {
                                "description": "Actual number of items returned in the response body",
                                "type": "integer"
                            },
                            "X-Total-Count": {
                                "description": "Total number of items matching criteria",
                                "type": "integer"
                            }
                        },
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/OpticalModule"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "405": {
                        "description": "Method Not allowed",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "operationId": "createOpticalModule",
                "summary": "Creates a OpticalModule",
                "description": "This operation creates a OpticalModule entity.",
                "tags": [
                    "opticalModule"
                ],
                "parameters": [
                    {
                        "name": "opticalModule",
                        "description": "The OpticalModule to be created",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OpticalModule_Create"
                        },
                        "in": "body"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/OpticalModule"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "405": {
                        "description": "Method Not allowed",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/opticalModule/{id}": {
            "get": {
                "security": [
                  {
                    "OauthSecurity": [
                      "rori:opticalmodule:read",
                      "giga:cga:all-area-access"
                    ]
                  }
                ],
                "operationId": "retrieveOpticalModule",
                "summary": "Retrieves a OpticalModule by ID",
                "description": "This operation retrieves a OpticalModule entity. Attribute selection is enabled for all first level attributes.",
                "tags": [
                    "opticalModule"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "Identifier of the OpticalModule",
                        "required": true,
                        "type": "string",
                        "in": "path"
                    },
                    {
                        "name": "fields",
                        "description": "Comma-separated properties to provide in response",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/OpticalModule"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "405": {
                        "description": "Method Not allowed",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "patch": {
                "operationId": "patchOpticalModule",
                "summary": "Updates partially a OpticalModule",
                "description": "This operation updates partially a OpticalModule entity.",
                "tags": [
                    "opticalModule"
                ],
                "consumes": [
                    "application/json-patch+json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "Identifier of the OpticalModule",
                        "required": true,
                        "type": "string",
                        "in": "path"
                    },
                    {
                        "name": "JsonPatchOperation",
                        "description": "List of JSONPatch operation as defined by RFC 6902",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/JsonPatchOperation"
                            }
                        },
                        "in": "body"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated",
                        "schema": {
                            "$ref": "#/definitions/OpticalModule"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "405": {
                        "description": "Method Not allowed",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "operationId": "deleteOpticalModule",
                "summary": "Deletes a OpticalModule",
                "description": "This operation deletes a OpticalModule entity.",
                "tags": [
                    "opticalModule"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "Identifier of the OpticalModule",
                        "required": true,
                        "type": "string",
                        "in": "path"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deleted"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "405": {
                        "description": "Method Not allowed",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/uplink": {
            "get": {
                "security": [
                  {
                    "OauthSecurity": [
                      "rori:uplink:read",
                      "rori:uplink:full",
                      "giga:cga:all-area-access"
                    ]
                  }
                ],
                "operationId": "listUplink",
                "summary": "List or find Uplink objects",
                "description": "This operation list or find Uplink entities",
                "tags": [
                    "uplink"
                ],
                "parameters": [
                    {
                        "name": "fields",
                        "description": "Comma-separated properties to be provided in response",
                        "required": false,
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "offset",
                        "description": "Requested index for start of resources to be provided in response",
                        "required": false,
                        "in": "query",
                        "type": "integer"
                    },
                    {
                        "name": "limit",
                        "description": "Requested number of resources to be provided in response",
                        "required": false,
                        "in": "query",
                        "type": "integer"
                    },
                    {
                        "name": "creationDate",
                        "description": "For filtering on the base of 'creationDate' field (equality)",
                        "in": "query",
                        "format": "date-time",
                        "type": "string"
                    },
                    {
                        "name": "creationDate.gt",
                        "description": "For filtering on the base of 'creationDate' field (great than)",
                        "type": "string",
                        "format": "date-time",
                        "in": "query"
                    },
                    {
                        "name": "creationDate.lt",
                        "description": "For filtering on the base of 'creationDate' field (less than)",
                        "type": "string",
                        "format": "date-time",
                        "in": "query"
                    },
                    {
                        "name": "modificationDate",
                        "description": "For filtering on the base of 'modificationDate' field (equality)",
                        "in": "query",
                        "format": "date-time",
                        "type": "string"
                    },
                    {
                        "name": "modificationDate.gt",
                        "description": "For filtering on the base of 'modificationDate' field (great than)",
                        "type": "string",
                        "format": "date-time",
                        "in": "query"
                    },
                    {
                        "name": "modificationDate.lt",
                        "description": "For filtering on the base of 'modificationDate' field (less than)",
                        "type": "string",
                        "format": "date-time",
                        "in": "query"
                    },
                    {
                        "name": "lsz",
                        "description": "For filtering on the base of 'lsz' field (equality)",
                        "in": "query",
                        "enum": [
                            "4C1",
                            "4C2",
                            "4Z2"
                        ],
                        "type": "string"
                    },
                    {
                        "name": "portsEquipmentBusinessRef.endSz",
                        "description": "For filtering on the base of 'portsEquipmentBusinessRef.endSz' field (equality)",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "portsEquipmentBusinessRef.portName",
                        "description": "For filtering on the base of 'portsEquipmentBusinessRef.portName' field (equality)",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "portsEquipmentBusinessRef.slotName",
                        "description": "For filtering on the base of 'portsEquipmentBusinessRef.slotName' field (equality)",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "state",
                        "description": "For filtering on the base of 'state' field (equality)",
                        "in": "query",
                        "enum": [
                            "ACTIVE",
                            "PLANNED",
                            "ACTIVATION_PROCESS"
                        ],
                        "type": "string"
                    },
                    {
                        "name": "uewegId",
                        "description": "For filtering on the base of 'uewegId' field (equality)",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "relatedParty.id",
                        "description": "For filtering on the base of 'relatedParty.id' field (equality)",
                        "in": "query",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {
                            "X-Result-Count": {
                                "description": "Actual number of items returned in the response body",
                                "type": "integer"
                            },
                            "X-Total-Count": {
                                "description": "Total number of items matching criteria",
                                "type": "integer"
                            }
                        },
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Uplink"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "405": {
                        "description": "Method Not allowed",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "OauthSecurity": [
                            "rori:uplink:full",
                            "giga:cga:all-area-access"
                        ]
                    }
                ],
                "operationId": "createUplink",
                "summary": "Creates a Uplink",
                "description": "This operation creates a Uplink entity.",
                "tags": [
                    "uplink"
                ],
                "parameters": [
                    {
                        "name": "uplink",
                        "description": "The Uplink to be created",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Uplink_Create"
                        },
                        "in": "body"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/Uplink"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "405": {
                        "description": "Method Not allowed",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/uplink/{id}": {
            "get": {
                "security": [
                  {
                    "OauthSecurity": [
                      "rori:uplink:read",
                      "rori:uplink:full",
                      "giga:cga:all-area-access"
                    ]
                  }
                ],
                "operationId": "retrieveUplink",
                "summary": "Retrieves a Uplink by ID",
                "description": "This operation retrieves a Uplink entity. Attribute selection is enabled for all first level attributes.",
                "tags": [
                    "uplink"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "Identifier of the Uplink",
                        "required": true,
                        "type": "string",
                        "in": "path"
                    },
                    {
                        "name": "fields",
                        "description": "Comma-separated properties to provide in response",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Uplink"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "405": {
                        "description": "Method Not allowed",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "OauthSecurity": [
                            "rori:uplink:full",
                            "giga:cga:all-area-access"
                        ]
                    }
                ],
                "operationId": "patchUplink",
                "summary": "Updates partially a Uplink",
                "description": "This operation updates partially a Uplink entity.",
                "tags": [
                    "uplink"
                ],
                "consumes": [
                    "application/json-patch+json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "Identifier of the Uplink",
                        "required": true,
                        "type": "string",
                        "in": "path"
                    },
                    {
                        "name": "JsonPatchOperation",
                        "description": "List of JSONPatch operation as defined by RFC 6902",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/JsonPatchOperation"
                            }
                        },
                        "in": "body"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated",
                        "schema": {
                            "$ref": "#/definitions/Uplink"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "405": {
                        "description": "Method Not allowed",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "OauthSecurity": [
                            "rori:uplink:full",
                            "giga:cga:all-area-access"
                        ]
                    }
                ],
                "operationId": "deleteUplink",
                "summary": "Deletes a Uplink",
                "description": "This operation deletes a Uplink entity.",
                "tags": [
                    "uplink"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "Identifier of the Uplink",
                        "required": true,
                        "type": "string",
                        "in": "path"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deleted"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "405": {
                        "description": "Method Not allowed",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/dpuOltConfiguration": {
            "get": {
                "security": [
                  {
                    "OauthSecurity": [
                      "rori:dpuconfiguration:read",
                      "rori:dpuconfiguration:full",
                      "giga:cga:all-area-access"
                    ]
                  }
                ],
                "operationId": "listDpuOltConfiguration",
                "summary": "List or find DpuOltConfiguration objects",
                "description": "This operation list or find DpuOltConfiguration entities",
                "tags": [
                    "dpuOltConfiguration"
                ],
                "parameters": [
                    {
                        "name": "fields",
                        "description": "Comma-separated properties to be provided in response",
                        "required": false,
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "offset",
                        "description": "Requested index for start of resources to be provided in response",
                        "required": false,
                        "in": "query",
                        "type": "integer"
                    },
                    {
                        "name": "limit",
                        "description": "Requested number of resources to be provided in response",
                        "required": false,
                        "in": "query",
                        "type": "integer"
                    },
                    {
                        "name": "creationDate",
                        "description": "For filtering on the base of 'creationDate' field (equality)",
                        "in": "query",
                        "format": "date-time",
                        "type": "string"
                    },
                    {
                        "name": "creationDate.gt",
                        "description": "For filtering on the base of 'creationDate' field (great than)",
                        "type": "string",
                        "format": "date-time",
                        "in": "query"
                    },
                    {
                        "name": "creationDate.lt",
                        "description": "For filtering on the base of 'creationDate' field (less than)",
                        "type": "string",
                        "format": "date-time",
                        "in": "query"
                    },
                    {
                        "name": "modificationDate",
                        "description": "For filtering on the base of 'modificationDate' field (equality)",
                        "in": "query",
                        "format": "date-time",
                        "type": "string"
                    },
                    {
                        "name": "modificationDate.gt",
                        "description": "For filtering on the base of 'modificationDate' field (great than)",
                        "type": "string",
                        "format": "date-time",
                        "in": "query"
                    },
                    {
                        "name": "modificationDate.lt",
                        "description": "For filtering on the base of 'modificationDate' field (less than)",
                        "type": "string",
                        "format": "date-time",
                        "in": "query"
                    },
                    {
                        "name": "dpuEndSz",
                        "description": "For filtering on the base of 'dpuEndSz' field (equality)",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "ponPortEquipmentBusinessRef.endSz",
                        "description": "For filtering on the base of 'ponPortEquipmentBusinessRef.endSz' field (equality)",
                        "in": "query",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {
                            "X-Result-Count": {
                                "description": "Actual number of items returned in the response body",
                                "type": "integer"
                            },
                            "X-Total-Count": {
                                "description": "Total number of items matching criteria",
                                "type": "integer"
                            }
                        },
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DpuOltConfiguration"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "405": {
                        "description": "Method Not allowed",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "operationId": "createDpuOltConfiguration",
                "summary": "Creates a DpuOltConfiguration",
                "description": "This operation creates a DpuOltConfiguration entity.",
                "tags": [
                    "dpuOltConfiguration"
                ],
                "parameters": [
                    {
                        "name": "dpuOltConfiguration",
                        "description": "The DpuOltConfiguration to be created",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DpuOltConfiguration_Create"
                        },
                        "in": "body"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/DpuOltConfiguration"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "405": {
                        "description": "Method Not allowed",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/dpuOltConfiguration/{id}": {
            "get": {
                "security": [
                  {
                    "OauthSecurity": [
                      "rori:dpuconfiguration:read",
                      "rori:dpuconfiguration:full",
                      "giga:cga:all-area-access"
                    ]
                  }
                ],
                "operationId": "retrieveDpuOltConfiguration",
                "summary": "Retrieves a DpuOltConfiguration by ID",
                "description": "This operation retrieves a DpuOltConfiguration entity. Attribute selection is enabled for all first level attributes.",
                "tags": [
                    "dpuOltConfiguration"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "Identifier of the DpuOltConfiguration",
                        "required": true,
                        "type": "string",
                        "in": "path"
                    },
                    {
                        "name": "fields",
                        "description": "Comma-separated properties to provide in response",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/DpuOltConfiguration"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "405": {
                        "description": "Method Not allowed",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "patch": {
                "operationId": "patchDpuOltConfiguration",
                "summary": "Updates partially a DpuOltConfiguration",
                "description": "This operation updates partially a DpuOltConfiguration entity.",
                "tags": [
                    "dpuOltConfiguration"
                ],
                "consumes": [
                    "application/json-patch+json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "Identifier of the DpuOltConfiguration",
                        "required": true,
                        "type": "string",
                        "in": "path"
                    },
                    {
                        "name": "JsonPatchOperation",
                        "description": "List of JSONPatch operation as defined by RFC 6902",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/JsonPatchOperation"
                            }
                        },
                        "in": "body"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated",
                        "schema": {
                            "$ref": "#/definitions/DpuOltConfiguration"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "405": {
                        "description": "Method Not allowed",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "operationId": "deleteDpuOltConfiguration",
                "summary": "Deletes a DpuOltConfiguration",
                "description": "This operation deletes a DpuOltConfiguration entity.",
                "tags": [
                    "dpuOltConfiguration"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "Identifier of the DpuOltConfiguration",
                        "required": true,
                        "type": "string",
                        "in": "path"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deleted"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "405": {
                        "description": "Method Not allowed",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/dpuEmsConfiguration": {
            "get": {
                "security": [
                  {
                    "OauthSecurity": [
                      "rori:dpuconfiguration:read",
                      "rori:dpuconfiguration:full",
                      "giga:cga:all-area-access"
                    ]
                  }
                ],
                "operationId": "listDpuEmsConfiguration",
                "summary": "List or find DpuEmsConfiguration objects",
                "description": "This operation list or find DpuEmsConfiguration entities",
                "tags": [
                    "dpuEmsConfiguration"
                ],
                "parameters": [
                    {
                        "name": "fields",
                        "description": "Comma-separated properties to be provided in response",
                        "required": false,
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "offset",
                        "description": "Requested index for start of resources to be provided in response",
                        "required": false,
                        "in": "query",
                        "type": "integer"
                    },
                    {
                        "name": "limit",
                        "description": "Requested number of resources to be provided in response",
                        "required": false,
                        "in": "query",
                        "type": "integer"
                    },
                    {
                        "name": "creationDate",
                        "description": "For filtering on the base of 'creationDate' field (equality)",
                        "in": "query",
                        "format": "date-time",
                        "type": "string"
                    },
                    {
                        "name": "creationDate.gt",
                        "description": "For filtering on the base of 'creationDate' field (great than)",
                        "type": "string",
                        "format": "date-time",
                        "in": "query"
                    },
                    {
                        "name": "creationDate.lt",
                        "description": "For filtering on the base of 'creationDate' field (less than)",
                        "type": "string",
                        "format": "date-time",
                        "in": "query"
                    },
                    {
                        "name": "modificationDate",
                        "description": "For filtering on the base of 'modificationDate' field (equality)",
                        "in": "query",
                        "format": "date-time",
                        "type": "string"
                    },
                    {
                        "name": "modificationDate.gt",
                        "description": "For filtering on the base of 'modificationDate' field (great than)",
                        "type": "string",
                        "format": "date-time",
                        "in": "query"
                    },
                    {
                        "name": "modificationDate.lt",
                        "description": "For filtering on the base of 'modificationDate' field (less than)",
                        "type": "string",
                        "format": "date-time",
                        "in": "query"
                    },
                    {
                        "name": "dpuEndSz",
                        "description": "For filtering on the base of 'dpuEndSz' field (equality)",
                        "in": "query",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {
                            "X-Result-Count": {
                                "description": "Actual number of items returned in the response body",
                                "type": "integer"
                            },
                            "X-Total-Count": {
                                "description": "Total number of items matching criteria",
                                "type": "integer"
                            }
                        },
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DpuEmsConfiguration"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "405": {
                        "description": "Method Not allowed",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "operationId": "createDpuEmsConfiguration",
                "summary": "Creates a DpuEmsConfiguration",
                "description": "This operation creates a DpuEmsConfiguration entity.",
                "tags": [
                    "dpuEmsConfiguration"
                ],
                "parameters": [
                    {
                        "name": "dpuEmsConfiguration",
                        "description": "The DpuEmsConfiguration to be created",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DpuEmsConfiguration_Create"
                        },
                        "in": "body"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/DpuEmsConfiguration"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "405": {
                        "description": "Method Not allowed",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/dpuEmsConfiguration/{id}": {
            "get": {
                "security": [
                  {
                    "OauthSecurity": [
                      "rori:dpuconfiguration:read",
                      "rori:dpuconfiguration:full",
                      "giga:cga:all-area-access"
                    ]
                  }
                ],
                "operationId": "retrieveDpuEmsConfiguration",
                "summary": "Retrieves a DpuEmsConfiguration by ID",
                "description": "This operation retrieves a DpuEmsConfiguration entity. Attribute selection is enabled for all first level attributes.",
                "tags": [
                    "dpuEmsConfiguration"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "Identifier of the DpuEmsConfiguration",
                        "required": true,
                        "type": "string",
                        "in": "path"
                    },
                    {
                        "name": "fields",
                        "description": "Comma-separated properties to provide in response",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/DpuEmsConfiguration"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "405": {
                        "description": "Method Not allowed",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "patch": {
                "operationId": "patchDpuEmsConfiguration",
                "summary": "Updates partially a DpuEmsConfiguration",
                "description": "This operation updates partially a DpuEmsConfiguration entity.",
                "tags": [
                    "dpuEmsConfiguration"
                ],
                "consumes": [
                    "application/json-patch+json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "Identifier of the DpuEmsConfiguration",
                        "required": true,
                        "type": "string",
                        "in": "path"
                    },
                    {
                        "name": "JsonPatchOperation",
                        "description": "List of JSONPatch operation as defined by RFC 6902",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/JsonPatchOperation"
                            }
                        },
                        "in": "body"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated",
                        "schema": {
                            "$ref": "#/definitions/DpuEmsConfiguration"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "405": {
                        "description": "Method Not allowed",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "operationId": "deleteDpuEmsConfiguration",
                "summary": "Deletes a DpuEmsConfiguration",
                "description": "This operation deletes a DpuEmsConfiguration entity.",
                "tags": [
                    "dpuEmsConfiguration"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "Identifier of the DpuEmsConfiguration",
                        "required": true,
                        "type": "string",
                        "in": "path"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deleted"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "405": {
                        "description": "Method Not allowed",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/ancpSession": {
            "get": {
                "security": [
                    {
                        "OauthSecurity": [
                            "rori:ancp:full",
                            "giga:cga:all-area-access"
                        ]
                    }
                ],
                "operationId": "listAncpSession",
                "summary": "List or find AncpSession objects",
                "description": "This operation list or find AncpSession entities",
                "tags": [
                    "ancpSession"
                ],
                "parameters": [
                    {
                        "name": "fields",
                        "description": "Comma-separated properties to be provided in response",
                        "required": false,
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "offset",
                        "description": "Requested index for start of resources to be provided in response",
                        "required": false,
                        "in": "query",
                        "type": "integer"
                    },
                    {
                        "name": "limit",
                        "description": "Requested number of resources to be provided in response",
                        "required": false,
                        "in": "query",
                        "type": "integer"
                    },
                    {
                        "name": "accessNodeEquipmentBusinessRef.endSz",
                        "description": "For filtering on the base of 'accessNodeEquipmentBusinessRef.endSz' field (equality)",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "accessNodeEquipmentBusinessRef.portName",
                        "description": "For filtering on the base of 'accessNodeEquipmentBusinessRef.portName' field (equality)",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "accessNodeEquipmentBusinessRef.slotName",
                        "description": "For filtering on the base of 'accessNodeEquipmentBusinessRef.slotName' field (equality)",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "bngDownlinkPortEquipmentBusinessRef.endSz",
                        "description": "For filtering on the base of 'bngDownlinkPortEquipmentBusinessRef.endSz' field (equality)",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "bngDownlinkPortEquipmentBusinessRef.portName",
                        "description": "For filtering on the base of 'bngDownlinkPortEquipmentBusinessRef.portName' field (equality)",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "bngDownlinkPortEquipmentBusinessRef.slotName",
                        "description": "For filtering on the base of 'bngDownlinkPortEquipmentBusinessRef.slotName' field (equality)",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "configurationStatus",
                        "description": "For filtering on the base of 'configurationStatus' field (equality)",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "creationDate",
                        "description": "For filtering on the base of 'creationDate' field (equality)",
                        "in": "query",
                        "format": "date-time",
                        "type": "string"
                    },
                    {
                        "name": "creationDate.gt",
                        "description": "For filtering on the base of 'creationDate' field (great than)",
                        "type": "string",
                        "format": "date-time",
                        "in": "query"
                    },
                    {
                        "name": "creationDate.lt",
                        "description": "For filtering on the base of 'creationDate' field (less than)",
                        "type": "string",
                        "format": "date-time",
                        "in": "query"
                    },
                    {
                        "name": "ipAddressAccessNode",
                        "description": "For filtering on the base of 'ipAddressAccessNode' field (equality)",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "ipAddressBng",
                        "description": "For filtering on the base of 'ipAddressBng' field (equality)",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "modificationDate",
                        "description": "For filtering on the base of 'modificationDate' field (equality)",
                        "in": "query",
                        "format": "date-time",
                        "type": "string"
                    },
                    {
                        "name": "modificationDate.gt",
                        "description": "For filtering on the base of 'modificationDate' field (great than)",
                        "type": "string",
                        "format": "date-time",
                        "in": "query"
                    },
                    {
                        "name": "modificationDate.lt",
                        "description": "For filtering on the base of 'modificationDate' field (less than)",
                        "type": "string",
                        "format": "date-time",
                        "in": "query"
                    },
                    {
                        "name": "oltUplinkPortEquipmentBusinessRef.endSz",
                        "description": "For filtering on the base of 'oltUplinkPortEquipmentBusinessRef.endSz' field (equality)",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "oltUplinkPortEquipmentBusinessRef.portName",
                        "description": "For filtering on the base of 'oltUplinkPortEquipmentBusinessRef.portName' field (equality)",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "oltUplinkPortEquipmentBusinessRef.slotName",
                        "description": "For filtering on the base of 'oltUplinkPortEquipmentBusinessRef.slotName' field (equality)",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "rmkEndpointId",
                        "description": "For filtering on the base of 'rmkEndpointId' field (equality)",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "sealConfigurationId",
                        "description": "For filtering on the base of 'sealConfigurationId' field (equality)",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "sessionType",
                        "description": "For filtering on the base of 'sessionType' field (equality)",
                        "in": "query",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {
                            "X-Result-Count": {
                                "description": "Actual number of items returned in the response body",
                                "type": "integer"
                            },
                            "X-Total-Count": {
                                "description": "Total number of items matching criteria",
                                "type": "integer"
                            }
                        },
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AncpSession"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "405": {
                        "description": "Method Not allowed",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "OauthSecurity": [
                            "rori:ancp:full",
                            "giga:cga:all-area-access"
                        ]
                    }
                ],
                "operationId": "createAncpSession",
                "summary": "Creates a AncpSession",
                "description": "This operation creates a AncpSession entity.",
                "tags": [
                    "ancpSession"
                ],
                "parameters": [
                    {
                        "name": "ancpSession",
                        "description": "The AncpSession to be created",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AncpSession_Create"
                        },
                        "in": "body"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/AncpSession"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "405": {
                        "description": "Method Not allowed",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/ancpSession/{id}": {
            "get": {
                "security": [
                    {
                        "OauthSecurity": [
                            "rori:ancp:full",
                            "giga:cga:all-area-access"
                        ]
                    }
                ],
                "operationId": "retrieveAncpSession",
                "summary": "Retrieves a AncpSession by ID",
                "description": "This operation retrieves a AncpSession entity. Attribute selection is enabled for all first level attributes.",
                "tags": [
                    "ancpSession"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "Identifier of the AncpSession",
                        "required": true,
                        "type": "string",
                        "in": "path"
                    },
                    {
                        "name": "fields",
                        "description": "Comma-separated properties to provide in response",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/AncpSession"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "405": {
                        "description": "Method Not allowed",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "OauthSecurity": [
                            "rori:ancp:full",
                            "giga:cga:all-area-access"
                        ]
                    }
                ],
                "operationId": "patchAncpSession",
                "summary": "Updates partially a AncpSession",
                "description": "This operation updates partially a AncpSession entity.",
                "tags": [
                    "ancpSession"
                ],
                "consumes": [
                    "application/json-patch+json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "Identifier of the AncpSession",
                        "required": true,
                        "type": "string",
                        "in": "path"
                    },
                    {
                        "name": "JsonPatchOperation",
                        "description": "List of JSONPatch operation as defined by RFC 6902",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/JsonPatchOperation"
                            }
                        },
                        "in": "body"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated",
                        "schema": {
                            "$ref": "#/definitions/AncpSession"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "405": {
                        "description": "Method Not allowed",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "OauthSecurity": [
                            "rori:ancp:full",
                            "giga:cga:all-area-access"
                        ]
                    }
                ],
                "operationId": "deleteAncpSession",
                "summary": "Deletes a AncpSession",
                "description": "This operation deletes a AncpSession entity.",
                "tags": [
                    "ancpSession"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "Identifier of the AncpSession",
                        "required": true,
                        "type": "string",
                        "in": "path"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deleted"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "405": {
                        "description": "Method Not allowed",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/ancpIpSubnet": {
            "get": {
                "security": [
                    {
                        "OauthSecurity": [
                            "rori:ipsubnet:full",
                            "giga:cga:all-area-access"
                        ]
                    }
                ],
                "operationId": "listAncpIpSubnet",
                "summary": "List or find AncpIpSubnet objects",
                "description": "This operation list or find AncpIpSubnet entities",
                "tags": [
                    "ancpIpSubnet"
                ],
                "parameters": [
                    {
                        "name": "fields",
                        "description": "Comma-separated properties to be provided in response",
                        "required": false,
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "offset",
                        "description": "Requested index for start of resources to be provided in response",
                        "required": false,
                        "in": "query",
                        "type": "integer"
                    },
                    {
                        "name": "limit",
                        "description": "Requested number of resources to be provided in response",
                        "required": false,
                        "in": "query",
                        "type": "integer"
                    },
                    {
                        "name": "ancpIpSubnetType",
                        "description": "For filtering on the base of 'ancpIpSubnetType' field (equality)",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "bngDownlinkPortEquipmentBusinessRef.endSz",
                        "description": "For filtering on the base of 'bngDownlinkPortEquipmentBusinessRef.endSz' field (equality)",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "bngDownlinkPortEquipmentBusinessRef.portName",
                        "description": "For filtering on the base of 'bngDownlinkPortEquipmentBusinessRef.portName' field (equality)",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "bngDownlinkPortEquipmentBusinessRef.slotName",
                        "description": "For filtering on the base of 'bngDownlinkPortEquipmentBusinessRef.slotName' field (equality)",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "creationDate",
                        "description": "For filtering on the base of 'creationDate' field (equality)",
                        "in": "query",
                        "format": "date-time",
                        "type": "string"
                    },
                    {
                        "name": "creationDate.gt",
                        "description": "For filtering on the base of 'creationDate' field (great than)",
                        "type": "string",
                        "format": "date-time",
                        "in": "query"
                    },
                    {
                        "name": "creationDate.lt",
                        "description": "For filtering on the base of 'creationDate' field (less than)",
                        "type": "string",
                        "format": "date-time",
                        "in": "query"
                    },
                    {
                        "name": "ipAddressBng",
                        "description": "For filtering on the base of 'ipAddressBng' field (equality)",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "ipAddressBroadcast",
                        "description": "For filtering on the base of 'ipAddressBroadcast' field (equality)",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "ipAddressLoopback",
                        "description": "For filtering on the base of 'ipAddressLoopback' field (equality)",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "modificationDate",
                        "description": "For filtering on the base of 'modificationDate' field (equality)",
                        "in": "query",
                        "format": "date-time",
                        "type": "string"
                    },
                    {
                        "name": "modificationDate.gt",
                        "description": "For filtering on the base of 'modificationDate' field (great than)",
                        "type": "string",
                        "format": "date-time",
                        "in": "query"
                    },
                    {
                        "name": "modificationDate.lt",
                        "description": "For filtering on the base of 'modificationDate' field (less than)",
                        "type": "string",
                        "format": "date-time",
                        "in": "query"
                    },
                    {
                        "name": "rmkAccessId",
                        "description": "For filtering on the base of 'rmkAccessId' field (equality)",
                        "in": "query",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {
                            "X-Result-Count": {
                                "description": "Actual number of items returned in the response body",
                                "type": "integer"
                            },
                            "X-Total-Count": {
                                "description": "Total number of items matching criteria",
                                "type": "integer"
                            }
                        },
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AncpIpSubnet"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "405": {
                        "description": "Method Not allowed",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "OauthSecurity": [
                            "rori:ipsubnet:full",
                            "giga:cga:all-area-access"
                        ]
                    }
                ],
                "operationId": "createAncpIpSubnet",
                "summary": "Creates a AncpIpSubnet",
                "description": "This operation creates a AncpIpSubnet entity.",
                "tags": [
                    "ancpIpSubnet"
                ],
                "parameters": [
                    {
                        "name": "ancpIpSubnet",
                        "description": "The AncpIpSubnet to be created",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AncpIpSubnet_Create"
                        },
                        "in": "body"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/AncpIpSubnet"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "405": {
                        "description": "Method Not allowed",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/ancpIpSubnet/{id}": {
            "get": {
                "security": [
                    {
                        "OauthSecurity": [
                            "rori:ipsubnet:full",
                            "giga:cga:all-area-access"
                        ]
                    }
                ],
                "operationId": "retrieveAncpIpSubnet",
                "summary": "Retrieves a AncpIpSubnet by ID",
                "description": "This operation retrieves a AncpIpSubnet entity. Attribute selection is enabled for all first level attributes.",
                "tags": [
                    "ancpIpSubnet"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "Identifier of the AncpIpSubnet",
                        "required": true,
                        "type": "string",
                        "in": "path"
                    },
                    {
                        "name": "fields",
                        "description": "Comma-separated properties to provide in response",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/AncpIpSubnet"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "405": {
                        "description": "Method Not allowed",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "OauthSecurity": [
                            "rori:ipsubnet:full",
                            "giga:cga:all-area-access"
                        ]
                    }
                ],
                "operationId": "patchAncpIpSubnet",
                "summary": "Updates partially a AncpIpSubnet",
                "description": "This operation updates partially a AncpIpSubnet entity.",
                "tags": [
                    "ancpIpSubnet"
                ],
                "consumes": [
                    "application/json-patch+json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "Identifier of the AncpIpSubnet",
                        "required": true,
                        "type": "string",
                        "in": "path"
                    },
                    {
                        "name": "JsonPatchOperation",
                        "description": "List of JSONPatch operation as defined by RFC 6902",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/JsonPatchOperation"
                            }
                        },
                        "in": "body"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated",
                        "schema": {
                            "$ref": "#/definitions/AncpIpSubnet"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "405": {
                        "description": "Method Not allowed",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "OauthSecurity": [
                            "rori:ipsubnet:full",
                            "giga:cga:all-area-access"
                        ]
                    }
                ],
                "operationId": "deleteAncpIpSubnet",
                "summary": "Deletes a AncpIpSubnet",
                "description": "This operation deletes a AncpIpSubnet entity.",
                "tags": [
                    "ancpIpSubnet"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "Identifier of the AncpIpSubnet",
                        "required": true,
                        "type": "string",
                        "in": "path"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deleted"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "405": {
                        "description": "Method Not allowed",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/oltZtcConfiguration": {
            "get": {
                "security": [
                    {
                        "OauthSecurity": [
                            "rori:ztcconfiguration:read",
                            "rori:ztcconfiguration:full",
                            "giga:cga:all-area-access"
                        ]
                    }
                ],
                "operationId": "listOltZtcConfiguration",
                "summary": "List or find OltZtcConfiguration objects",
                "description": "This operation list or find OltZtcConfiguration entities",
                "tags": [
                    "oltZtcConfiguration"
                ],
                "parameters": [
                    {
                        "name": "fields",
                        "description": "Comma-separated properties to be provided in response",
                        "required": false,
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "offset",
                        "description": "Requested index for start of resources to be provided in response",
                        "required": false,
                        "in": "query",
                        "type": "integer"
                    },
                    {
                        "name": "limit",
                        "description": "Requested number of resources to be provided in response",
                        "required": false,
                        "in": "query",
                        "type": "integer"
                    },
                    {
                        "name": "creationDate",
                        "description": "For filtering on the base of 'creationDate' field (equality)",
                        "in": "query",
                        "format": "date-time",
                        "type": "string"
                    },
                    {
                        "name": "creationDate.gt",
                        "description": "For filtering on the base of 'creationDate' field (great than)",
                        "type": "string",
                        "format": "date-time",
                        "in": "query"
                    },
                    {
                        "name": "creationDate.lt",
                        "description": "For filtering on the base of 'creationDate' field (less than)",
                        "type": "string",
                        "format": "date-time",
                        "in": "query"
                    },
                    {
                        "name": "modificationDate",
                        "description": "For filtering on the base of 'modificationDate' field (equality)",
                        "in": "query",
                        "format": "date-time",
                        "type": "string"
                    },
                    {
                        "name": "modificationDate.gt",
                        "description": "For filtering on the base of 'modificationDate' field (great than)",
                        "type": "string",
                        "format": "date-time",
                        "in": "query"
                    },
                    {
                        "name": "modificationDate.lt",
                        "description": "For filtering on the base of 'modificationDate' field (less than)",
                        "type": "string",
                        "format": "date-time",
                        "in": "query"
                    },
                    {
                        "name": "installOltCorrelationId",
                        "description": "For filtering on the base of 'installOltCorrelationId' field (equality)",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "oltEndSz",
                        "description": "For filtering on the base of 'oltEndSz' field (equality)",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "processId",
                        "description": "For filtering on the base of 'processId' field (equality)",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "serialNumber",
                        "description": "For filtering on the base of 'serialNumber' field (equality)",
                        "in": "query",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {
                            "X-Result-Count": {
                                "description": "Actual number of items returned in the response body",
                                "type": "integer"
                            },
                            "X-Total-Count": {
                                "description": "Total number of items matching criteria",
                                "type": "integer"
                            }
                        },
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/OltZtcConfiguration"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "405": {
                        "description": "Method Not allowed",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "OauthSecurity": [
                            "rori:ztcconfiguration:full",
                            "giga:cga:all-area-access"
                        ]
                    }
                ],
                "operationId": "createOltZtcConfiguration",
                "summary": "Creates a OltZtcConfiguration",
                "description": "This operation creates a OltZtcConfiguration entity.",
                "tags": [
                    "oltZtcConfiguration"
                ],
                "parameters": [
                    {
                        "name": "oltZtcConfiguration",
                        "description": "The OltZtcConfiguration to be created",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OltZtcConfiguration_Create"
                        },
                        "in": "body"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/OltZtcConfiguration"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "405": {
                        "description": "Method Not allowed",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/oltZtcConfiguration/{id}": {
            "get": {
                "security": [
                    {
                        "OauthSecurity": [
                            "rori:ztcconfiguration:read",
                            "rori:ztcconfiguration:full",
                            "giga:cga:all-area-access"
                        ]
                    }
                ],
                "operationId": "retrieveOltZtcConfiguration",
                "summary": "Retrieves a OltZtcConfiguration by ID",
                "description": "This operation retrieves a OltZtcConfiguration entity. Attribute selection is enabled for all first level attributes.",
                "tags": [
                    "oltZtcConfiguration"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "Identifier of the OltZtcConfiguration",
                        "required": true,
                        "type": "string",
                        "in": "path"
                    },
                    {
                        "name": "fields",
                        "description": "Comma-separated properties to provide in response",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/OltZtcConfiguration"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "405": {
                        "description": "Method Not allowed",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "OauthSecurity": [
                            "rori:ztcconfiguration:full",
                            "giga:cga:all-area-access"
                        ]
                    }
                ],
                "operationId": "patchOltZtcConfiguration",
                "summary": "Updates partially a OltZtcConfiguration",
                "description": "This operation updates partially a OltZtcConfiguration entity.",
                "tags": [
                    "oltZtcConfiguration"
                ],
                "consumes": [
                    "application/json-patch+json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "Identifier of the OltZtcConfiguration",
                        "required": true,
                        "type": "string",
                        "in": "path"
                    },
                    {
                        "name": "JsonPatchOperation",
                        "description": "List of JSONPatch operation as defined by RFC 6902",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/JsonPatchOperation"
                            }
                        },
                        "in": "body"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated",
                        "schema": {
                            "$ref": "#/definitions/OltZtcConfiguration"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "405": {
                        "description": "Method Not allowed",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "OauthSecurity": [
                            "rori:ztcconfiguration:full",
                            "giga:cga:all-area-access"
                        ]
                    }
                ],
                "operationId": "deleteOltZtcConfiguration",
                "summary": "Deletes a OltZtcConfiguration",
                "description": "This operation deletes a OltZtcConfiguration entity.",
                "tags": [
                    "oltZtcConfiguration"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "Identifier of the OltZtcConfiguration",
                        "required": true,
                        "type": "string",
                        "in": "path"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deleted"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "405": {
                        "description": "Method Not allowed",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "JsonPatchOperation": {
            "type": "object",
            "description": "A JSONPatch operation as defined by RFC 6902",
            "properties": {
                "op": {
                    "type": "string",
                    "description": "The operation to be performed",
                    "enum": [
                        "add",
                        "remove",
                        "replace",
                        "move",
                        "copy",
                        "test"
                    ]
                },
                "path": {
                    "type": "string",
                    "description": "JSON-Pointer"
                },
                "value": {
                    "type": "object",
                    "description": "Value to be used within the operations"
                },
                "from": {
                    "type": "string",
                    "description": "String containing a JSON Pointer value"
                }
            },
            "required": [
                "op",
                "path"
            ]
        },
        "Addressable": {
            "type": "object",
            "description": "Base schema for adressable entities",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "unique identifier"
                },
                "href": {
                    "format": "uri",
                    "type": "string",
                    "description": "Hyperlink reference"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class entity name"
                }
            }
        },
        "AllocatedAncpIpAddress": {
            "type": "object",
            "description": "AllocatedAncpIpAddress\nSkipped properties: category,description,endOperatingDate,name,resourceVersion,startOperatingDate,value,activationFeature,administrativeState,attachment,note,operationalState,place,relatedParty,resourceCharacteristic,resourceRelationship,resourceSpecification,resourceStatus,usageState",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Identifier of an instance of the resource. Required to be unique within the resource type.  Used in URIs as the identifier for specific instances of a type."
                },
                "ipAddress": {
                    "example": "192.168.0.1",
                    "type": "string",
                    "description": "Allocated IP address (IPv4)"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class entity name"
                }
            }
        },
        "AncpIpSubnet": {
            "type": "object",
            "description": "AncpIpSubnet\nSkipped properties: category,description,endOperatingDate,name,resourceVersion,startOperatingDate,value,activationFeature,administrativeState,attachment,note,operationalState,place,relatedParty,resourceCharacteristic,resourceRelationship,resourceSpecification,resourceStatus,usageState",
            "required": [
                "href",
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Identifier of an instance of the resource. Required to be unique within the resource type.  Used in URIs as the identifier for specific instances of a type."
                },
                "href": {
                    "format": "uri",
                    "type": "string",
                    "description": "The URI for the object itself."
                },
                "ancpIpSubnetType": {
                    "example": "OLT",
                    "type": "string",
                    "description": "Type of subnet. Possible values are: OLT, DPU"
                },
                "creationDate": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "Date of creation (ISO-8601)"
                },
                "ipAddressBng": {
                    "example": "10.150.240.102",
                    "type": "string",
                    "description": "IP address of BNG (IPv4)"
                },
                "ipAddressBroadcast": {
                    "example": "10.150.240.103",
                    "type": "string",
                    "description": "Broadcast IP address (IPv4)"
                },
                "ipAddressLoopback": {
                    "example": "10.150.240.100",
                    "type": "string",
                    "description": "Loopback IP address (IPv4)"
                },
                "modificationDate": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "Date of modification (ISO-8601)"
                },
                "rmkAccessId": {
                    "example": "1341434323",
                    "type": "string",
                    "description": "ID of RMK Access A/T"
                },
                "subnetMask": {
                    "example": "/30",
                    "type": "string",
                    "description": "Subnet mask"
                },
                "allocatedIpAddresses": {
                    "example": "10.150.240.106",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AllocatedAncpIpAddress"
                    },
                    "description": "Allocated IP addresses (IPv4)"
                },
                "bngDownlinkPortEquipmentBusinessRef": {
                    "$ref": "#/definitions/EquipmentBusinessRef",
                    "description": "The BNG port the ANCP session is configured(!) on. The current physical connection can be different."
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class entity name"
                }
            }
        },
        "AncpIpSubnet_Create": {
            "type": "object",
            "description": "AncpIpSubnet\nSkipped properties: category,description,endOperatingDate,name,resourceVersion,startOperatingDate,value,activationFeature,administrativeState,attachment,note,operationalState,place,relatedParty,resourceCharacteristic,resourceRelationship,resourceSpecification,resourceStatus,usageState,id,href",
            "required": [
                "subnetMask",
                "ipAddressLoopback",
                "ipAddressBng",
                "ipAddressBroadcast"
            ],
            "properties": {
                "ancpIpSubnetType": {
                    "example": "OLT",
                    "type": "string",
                    "description": "Type of subnet. Possible values are: OLT, DPU"
                },
                "creationDate": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "Date of creation (ISO-8601)"
                },
                "ipAddressBng": {
                    "example": "10.150.240.102",
                    "type": "string",
                    "description": "IP address of BNG (IPv4)"
                },
                "ipAddressBroadcast": {
                    "example": "10.150.240.103",
                    "type": "string",
                    "description": "Broadcast IP address (IPv4)"
                },
                "ipAddressLoopback": {
                    "example": "10.150.240.100",
                    "type": "string",
                    "description": "Loopback IP address (IPv4)"
                },
                "modificationDate": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "Date of modification (ISO-8601)"
                },
                "rmkAccessId": {
                    "example": "1341434323",
                    "type": "string",
                    "description": "ID of RMK Access A/T"
                },
                "subnetMask": {
                    "example": "/30",
                    "type": "string",
                    "description": "Subnet mask"
                },
                "allocatedIpAddresses": {
                    "example": "10.150.240.106",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AllocatedAncpIpAddress"
                    },
                    "description": "Allocated IP addresses (IPv4)"
                },
                "bngDownlinkPortEquipmentBusinessRef": {
                    "$ref": "#/definitions/EquipmentBusinessRef",
                    "description": "The BNG port the ANCP session is configured(!) on. The current physical connection can be different."
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class entity name"
                }
            }
        },
        "AncpIpSubnet_Update": {
            "type": "object",
            "description": "AncpIpSubnet\nSkipped properties: category,description,endOperatingDate,name,resourceVersion,startOperatingDate,value,activationFeature,administrativeState,attachment,note,operationalState,place,relatedParty,resourceCharacteristic,resourceRelationship,resourceSpecification,resourceStatus,usageState,id,href",
            "properties": {
                "ancpIpSubnetType": {
                    "example": "OLT",
                    "type": "string",
                    "description": "Type of subnet. Possible values are: OLT, DPU"
                },
                "creationDate": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "Date of creation (ISO-8601)"
                },
                "ipAddressBng": {
                    "example": "10.150.240.102",
                    "type": "string",
                    "description": "IP address of BNG (IPv4)"
                },
                "ipAddressBroadcast": {
                    "example": "10.150.240.103",
                    "type": "string",
                    "description": "Broadcast IP address (IPv4)"
                },
                "ipAddressLoopback": {
                    "example": "10.150.240.100",
                    "type": "string",
                    "description": "Loopback IP address (IPv4)"
                },
                "modificationDate": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "Date of modification (ISO-8601)"
                },
                "rmkAccessId": {
                    "example": "1341434323",
                    "type": "string",
                    "description": "ID of RMK Access A/T"
                },
                "subnetMask": {
                    "example": "/30",
                    "type": "string",
                    "description": "Subnet mask"
                },
                "allocatedIpAddresses": {
                    "example": "10.150.240.106",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AllocatedAncpIpAddress"
                    },
                    "description": "Allocated IP addresses (IPv4)"
                },
                "bngDownlinkPortEquipmentBusinessRef": {
                    "$ref": "#/definitions/EquipmentBusinessRef",
                    "description": "The BNG port the ANCP session is configured(!) on. The current physical connection can be different."
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class entity name"
                }
            }
        },
        "AncpSession": {
            "type": "object",
            "description": "AncpSession\nSkipped properties: category,endOperatingDate,administrativeState,operationalState,resourceStatus,usageState,note,place,resourceRelationship,resourceCharacteristic,attachment,resourceSpecification,startOperatingDate,resourceVersion,activationFeature,manufactureDate,powerState,versionNumber,value,shortName,materialNumber,emsNbiName,descriptionUrl,lastDiscovery,description,manufacturer,name,serialNumber,equipmentNumber,relatedParty",
            "required": [
                "href",
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Identifier of an instance of the resource. Required to be unique within the resource type.  Used in URIs as the identifier for specific instances of a type."
                },
                "href": {
                    "format": "uri",
                    "type": "string",
                    "description": "The URI for the object itself."
                },
                "additionalInfo": {
                    "example": "",
                    "type": "string",
                    "description": "Additional info"
                },
                "configurationStatus": {
                    "example": "ACTIVE",
                    "type": "string",
                    "description": "The status of current configuration. Allowed values are: ACTIVE, IN_CONFIGURATION, IN_DECONFIGURATION, ERROR"
                },
                "configurationStep": {
                    "example": "CREATE_IP_RANGE_ASSIGNMENT",
                    "type": "string",
                    "description": "Step of configuration. Allowed values are: CREATE_IP_RANGE_ASSIGNMENT, CREATE_ANCP_ENDPOINT, CREATE_ANCP_CONFIGURATION, DELETE_ANCP_CONFIGURATION, DEACTIVATE_ANCP_ENDPOINT, DELETE_IP_RANGE_ASSIGNMENT"
                },
                "creationDate": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "Date of creation (ISO-8601)"
                },
                "ipAddressAccessNode": {
                    "example": "10.150.240.101",
                    "type": "string",
                    "description": "IP address of OLT (IPv4)"
                },
                "ipAddressBng": {
                    "example": "10.150.240.102",
                    "type": "string",
                    "description": "IP address of BNG (IPv4)"
                },
                "lastActivity": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "Timestamp of last activity (ISO-8601)"
                },
                "lastAncpStatus": {
                    "type": "string",
                    "description": "Last known status of ancp session"
                },
                "modificationDate": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "Date of modification (ISO-8601)"
                },
                "partitionId": {
                    "example": "2",
                    "type": "integer",
                    "description": "Identifier of Access Node partition"
                },
                "rmkEndpointId": {
                    "example": "1341abc434323",
                    "type": "string",
                    "description": "identifier of RMK A/T"
                },
                "sealConfigurationId": {
                    "example": "0-19-1-2-16",
                    "type": "string",
                    "description": "Identifier of SEAL"
                },
                "sessionId": {
                    "example": "2",
                    "type": "string",
                    "description": "Unique id of ancp session"
                },
                "sessionType": {
                    "example": "OLT",
                    "type": "string",
                    "description": "Type of ANCP session. Possible values are: OLT, DPU"
                },
                "vlan": {
                    "example": "16",
                    "type": "integer",
                    "description": "Virtual LAN Identifier used by ANCP link"
                },
                "accessNodeEquipmentBusinessRef": {
                    "$ref": "#/definitions/EquipmentBusinessRef",
                    "description": "The device for which the ANCP Session has been configured. Can be DPU or OLT depending on Session type."
                },
                "ancpIpSubnetRef": {
                    "$ref": "#/definitions/EntityRef"
                },
                "bngDownlinkPortEquipmentBusinessRef": {
                    "$ref": "#/definitions/EquipmentBusinessRef",
                    "description": "The BNG port the ANCP session is configured(!) on. The current physical connection can be different."
                },
                "oltUplinkPortEquipmentBusinessRef": {
                    "$ref": "#/definitions/EquipmentBusinessRef",
                    "description": "The OLT port the ANCP session is configured(!) on (OLT ANCP) or is relayed over (DPU ANCP). The current physical connection can be different."
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class entity name"
                }
            }
        },
        "AncpSession_Create": {
            "type": "object",
            "description": "AncpSession\nSkipped properties: category,endOperatingDate,administrativeState,operationalState,resourceStatus,usageState,note,place,resourceRelationship,resourceCharacteristic,attachment,resourceSpecification,startOperatingDate,resourceVersion,activationFeature,manufactureDate,powerState,versionNumber,value,shortName,materialNumber,emsNbiName,descriptionUrl,lastDiscovery,description,manufacturer,name,serialNumber,equipmentNumber,relatedParty,id,href",
            "required": [
                "sessionType",
                "configurationStatus",
                "accessNodeEquipmentBusinessRef",
                "bngDownlinkPortEquipmentBusinessRef",
                "oltUplinkPortEquipmentBusinessRef"
            ],
            "properties": {
                "additionalInfo": {
                    "example": "",
                    "type": "string",
                    "description": "Additional info"
                },
                "configurationStatus": {
                    "example": "ACTIVE",
                    "type": "string",
                    "description": "The status of current configuration. Allowed values are: ACTIVE, IN_CONFIGURATION, IN_DECONFIGURATION, ERROR"
                },
                "configurationStep": {
                    "example": "CREATE_IP_RANGE_ASSIGNMENT",
                    "type": "string",
                    "description": "Step of configuration. Allowed values are: CREATE_IP_RANGE_ASSIGNMENT, CREATE_ANCP_ENDPOINT, CREATE_ANCP_CONFIGURATION, DELETE_ANCP_CONFIGURATION, DEACTIVATE_ANCP_ENDPOINT, DELETE_IP_RANGE_ASSIGNMENT"
                },
                "creationDate": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "Date of creation (ISO-8601)"
                },
                "ipAddressAccessNode": {
                    "example": "10.150.240.101",
                    "type": "string",
                    "description": "IP address of OLT (IPv4)"
                },
                "ipAddressBng": {
                    "example": "10.150.240.102",
                    "type": "string",
                    "description": "IP address of BNG (IPv4)"
                },
                "lastActivity": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "Timestamp of last activity (ISO-8601)"
                },
                "lastAncpStatus": {
                    "type": "string",
                    "description": "Last known status of ancp session"
                },
                "modificationDate": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "Date of modification (ISO-8601)"
                },
                "partitionId": {
                    "example": "2",
                    "type": "integer",
                    "description": "Identifier of Access Node partition"
                },
                "rmkEndpointId": {
                    "example": "1341abc434323",
                    "type": "string",
                    "description": "identifier of RMK A/T"
                },
                "sealConfigurationId": {
                    "example": "0-19-1-2-16",
                    "type": "string",
                    "description": "Identifier of SEAL"
                },
                "sessionId": {
                    "example": "2",
                    "type": "string",
                    "description": "Unique id of ancp session"
                },
                "sessionType": {
                    "example": "OLT",
                    "type": "string",
                    "description": "Type of ANCP session. Possible values are: OLT, DPU"
                },
                "vlan": {
                    "example": "16",
                    "type": "integer",
                    "description": "Virtual LAN Identifier used by ANCP link"
                },
                "accessNodeEquipmentBusinessRef": {
                    "$ref": "#/definitions/EquipmentBusinessRef",
                    "description": "The device for which the ANCP Session has been configured. Can be DPU or OLT depending on Session type."
                },
                "ancpIpSubnetRef": {
                    "$ref": "#/definitions/EntityRef"
                },
                "bngDownlinkPortEquipmentBusinessRef": {
                    "$ref": "#/definitions/EquipmentBusinessRef",
                    "description": "The BNG port the ANCP session is configured(!) on. The current physical connection can be different."
                },
                "oltUplinkPortEquipmentBusinessRef": {
                    "$ref": "#/definitions/EquipmentBusinessRef",
                    "description": "The OLT port the ANCP session is configured(!) on (OLT ANCP) or is relayed over (DPU ANCP). The current physical connection can be different."
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class entity name"
                }
            }
        },
        "AncpSession_Update": {
            "type": "object",
            "description": "AncpSession\nSkipped properties: category,endOperatingDate,administrativeState,operationalState,resourceStatus,usageState,note,place,resourceRelationship,resourceCharacteristic,attachment,resourceSpecification,startOperatingDate,resourceVersion,activationFeature,manufactureDate,powerState,versionNumber,value,shortName,materialNumber,emsNbiName,descriptionUrl,lastDiscovery,description,manufacturer,name,serialNumber,equipmentNumber,relatedParty,id,href",
            "properties": {
                "additionalInfo": {
                    "example": "",
                    "type": "string",
                    "description": "Additional info"
                },
                "configurationStatus": {
                    "example": "ACTIVE",
                    "type": "string",
                    "description": "The status of current configuration. Allowed values are: ACTIVE, IN_CONFIGURATION, IN_DECONFIGURATION, ERROR"
                },
                "configurationStep": {
                    "example": "CREATE_IP_RANGE_ASSIGNMENT",
                    "type": "string",
                    "description": "Step of configuration. Allowed values are: CREATE_IP_RANGE_ASSIGNMENT, CREATE_ANCP_ENDPOINT, CREATE_ANCP_CONFIGURATION, DELETE_ANCP_CONFIGURATION, DEACTIVATE_ANCP_ENDPOINT, DELETE_IP_RANGE_ASSIGNMENT"
                },
                "creationDate": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "Date of creation (ISO-8601)"
                },
                "ipAddressAccessNode": {
                    "example": "10.150.240.101",
                    "type": "string",
                    "description": "IP address of OLT (IPv4)"
                },
                "ipAddressBng": {
                    "example": "10.150.240.102",
                    "type": "string",
                    "description": "IP address of BNG (IPv4)"
                },
                "lastActivity": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "Timestamp of last activity (ISO-8601)"
                },
                "lastAncpStatus": {
                    "type": "string",
                    "description": "Last known status of ancp session"
                },
                "modificationDate": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "Date of modification (ISO-8601)"
                },
                "partitionId": {
                    "example": "2",
                    "type": "integer",
                    "description": "Identifier of Access Node partition"
                },
                "rmkEndpointId": {
                    "example": "1341abc434323",
                    "type": "string",
                    "description": "identifier of RMK A/T"
                },
                "sealConfigurationId": {
                    "example": "0-19-1-2-16",
                    "type": "string",
                    "description": "Identifier of SEAL"
                },
                "sessionId": {
                    "example": "2",
                    "type": "string",
                    "description": "Unique id of ancp session"
                },
                "sessionType": {
                    "example": "OLT",
                    "type": "string",
                    "description": "Type of ANCP session. Possible values are: OLT, DPU"
                },
                "vlan": {
                    "example": "16",
                    "type": "integer",
                    "description": "Virtual LAN Identifier used by ANCP link"
                },
                "accessNodeEquipmentBusinessRef": {
                    "$ref": "#/definitions/EquipmentBusinessRef",
                    "description": "The device for which the ANCP Session has been configured. Can be DPU or OLT depending on Session type."
                },
                "ancpIpSubnetRef": {
                    "$ref": "#/definitions/EntityRef"
                },
                "bngDownlinkPortEquipmentBusinessRef": {
                    "$ref": "#/definitions/EquipmentBusinessRef",
                    "description": "The BNG port the ANCP session is configured(!) on. The current physical connection can be different."
                },
                "oltUplinkPortEquipmentBusinessRef": {
                    "$ref": "#/definitions/EquipmentBusinessRef",
                    "description": "The OLT port the ANCP session is configured(!) on (OLT ANCP) or is relayed over (DPU ANCP). The current physical connection can be different."
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class entity name"
                }
            }
        },
        "Any": {},
        "Attachment": {
            "type": "object",
            "description": "Complements the description of an element (for instance a product) through video, pictures...",
            "properties": {
                "id": {
                    "example": "4aafacbd-11ff-4dc8-b445-305f2215715f",
                    "type": "string",
                    "description": "Unique identifier for this particular attachment"
                },
                "href": {
                    "example": "http://host/Attachment/4aafacbd-11ff-4dc8-b445-305f2215715f",
                    "format": "uri",
                    "type": "string",
                    "description": "URI for this Attachment"
                },
                "attachmentType": {
                    "example": "video",
                    "type": "string",
                    "description": "Attachment type such as video, picture"
                },
                "content": {
                    "format": "base64",
                    "type": "string",
                    "description": "The actual contents of the attachment object, if embedded, encoded as base64"
                },
                "description": {
                    "example": "Photograph of the Product",
                    "type": "string",
                    "description": "A narrative text describing the content of the attachment"
                },
                "mimeType": {
                    "type": "string",
                    "description": "Attachment mime type such as extension file for video, picture and document"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the attachment"
                },
                "url": {
                    "example": "http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f",
                    "format": "uri",
                    "type": "string",
                    "description": "Uniform Resource Locator, is a web page address (a subset of URI)"
                },
                "size": {
                    "$ref": "#/definitions/Quantity",
                    "description": "The size of the attachment."
                },
                "validFor": {
                    "$ref": "#/definitions/TimePeriod",
                    "description": "The period of time for which the attachment is valid"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class entity name"
                }
            }
        },
        "AttachmentRef": {
            "type": "object",
            "description": "Attachment reference. An attachment complements the description of an element (for instance a product) through video, pictures",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Unique-Identifier for this attachment"
                },
                "href": {
                    "format": "uri",
                    "type": "string",
                    "description": "URL serving as reference for the attachment resource"
                },
                "description": {
                    "type": "string",
                    "description": "A narrative text describing the content of the attachment"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the related entity."
                },
                "url": {
                    "format": "uri",
                    "type": "string",
                    "description": "Link to the attachment media/content"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "format": "uri",
                    "type": "string",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                },
                "@referredType": {
                    "type": "string",
                    "description": "The actual type of the target instance when needed for disambiguation."
                }
            },
            "required": [
                "id"
            ]
        },
        "AttachmentRefOrValue": {
            "type": "object",
            "description": "An attachment by value or by reference. An attachment complements the description of an element, for example through a document, a video, a picture.",
            "properties": {
                "id": {
                    "example": "4aafacbd-11ff-4dc8-b445-305f2215715f",
                    "type": "string",
                    "description": "Unique identifier for this particular attachment"
                },
                "href": {
                    "example": "http://host/Attachment/4aafacbd-11ff-4dc8-b445-305f2215715f",
                    "format": "uri",
                    "type": "string",
                    "description": "URI for this Attachment"
                },
                "attachmentType": {
                    "example": "video",
                    "type": "string",
                    "description": "Attachment type such as video, picture"
                },
                "content": {
                    "format": "base64",
                    "type": "string",
                    "description": "The actual contents of the attachment object, if embedded, encoded as base64"
                },
                "description": {
                    "example": "Photograph of the Product",
                    "type": "string",
                    "description": "A narrative text describing the content of the attachment"
                },
                "mimeType": {
                    "type": "string",
                    "description": "Attachment mime type such as extension file for video, picture and document"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the attachment"
                },
                "url": {
                    "example": "http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f",
                    "format": "uri",
                    "type": "string",
                    "description": "Uniform Resource Locator, is a web page address (a subset of URI)"
                },
                "size": {
                    "$ref": "#/definitions/Quantity",
                    "description": "The size of the attachment."
                },
                "validFor": {
                    "$ref": "#/definitions/TimePeriod",
                    "description": "The period of time for which the attachment is valid"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "format": "uri",
                    "type": "string",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                },
                "@referredType": {
                    "type": "string",
                    "description": "The actual type of the target instance when needed for disambiguation."
                }
            }
        },
        "AttachmentRefOrValue_Create": {
            "type": "object",
            "description": "An attachment by value or by reference. An attachment complements the description of an element, for example through a document, a video, a picture.",
            "properties": {
                "id": {
                    "example": "4aafacbd-11ff-4dc8-b445-305f2215715f",
                    "type": "string",
                    "description": "Unique identifier for this particular attachment"
                },
                "href": {
                    "example": "http://host/Attachment/4aafacbd-11ff-4dc8-b445-305f2215715f",
                    "format": "uri",
                    "type": "string",
                    "description": "URI for this Attachment"
                },
                "attachmentType": {
                    "example": "video",
                    "type": "string",
                    "description": "Attachment type such as video, picture"
                },
                "content": {
                    "format": "base64",
                    "type": "string",
                    "description": "The actual contents of the attachment object, if embedded, encoded as base64"
                },
                "description": {
                    "example": "Photograph of the Product",
                    "type": "string",
                    "description": "A narrative text describing the content of the attachment"
                },
                "mimeType": {
                    "type": "string",
                    "description": "Attachment mime type such as extension file for video, picture and document"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the attachment"
                },
                "url": {
                    "example": "http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f",
                    "format": "uri",
                    "type": "string",
                    "description": "Uniform Resource Locator, is a web page address (a subset of URI)"
                },
                "size": {
                    "$ref": "#/definitions/Quantity",
                    "description": "The size of the attachment."
                },
                "validFor": {
                    "$ref": "#/definitions/TimePeriod",
                    "description": "The period of time for which the attachment is valid"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "format": "uri",
                    "type": "string",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                },
                "@referredType": {
                    "type": "string",
                    "description": "The actual type of the target instance when needed for disambiguation."
                }
            }
        },
        "AuditableResource": {
            "type": "object",
            "description": "AuditableResource",
            "properties": {
                "creationDate": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "creation date with timezone (ISO-8601)"
                },
                "modificationDate": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "modification date with timezone (ISO-8601)"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class entity name"
                }
            }
        },
        "Card": {
            "type": "object",
            "description": "Card\nSkipped properties: category,endOperatingDate,administrativeState,operationalState,resourceStatus,usageState,note,place,resourceRelationship,resourceCharacteristic,attachment,resourceSpecification,startOperatingDate,resourceVersion,activationFeature,manufactureDate,powerState,versionNumber,value,resourceState",
            "required": [
                "href",
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Identifier of an instance of the resource. Required to be unique within the resource type.  Used in URIs as the identifier for specific instances of a type."
                },
                "href": {
                    "format": "uri",
                    "type": "string",
                    "description": "The URI for the object itself."
                },
                "creationDate": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "creation date with timezone (ISO-8601)"
                },
                "description": {
                    "type": "string",
                    "description": "free-text description of the resource"
                },
                "descriptionUrl": {
                    "example": "https://edmpc3.one-erp.telekom.de/sap(bD1kZSZjPTAzMA==)/bc/bsp/sapzmnetkat/material.htm?matnr=40247069",
                    "maxLength": 250,
                    "minLength": 0,
                    "type": "string",
                    "description": "url for further description"
                },
                "emsNbiName": {
                    "example": "MA5600T",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "name in EMS"
                },
                "equipmentNumber": {
                    "example": "212880011",
                    "maxLength": 18,
                    "minLength": 0,
                    "type": "string",
                    "description": "equipment number of SRL system like PSL"
                },
                "firmwareVersion": {
                    "example": "507(2019-03-08)",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "current firmware version"
                },
                "lastDiscovery": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "Time of last discovery with timezone (ISO-8601)"
                },
                "manufacturer": {
                    "example": "HUAWEI",
                    "maxLength": 30,
                    "minLength": 0,
                    "type": "string",
                    "description": "manufacturer"
                },
                "materialNumber": {
                    "example": "40247069",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "material number"
                },
                "modificationDate": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "modification date with timezone (ISO-8601)"
                },
                "name": {
                    "type": "string",
                    "description": "A string used to give a name to the resource"
                },
                "resourceId": {
                    "example": "9b37bc3e-9887-4eae-b485-2e3bccf5567a",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "resource ID, an UUID"
                },
                "serialNumber": {
                    "example": "H802GP3021580031",
                    "pattern": "^[A-Z0-9]{12,16}$",
                    "maxLength": 16,
                    "minLength": 12,
                    "type": "string",
                    "description": "serial number"
                },
                "shortName": {
                    "example": "MABC VB",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "short name"
                },
                "slotName": {
                    "example": "1",
                    "maxLength": 50,
                    "minLength": 1,
                    "type": "string",
                    "description": "name of slot or slot number"
                },
                "cardType": {
                    "example": "GPON",
                    "$ref": "#/definitions/CardType",
                    "description": "card type"
                },
                "containsPortsRefOrValue": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PortRefOrValue"
                    },
                    "description": "list of ports"
                },
                "parentDeviceEquipmentRef": {
                    "$ref": "#/definitions/EquipmentRef",
                    "description": "device where the card is plugged in"
                },
                "relatedParty": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RelatedParty"
                    }
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class entity name"
                }
            }
        },
        "Card_Create": {
            "type": "object",
            "description": "Card\nSkipped properties: category,endOperatingDate,administrativeState,operationalState,resourceStatus,usageState,note,place,resourceRelationship,resourceCharacteristic,attachment,resourceSpecification,startOperatingDate,resourceVersion,activationFeature,manufactureDate,powerState,versionNumber,value,resourceState,id,href",
            "required": [
                "cardType"
            ],
            "properties": {
                "creationDate": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "creation date with timezone (ISO-8601)"
                },
                "description": {
                    "type": "string",
                    "description": "free-text description of the resource"
                },
                "descriptionUrl": {
                    "example": "https://edmpc3.one-erp.telekom.de/sap(bD1kZSZjPTAzMA==)/bc/bsp/sapzmnetkat/material.htm?matnr=40247069",
                    "maxLength": 250,
                    "minLength": 0,
                    "type": "string",
                    "description": "url for further description"
                },
                "emsNbiName": {
                    "example": "MA5600T",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "name in EMS"
                },
                "equipmentNumber": {
                    "example": "212880011",
                    "maxLength": 18,
                    "minLength": 0,
                    "type": "string",
                    "description": "equipment number of SRL system like PSL"
                },
                "firmwareVersion": {
                    "example": "507(2019-03-08)",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "current firmware version"
                },
                "lastDiscovery": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "Time of last discovery with timezone (ISO-8601)"
                },
                "manufacturer": {
                    "example": "HUAWEI",
                    "maxLength": 30,
                    "minLength": 0,
                    "type": "string",
                    "description": "manufacturer"
                },
                "materialNumber": {
                    "example": "40247069",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "material number"
                },
                "modificationDate": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "modification date with timezone (ISO-8601)"
                },
                "name": {
                    "type": "string",
                    "description": "A string used to give a name to the resource"
                },
                "resourceId": {
                    "example": "9b37bc3e-9887-4eae-b485-2e3bccf5567a",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "resource ID, an UUID"
                },
                "serialNumber": {
                    "example": "H802GP3021580031",
                    "pattern": "^[A-Z0-9]{12,16}$",
                    "maxLength": 16,
                    "minLength": 12,
                    "type": "string",
                    "description": "serial number"
                },
                "shortName": {
                    "example": "MABC VB",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "short name"
                },
                "slotName": {
                    "example": "1",
                    "maxLength": 50,
                    "minLength": 1,
                    "type": "string",
                    "description": "name of slot or slot number"
                },
                "cardType": {
                    "example": "GPON",
                    "$ref": "#/definitions/CardType",
                    "description": "card type"
                },
                "containsPortsRefOrValue": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PortRefOrValue_Create"
                    },
                    "description": "list of ports"
                },
                "parentDeviceEquipmentRef": {
                    "$ref": "#/definitions/EquipmentRef",
                    "description": "device where the card is plugged in"
                },
                "relatedParty": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RelatedParty"
                    }
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class entity name"
                }
            }
        },
        "Card_Update": {
            "type": "object",
            "description": "Card\nSkipped properties: category,endOperatingDate,administrativeState,operationalState,resourceStatus,usageState,note,place,resourceRelationship,resourceCharacteristic,attachment,resourceSpecification,startOperatingDate,resourceVersion,activationFeature,manufactureDate,powerState,versionNumber,value,resourceState,id,href",
            "properties": {
                "creationDate": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "creation date with timezone (ISO-8601)"
                },
                "description": {
                    "type": "string",
                    "description": "free-text description of the resource"
                },
                "descriptionUrl": {
                    "example": "https://edmpc3.one-erp.telekom.de/sap(bD1kZSZjPTAzMA==)/bc/bsp/sapzmnetkat/material.htm?matnr=40247069",
                    "maxLength": 250,
                    "minLength": 0,
                    "type": "string",
                    "description": "url for further description"
                },
                "emsNbiName": {
                    "example": "MA5600T",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "name in EMS"
                },
                "equipmentNumber": {
                    "example": "212880011",
                    "maxLength": 18,
                    "minLength": 0,
                    "type": "string",
                    "description": "equipment number of SRL system like PSL"
                },
                "firmwareVersion": {
                    "example": "507(2019-03-08)",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "current firmware version"
                },
                "lastDiscovery": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "Time of last discovery with timezone (ISO-8601)"
                },
                "manufacturer": {
                    "example": "HUAWEI",
                    "maxLength": 30,
                    "minLength": 0,
                    "type": "string",
                    "description": "manufacturer"
                },
                "materialNumber": {
                    "example": "40247069",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "material number"
                },
                "modificationDate": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "modification date with timezone (ISO-8601)"
                },
                "name": {
                    "type": "string",
                    "description": "A string used to give a name to the resource"
                },
                "resourceId": {
                    "example": "9b37bc3e-9887-4eae-b485-2e3bccf5567a",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "resource ID, an UUID"
                },
                "serialNumber": {
                    "example": "H802GP3021580031",
                    "pattern": "^[A-Z0-9]{12,16}$",
                    "maxLength": 16,
                    "minLength": 12,
                    "type": "string",
                    "description": "serial number"
                },
                "shortName": {
                    "example": "MABC VB",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "short name"
                },
                "slotName": {
                    "example": "1",
                    "maxLength": 50,
                    "minLength": 1,
                    "type": "string",
                    "description": "name of slot or slot number"
                },
                "cardType": {
                    "example": "GPON",
                    "$ref": "#/definitions/CardType",
                    "description": "card type"
                },
                "containsPortsRefOrValue": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PortRefOrValue"
                    },
                    "description": "list of ports"
                },
                "parentDeviceEquipmentRef": {
                    "$ref": "#/definitions/EquipmentRef",
                    "description": "device where the card is plugged in"
                },
                "relatedParty": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RelatedParty"
                    }
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class entity name"
                }
            }
        },
        "CardRefOrValue": {
            "type": "object",
            "description": "reference or value of card\nSkipped properties: activationFeature,attachment,note,place,resourceSpecification,value,startOperatingDate,endOperatingDate,administrativeState,resourceStatus,usageState,resourceVersion,operationalState,category,resourceCharacteristic,resourceRelationship,powerState,manufactureDate,versionNumber,resourceState",
            "required": [
                "href",
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Identifier of an instance of the resource. Required to be unique within the resource type.  Used in URIs as the identifier for specific instances of a type."
                },
                "href": {
                    "format": "uri",
                    "type": "string",
                    "description": "The URI for the object itself."
                },
                "creationDate": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "creation date with timezone (ISO-8601)"
                },
                "description": {
                    "type": "string",
                    "description": "free-text description of the resource"
                },
                "descriptionUrl": {
                    "example": "https://edmpc3.one-erp.telekom.de/sap(bD1kZSZjPTAzMA==)/bc/bsp/sapzmnetkat/material.htm?matnr=40247069",
                    "maxLength": 250,
                    "minLength": 0,
                    "type": "string",
                    "description": "url for further description"
                },
                "emsNbiName": {
                    "example": "MA5600T",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "name in EMS"
                },
                "equipmentNumber": {
                    "example": "212880011",
                    "maxLength": 18,
                    "minLength": 0,
                    "type": "string",
                    "description": "equipment number of SRL system like PSL"
                },
                "firmwareVersion": {
                    "example": "507(2019-03-08)",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "current firmware version"
                },
                "lastDiscovery": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "Time of last discovery with timezone (ISO-8601)"
                },
                "manufacturer": {
                    "example": "HUAWEI",
                    "maxLength": 30,
                    "minLength": 0,
                    "type": "string",
                    "description": "manufacturer"
                },
                "materialNumber": {
                    "example": "40247069",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "material number"
                },
                "modificationDate": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "modification date with timezone (ISO-8601)"
                },
                "name": {
                    "type": "string",
                    "description": "A string used to give a name to the resource"
                },
                "resourceId": {
                    "example": "9b37bc3e-9887-4eae-b485-2e3bccf5567a",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "resource ID, an UUID"
                },
                "serialNumber": {
                    "type": "string",
                    "description": "This is a string that represents a manufacturer-allocated number used to identify different instances of the same hardware item. The ModelNumber and PartNumber attributes are used to identify different types of hardware items. This is a REQUIRED attribute."
                },
                "shortName": {
                    "example": "MABC VB",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "short name"
                },
                "slotName": {
                    "example": "1",
                    "maxLength": 50,
                    "minLength": 1,
                    "type": "string",
                    "description": "name of slot or slot number"
                },
                "cardType": {
                    "example": "GPON",
                    "$ref": "#/definitions/CardType",
                    "description": "card type"
                },
                "containsPortsRefOrValue": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PortRefOrValue"
                    },
                    "description": "list of ports"
                },
                "parentDeviceEquipmentRef": {
                    "$ref": "#/definitions/EquipmentRef",
                    "description": "device where the card is plugged in"
                },
                "relatedParty": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RelatedParty"
                    }
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "format": "uri",
                    "type": "string",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                },
                "@referredType": {
                    "type": "string",
                    "description": "The actual type of the target instance when needed for disambiguation."
                }
            }
        },
        "CardRefOrValue_Create": {
            "type": "object",
            "description": "reference or value of card\nSkipped properties: activationFeature,attachment,note,place,resourceSpecification,value,startOperatingDate,endOperatingDate,administrativeState,resourceStatus,usageState,resourceVersion,operationalState,category,resourceCharacteristic,resourceRelationship,powerState,manufactureDate,versionNumber,resourceState",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Identifier of an instance of the resource. Required to be unique within the resource type.  Used in URIs as the identifier for specific instances of a type."
                },
                "href": {
                    "format": "uri",
                    "type": "string",
                    "description": "The URI for the object itself."
                },
                "creationDate": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "creation date with timezone (ISO-8601)"
                },
                "description": {
                    "type": "string",
                    "description": "free-text description of the resource"
                },
                "descriptionUrl": {
                    "example": "https://edmpc3.one-erp.telekom.de/sap(bD1kZSZjPTAzMA==)/bc/bsp/sapzmnetkat/material.htm?matnr=40247069",
                    "maxLength": 250,
                    "minLength": 0,
                    "type": "string",
                    "description": "url for further description"
                },
                "emsNbiName": {
                    "example": "MA5600T",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "name in EMS"
                },
                "equipmentNumber": {
                    "example": "212880011",
                    "maxLength": 18,
                    "minLength": 0,
                    "type": "string",
                    "description": "equipment number of SRL system like PSL"
                },
                "firmwareVersion": {
                    "example": "507(2019-03-08)",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "current firmware version"
                },
                "lastDiscovery": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "Time of last discovery with timezone (ISO-8601)"
                },
                "manufacturer": {
                    "example": "HUAWEI",
                    "maxLength": 30,
                    "minLength": 0,
                    "type": "string",
                    "description": "manufacturer"
                },
                "materialNumber": {
                    "example": "40247069",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "material number"
                },
                "modificationDate": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "modification date with timezone (ISO-8601)"
                },
                "name": {
                    "type": "string",
                    "description": "A string used to give a name to the resource"
                },
                "resourceId": {
                    "example": "9b37bc3e-9887-4eae-b485-2e3bccf5567a",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "resource ID, an UUID"
                },
                "serialNumber": {
                    "type": "string",
                    "description": "This is a string that represents a manufacturer-allocated number used to identify different instances of the same hardware item. The ModelNumber and PartNumber attributes are used to identify different types of hardware items. This is a REQUIRED attribute."
                },
                "shortName": {
                    "example": "MABC VB",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "short name"
                },
                "slotName": {
                    "example": "1",
                    "maxLength": 50,
                    "minLength": 1,
                    "type": "string",
                    "description": "name of slot or slot number"
                },
                "cardType": {
                    "example": "GPON",
                    "$ref": "#/definitions/CardType",
                    "description": "card type"
                },
                "containsPortsRefOrValue": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PortRefOrValue_Create"
                    },
                    "description": "list of ports"
                },
                "parentDeviceEquipmentRef": {
                    "$ref": "#/definitions/EquipmentRef",
                    "description": "device where the card is plugged in"
                },
                "relatedParty": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RelatedParty"
                    }
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "format": "uri",
                    "type": "string",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                },
                "@referredType": {
                    "type": "string",
                    "description": "The actual type of the target instance when needed for disambiguation."
                }
            }
        },
        "CardType": {
            "type": "string",
            "description": "type enumeration of card",
            "enum": [
                "GPON",
                "UPLINK_CARD",
                "MANAGEMENT_CARD",
                "SUPPORT_MODULE",
                "PROCESSING_BOARD"
            ]
        },
        "Characteristic": {
            "type": "object",
            "description": "Describes a given characteristic of an object or entity through a name/value pair.",
            "required": [
                "name",
                "value"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Unique identifier of the characteristic"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the characteristic"
                },
                "valueType": {
                    "type": "string",
                    "description": "Data type of the value of the characteristic"
                },
                "characteristicRelationship": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CharacteristicRelationship"
                    }
                },
                "value": {
                    "$ref": "#/definitions/Any",
                    "description": "The value of the characteristic"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "format": "uri",
                    "type": "string",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                }
            }
        },
        "CharacteristicRelationship": {
            "type": "object",
            "description": "Another Characteristic that is related to the current Characteristic;",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Unique identifier of the characteristic"
                },
                "relationshipType": {
                    "type": "string",
                    "description": "The type of relationship"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class entity name"
                }
            }
        },
        "ComponentParameter": {
            "type": "object",
            "description": "ComponentParameter",
            "properties": {
                "creationDate": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "creation date with timezone (ISO-8601)"
                },
                "description": {
                    "example": "",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "description"
                },
                "descriptionUrl": {
                    "example": "https://edmpc3.one-erp.telekom.de/sap(bD1kZSZjPTAzMA==)/bc/bsp/sapzmnetkat/material.htm?matnr=40247069",
                    "maxLength": 250,
                    "minLength": 0,
                    "type": "string",
                    "description": "url for further description"
                },
                "emsNbiName": {
                    "example": "MA5600T",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "name in EMS"
                },
                "equipmentNumber": {
                    "example": "212880011",
                    "maxLength": 18,
                    "minLength": 0,
                    "type": "string",
                    "description": "equipment number of SRL system like PSL"
                },
                "lastDiscovery": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "Time of last discovery with timezone (ISO-8601)"
                },
                "manufacturer": {
                    "example": "HUAWEI",
                    "maxLength": 30,
                    "minLength": 0,
                    "type": "string",
                    "description": "manufacturer"
                },
                "materialNumber": {
                    "example": "40247069",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "material number"
                },
                "modificationDate": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "modification date with timezone (ISO-8601)"
                },
                "resourceId": {
                    "example": "9b37bc3e-9887-4eae-b485-2e3bccf5567a",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "resource ID, an UUID"
                },
                "shortName": {
                    "example": "MABC VB",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "short name"
                },
                "relatedParty": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RelatedParty"
                    },
                    "description": "list of parent organizations"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class entity name"
                }
            }
        },
        "ConstraintRef": {
            "type": "object",
            "description": "Constraint reference. The Constraint resource represents a policy/rule applied to an entity or entity spec.",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "reference id to the target constraint"
                },
                "href": {
                    "format": "uri",
                    "type": "string",
                    "description": "Hyperlink reference to the target constraint"
                },
                "name": {
                    "type": "string",
                    "description": "Name given to the constraint"
                },
                "version": {
                    "type": "string",
                    "description": "constraint version"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class entity name"
                },
                "@referredType": {
                    "type": "string",
                    "description": "The (class) type of the referred constraint"
                }
            },
            "required": [
                "id"
            ]
        },
        "Device": {
            "type": "object",
            "description": "Device\nSkipped properties: category,endOperatingDate,administrativeState,operationalState,resourceStatus,usageState,note,place,resourceRelationship,resourceCharacteristic,attachment,resourceSpecification,resourceVersion,activationFeature,manufactureDate,powerState,versionNumber,value",
            "required": [
                "href",
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Identifier of an instance of the resource. Required to be unique within the resource type.  Used in URIs as the identifier for specific instances of a type."
                },
                "href": {
                    "format": "uri",
                    "type": "string",
                    "description": "The URI for the object itself."
                },
                "accessTransmissionMedium": {
                    "example": "TWISTED_PAIR",
                    "maxLength": 30,
                    "minLength": 0,
                    "type": "string",
                    "description": "AccessTransmissionMedium. Allowed values: TWISTED_PAIR, COAX, FIBER"
                },
                "asb": {
                    "example": "125",
                    "type": "integer",
                    "description": "Anschlussbereich"
                },
                "creationDate": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "creation date with timezone (ISO-8601)"
                },
                "description": {
                    "type": "string",
                    "description": "free-text description of the resource"
                },
                "descriptionUrl": {
                    "example": "https://edmpc3.one-erp.telekom.de/sap(bD1kZSZjPTAzMA==)/bc/bsp/sapzmnetkat/material.htm?matnr=40247069",
                    "maxLength": 250,
                    "minLength": 0,
                    "type": "string",
                    "description": "url for further description"
                },
                "emsNbiName": {
                    "example": "MA5600T",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "name in EMS"
                },
                "endSz": {
                    "example": "49/8571/0/76H1",
                    "pattern": "[0-9]{1,6}/[0-9]{1,6}/[0-9]{1,6}/[a-zA-Z0-9]{2,4}",
                    "maxLength": 25,
                    "minLength": 8,
                    "type": "string",
                    "description": "Endstellenschl\u00fcsselzahl"
                },
                "equipmentNumber": {
                    "example": "212880011",
                    "maxLength": 18,
                    "minLength": 0,
                    "type": "string",
                    "description": "equipment number of SRL system like PSL"
                },
                "fiberOnLocationId": {
                    "example": "71520003000065",
                    "pattern": "^\\d{0,19}$",
                    "maxLength": 19,
                    "minLength": 0,
                    "type": "string",
                    "description": "fiber on location id (folid, unique id), resource which represents the building or rather building-section (distribution-point) where the DPU is"
                },
                "firmwareVersion": {
                    "example": "MA5600V800R016C00",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "firmware version"
                },
                "fsz": {
                    "example": "76H1",
                    "maxLength": 4,
                    "minLength": 4,
                    "type": "string",
                    "description": "Fachstellenschl\u00fcsselzahl or FachSz"
                },
                "importDate": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "import date with timezone (ISO-8601)"
                },
                "ipAddress": {
                    "example": "10.182.112.196",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "IPv4 address"
                },
                "klsId": {
                    "example": "17056514",
                    "pattern": "[0-9]{1,12}",
                    "maxLength": 12,
                    "minLength": 1,
                    "type": "string",
                    "description": "KLS ID"
                },
                "lastDiscovery": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "Time of last discovery with timezone (ISO-8601)"
                },
                "manufacturer": {
                    "example": "HUAWEI",
                    "maxLength": 30,
                    "minLength": 0,
                    "type": "string",
                    "description": "manufacturer"
                },
                "materialNumber": {
                    "example": "40247069",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "material number"
                },
                "migrationState": {
                    "example": "FTTX1.7_MIGRATION_COMPLETED",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "MigrationStatus. Allowed values: FTTX1.7_MIGRATION_STARTED, FTTX1.7_MIGRATION_COMPLETED, TOPAS_MIGRATION_STARTED, TOPAS_MIGRATION_COMPLETED"
                },
                "modificationDate": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "modification date with timezone (ISO-8601)"
                },
                "name": {
                    "type": "string",
                    "description": "A string used to give a name to the resource"
                },
                "resourceId": {
                    "example": "9b37bc3e-9887-4eae-b485-2e3bccf5567a",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "resource ID, an UUID"
                },
                "serialNumber": {
                    "example": "ADTN1234ABCD",
                    "pattern": "^[A-Z0-9]{12,16}$",
                    "maxLength": 16,
                    "minLength": 12,
                    "type": "string",
                    "description": "serial number"
                },
                "shortName": {
                    "example": "MABC VB",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "short name"
                },
                "startOperatingDate": {
                    "format": "date-time",
                    "type": "string",
                    "description": "A date time( DateTime). The date from which the resource is operating"
                },
                "technicalLocation": {
                    "example": "000031-000000-001-004-002-021",
                    "maxLength": 30,
                    "minLength": 0,
                    "type": "string",
                    "description": "technical location"
                },
                "vpsz": {
                    "pattern": "^[0-9]{1,6}/[0-9]{1,6}/[0-9]{1,6}[/a-zA-Z0-9]{0,4}",
                    "maxLength": 25,
                    "minLength": 6,
                    "type": "string",
                    "description": "VPSZ"
                },
                "containsCardsRefOrValue": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CardRefOrValue"
                    },
                    "description": "list of cards"
                },
                "containsPortsRefOrValue": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PortRefOrValue"
                    },
                    "description": "list of ports"
                },
                "deviceType": {
                    "example": "OLT",
                    "$ref": "#/definitions/DeviceType",
                    "description": "device type"
                },
                "lifeCycleState": {
                    "example": "INSTALLING",
                    "$ref": "#/definitions/LifeCycleState",
                    "description": "lifecycle state"
                },
                "relatedParty": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RelatedParty"
                    }
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class entity name"
                }
            }
        },
        "Device_Create": {
            "type": "object",
            "description": "Device\nSkipped properties: category,endOperatingDate,administrativeState,operationalState,resourceStatus,usageState,note,place,resourceRelationship,resourceCharacteristic,attachment,resourceSpecification,resourceVersion,activationFeature,manufactureDate,powerState,versionNumber,value,id,href",
            "required": [
                "endSz",
                "deviceType",
                "lifeCycleState"
            ],
            "properties": {
                "accessTransmissionMedium": {
                    "example": "TWISTED_PAIR",
                    "maxLength": 30,
                    "minLength": 0,
                    "type": "string",
                    "description": "AccessTransmissionMedium. Allowed values: TWISTED_PAIR, COAX, FIBER"
                },
                "asb": {
                    "example": "125",
                    "type": "integer",
                    "description": "Anschlussbereich"
                },
                "creationDate": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "creation date with timezone (ISO-8601)"
                },
                "description": {
                    "type": "string",
                    "description": "free-text description of the resource"
                },
                "descriptionUrl": {
                    "example": "https://edmpc3.one-erp.telekom.de/sap(bD1kZSZjPTAzMA==)/bc/bsp/sapzmnetkat/material.htm?matnr=40247069",
                    "maxLength": 250,
                    "minLength": 0,
                    "type": "string",
                    "description": "url for further description"
                },
                "emsNbiName": {
                    "example": "MA5600T",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "name in EMS"
                },
                "endSz": {
                    "example": "49/8571/0/76H1",
                    "pattern": "[0-9]{1,6}/[0-9]{1,6}/[0-9]{1,6}/[a-zA-Z0-9]{2,4}",
                    "maxLength": 25,
                    "minLength": 8,
                    "type": "string",
                    "description": "Endstellenschl\u00fcsselzahl"
                },
                "equipmentNumber": {
                    "example": "212880011",
                    "maxLength": 18,
                    "minLength": 0,
                    "type": "string",
                    "description": "equipment number of SRL system like PSL"
                },
                "fiberOnLocationId": {
                    "example": "71520003000065",
                    "pattern": "^\\d{0,19}$",
                    "maxLength": 19,
                    "minLength": 0,
                    "type": "string",
                    "description": "fiber on location id (folid, unique id), resource which represents the building or rather building-section (distribution-point) where the DPU is"
                },
                "firmwareVersion": {
                    "example": "MA5600V800R016C00",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "firmware version"
                },
                "fsz": {
                    "example": "76H1",
                    "maxLength": 4,
                    "minLength": 4,
                    "type": "string",
                    "description": "Fachstellenschl\u00fcsselzahl or FachSz"
                },
                "importDate": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "import date with timezone (ISO-8601)"
                },
                "ipAddress": {
                    "example": "10.182.112.196",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "IPv4 address"
                },
                "klsId": {
                    "example": "17056514",
                    "pattern": "[0-9]{1,12}",
                    "maxLength": 12,
                    "minLength": 1,
                    "type": "string",
                    "description": "KLS ID"
                },
                "lastDiscovery": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "Time of last discovery with timezone (ISO-8601)"
                },
                "manufacturer": {
                    "example": "HUAWEI",
                    "maxLength": 30,
                    "minLength": 0,
                    "type": "string",
                    "description": "manufacturer"
                },
                "materialNumber": {
                    "example": "40247069",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "material number"
                },
                "migrationState": {
                    "example": "FTTX1.7_MIGRATION_COMPLETED",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "MigrationStatus. Allowed values: FTTX1.7_MIGRATION_STARTED, FTTX1.7_MIGRATION_COMPLETED, TOPAS_MIGRATION_STARTED, TOPAS_MIGRATION_COMPLETED"
                },
                "modificationDate": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "modification date with timezone (ISO-8601)"
                },
                "name": {
                    "type": "string",
                    "description": "A string used to give a name to the resource"
                },
                "resourceId": {
                    "example": "9b37bc3e-9887-4eae-b485-2e3bccf5567a",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "resource ID, an UUID"
                },
                "serialNumber": {
                    "example": "ADTN1234ABCD",
                    "pattern": "^[A-Z0-9]{12,16}$",
                    "maxLength": 16,
                    "minLength": 12,
                    "type": "string",
                    "description": "serial number"
                },
                "shortName": {
                    "example": "MABC VB",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "short name"
                },
                "startOperatingDate": {
                    "format": "date-time",
                    "type": "string",
                    "description": "A date time( DateTime). The date from which the resource is operating"
                },
                "technicalLocation": {
                    "example": "000031-000000-001-004-002-021",
                    "maxLength": 30,
                    "minLength": 0,
                    "type": "string",
                    "description": "technical location"
                },
                "vpsz": {
                    "pattern": "^[0-9]{1,6}/[0-9]{1,6}/[0-9]{1,6}[/a-zA-Z0-9]{0,4}",
                    "maxLength": 25,
                    "minLength": 6,
                    "type": "string",
                    "description": "VPSZ"
                },
                "containsCardsRefOrValue": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CardRefOrValue_Create"
                    },
                    "description": "list of cards"
                },
                "containsPortsRefOrValue": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PortRefOrValue_Create"
                    },
                    "description": "list of ports"
                },
                "deviceType": {
                    "example": "OLT",
                    "$ref": "#/definitions/DeviceType",
                    "description": "device type"
                },
                "lifeCycleState": {
                    "example": "INSTALLING",
                    "$ref": "#/definitions/LifeCycleState",
                    "description": "lifecycle state"
                },
                "relatedParty": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RelatedParty"
                    }
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class entity name"
                }
            }
        },
        "Device_Update": {
            "type": "object",
            "description": "Device\nSkipped properties: category,endOperatingDate,administrativeState,operationalState,resourceStatus,usageState,note,place,resourceRelationship,resourceCharacteristic,attachment,resourceSpecification,resourceVersion,activationFeature,manufactureDate,powerState,versionNumber,value,id,href",
            "properties": {
                "accessTransmissionMedium": {
                    "example": "TWISTED_PAIR",
                    "maxLength": 30,
                    "minLength": 0,
                    "type": "string",
                    "description": "AccessTransmissionMedium. Allowed values: TWISTED_PAIR, COAX, FIBER"
                },
                "asb": {
                    "example": "125",
                    "type": "integer",
                    "description": "Anschlussbereich"
                },
                "creationDate": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "creation date with timezone (ISO-8601)"
                },
                "description": {
                    "type": "string",
                    "description": "free-text description of the resource"
                },
                "descriptionUrl": {
                    "example": "https://edmpc3.one-erp.telekom.de/sap(bD1kZSZjPTAzMA==)/bc/bsp/sapzmnetkat/material.htm?matnr=40247069",
                    "maxLength": 250,
                    "minLength": 0,
                    "type": "string",
                    "description": "url for further description"
                },
                "emsNbiName": {
                    "example": "MA5600T",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "name in EMS"
                },
                "endSz": {
                    "example": "49/8571/0/76H1",
                    "pattern": "[0-9]{1,6}/[0-9]{1,6}/[0-9]{1,6}/[a-zA-Z0-9]{2,4}",
                    "maxLength": 25,
                    "minLength": 8,
                    "type": "string",
                    "description": "Endstellenschl\u00fcsselzahl"
                },
                "equipmentNumber": {
                    "example": "212880011",
                    "maxLength": 18,
                    "minLength": 0,
                    "type": "string",
                    "description": "equipment number of SRL system like PSL"
                },
                "fiberOnLocationId": {
                    "example": "71520003000065",
                    "pattern": "^\\d{0,19}$",
                    "maxLength": 19,
                    "minLength": 0,
                    "type": "string",
                    "description": "fiber on location id (folid, unique id), resource which represents the building or rather building-section (distribution-point) where the DPU is"
                },
                "firmwareVersion": {
                    "example": "MA5600V800R016C00",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "firmware version"
                },
                "fsz": {
                    "example": "76H1",
                    "maxLength": 4,
                    "minLength": 4,
                    "type": "string",
                    "description": "Fachstellenschl\u00fcsselzahl or FachSz"
                },
                "importDate": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "import date with timezone (ISO-8601)"
                },
                "ipAddress": {
                    "example": "10.182.112.196",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "IPv4 address"
                },
                "klsId": {
                    "example": "17056514",
                    "pattern": "[0-9]{1,12}",
                    "maxLength": 12,
                    "minLength": 1,
                    "type": "string",
                    "description": "KLS ID"
                },
                "lastDiscovery": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "Time of last discovery with timezone (ISO-8601)"
                },
                "manufacturer": {
                    "example": "HUAWEI",
                    "maxLength": 30,
                    "minLength": 0,
                    "type": "string",
                    "description": "manufacturer"
                },
                "materialNumber": {
                    "example": "40247069",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "material number"
                },
                "migrationState": {
                    "example": "FTTX1.7_MIGRATION_COMPLETED",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "MigrationStatus. Allowed values: FTTX1.7_MIGRATION_STARTED, FTTX1.7_MIGRATION_COMPLETED, TOPAS_MIGRATION_STARTED, TOPAS_MIGRATION_COMPLETED"
                },
                "modificationDate": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "modification date with timezone (ISO-8601)"
                },
                "name": {
                    "type": "string",
                    "description": "A string used to give a name to the resource"
                },
                "resourceId": {
                    "example": "9b37bc3e-9887-4eae-b485-2e3bccf5567a",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "resource ID, an UUID"
                },
                "serialNumber": {
                    "example": "ADTN1234ABCD",
                    "pattern": "^[A-Z0-9]{12,16}$",
                    "maxLength": 16,
                    "minLength": 12,
                    "type": "string",
                    "description": "serial number"
                },
                "shortName": {
                    "example": "MABC VB",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "short name"
                },
                "startOperatingDate": {
                    "format": "date-time",
                    "type": "string",
                    "description": "A date time( DateTime). The date from which the resource is operating"
                },
                "technicalLocation": {
                    "example": "000031-000000-001-004-002-021",
                    "maxLength": 30,
                    "minLength": 0,
                    "type": "string",
                    "description": "technical location"
                },
                "vpsz": {
                    "pattern": "^[0-9]{1,6}/[0-9]{1,6}/[0-9]{1,6}[/a-zA-Z0-9]{0,4}",
                    "maxLength": 25,
                    "minLength": 6,
                    "type": "string",
                    "description": "VPSZ"
                },
                "containsCardsRefOrValue": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CardRefOrValue"
                    },
                    "description": "list of cards"
                },
                "containsPortsRefOrValue": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PortRefOrValue"
                    },
                    "description": "list of ports"
                },
                "deviceType": {
                    "example": "OLT",
                    "$ref": "#/definitions/DeviceType",
                    "description": "device type"
                },
                "lifeCycleState": {
                    "example": "INSTALLING",
                    "$ref": "#/definitions/LifeCycleState",
                    "description": "lifecycle state"
                },
                "relatedParty": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RelatedParty"
                    }
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class entity name"
                }
            }
        },
        "DeviceRefOrValue": {
            "type": "object",
            "description": "reference or value of device\nSkipped properties: activationFeature,attachment,note,place,resourceSpecification,value,startOperatingDate,endOperatingDate,administrativeState,resourceStatus,usageState,resourceVersion,operationalState,category,resourceCharacteristic,resourceRelationship,powerState,manufactureDate,versionNumber",
            "required": [
                "href",
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Identifier of an instance of the resource. Required to be unique within the resource type.  Used in URIs as the identifier for specific instances of a type."
                },
                "href": {
                    "format": "uri",
                    "type": "string",
                    "description": "The URI for the object itself."
                },
                "accessTransmissionMedium": {
                    "example": "TWISTED_PAIR",
                    "maxLength": 30,
                    "minLength": 0,
                    "type": "string",
                    "description": "AccessTransmissionMedium. Allowed values: TWISTED_PAIR, COAX, FIBER"
                },
                "asb": {
                    "example": "125",
                    "type": "integer",
                    "description": "Anschlussbereich"
                },
                "creationDate": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "creation date with timezone (ISO-8601)"
                },
                "description": {
                    "type": "string",
                    "description": "free-text description of the resource"
                },
                "descriptionUrl": {
                    "example": "https://edmpc3.one-erp.telekom.de/sap(bD1kZSZjPTAzMA==)/bc/bsp/sapzmnetkat/material.htm?matnr=40247069",
                    "maxLength": 250,
                    "minLength": 0,
                    "type": "string",
                    "description": "url for further description"
                },
                "emsNbiName": {
                    "example": "MA5600T",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "name in EMS"
                },
                "endSz": {
                    "example": "49/8571/0/76H1",
                    "pattern": "[0-9]{1,6}/[0-9]{1,6}/[0-9]{1,6}/[a-zA-Z0-9]{2,4}",
                    "maxLength": 25,
                    "minLength": 8,
                    "type": "string",
                    "description": "Endstellenschl\u00fcsselzahl"
                },
                "equipmentNumber": {
                    "example": "212880011",
                    "maxLength": 18,
                    "minLength": 0,
                    "type": "string",
                    "description": "equipment number of SRL system like PSL"
                },
                "fiberOnLocationId": {
                    "example": "71520003000065",
                    "pattern": "^\\d{0,19}$",
                    "maxLength": 19,
                    "minLength": 0,
                    "type": "string",
                    "description": "fiber on location id (folid, unique id), resource which represents the building or rather building-section (distribution-point) where the DPU is"
                },
                "firmwareVersion": {
                    "example": "MA5600V800R016C00",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "firmware version"
                },
                "fsz": {
                    "example": "76H1",
                    "maxLength": 4,
                    "minLength": 4,
                    "type": "string",
                    "description": "Fachstellenschl\u00fcsselzahl or FachSz"
                },
                "importDate": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "import date with timezone (ISO-8601)"
                },
                "ipAddress": {
                    "example": "10.182.112.196",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "IPv4 address"
                },
                "klsId": {
                    "example": "17056514",
                    "pattern": "[0-9]{1,12}",
                    "maxLength": 12,
                    "minLength": 1,
                    "type": "string",
                    "description": "KLS ID"
                },
                "lastDiscovery": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "Time of last discovery with timezone (ISO-8601)"
                },
                "manufacturer": {
                    "example": "HUAWEI",
                    "maxLength": 30,
                    "minLength": 0,
                    "type": "string",
                    "description": "manufacturer"
                },
                "materialNumber": {
                    "example": "40247069",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "material number"
                },
                "migrationState": {
                    "example": "FTTX1.7_MIGRATION_COMPLETED",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "MigrationStatus. Allowed values: FTTX1.7_MIGRATION_STARTED, FTTX1.7_MIGRATION_COMPLETED, TOPAS_MIGRATION_STARTED, TOPAS_MIGRATION_COMPLETED"
                },
                "modificationDate": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "modification date with timezone (ISO-8601)"
                },
                "name": {
                    "type": "string",
                    "description": "A string used to give a name to the resource"
                },
                "resourceId": {
                    "example": "9b37bc3e-9887-4eae-b485-2e3bccf5567a",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "resource ID, an UUID"
                },
                "serialNumber": {
                    "type": "string",
                    "description": "This is a string that represents a manufacturer-allocated number used to identify different instances of the same hardware item. The ModelNumber and PartNumber attributes are used to identify different types of hardware items. This is a REQUIRED attribute."
                },
                "shortName": {
                    "example": "MABC VB",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "short name"
                },
                "technicalLocation": {
                    "example": "000031-000000-001-004-002-021",
                    "maxLength": 30,
                    "minLength": 0,
                    "type": "string",
                    "description": "technical location"
                },
                "vpsz": {
                    "pattern": "^[0-9]{1,6}/[0-9]{1,6}/[0-9]{1,6}[/a-zA-Z0-9]{0,4}",
                    "maxLength": 25,
                    "minLength": 6,
                    "type": "string",
                    "description": "VPSZ"
                },
                "containsCardsRefOrValue": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CardRefOrValue"
                    },
                    "description": "list of cards"
                },
                "containsPortsRefOrValue": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PortRefOrValue"
                    },
                    "description": "list of ports"
                },
                "deviceType": {
                    "example": "OLT",
                    "$ref": "#/definitions/DeviceType",
                    "description": "device type"
                },
                "lifeCycleState": {
                    "example": "INSTALLING",
                    "$ref": "#/definitions/LifeCycleState",
                    "description": "lifecycle state"
                },
                "relatedParty": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RelatedParty"
                    }
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "format": "uri",
                    "type": "string",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                },
                "@referredType": {
                    "type": "string",
                    "description": "The actual type of the target instance when needed for disambiguation."
                }
            }
        },
        "DeviceRefOrValue_Create": {
            "type": "object",
            "description": "reference or value of device\nSkipped properties: activationFeature,attachment,note,place,resourceSpecification,value,startOperatingDate,endOperatingDate,administrativeState,resourceStatus,usageState,resourceVersion,operationalState,category,resourceCharacteristic,resourceRelationship,powerState,manufactureDate,versionNumber",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Identifier of an instance of the resource. Required to be unique within the resource type.  Used in URIs as the identifier for specific instances of a type."
                },
                "href": {
                    "format": "uri",
                    "type": "string",
                    "description": "The URI for the object itself."
                },
                "accessTransmissionMedium": {
                    "example": "TWISTED_PAIR",
                    "maxLength": 30,
                    "minLength": 0,
                    "type": "string",
                    "description": "AccessTransmissionMedium. Allowed values: TWISTED_PAIR, COAX, FIBER"
                },
                "asb": {
                    "example": "125",
                    "type": "integer",
                    "description": "Anschlussbereich"
                },
                "creationDate": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "creation date with timezone (ISO-8601)"
                },
                "description": {
                    "type": "string",
                    "description": "free-text description of the resource"
                },
                "descriptionUrl": {
                    "example": "https://edmpc3.one-erp.telekom.de/sap(bD1kZSZjPTAzMA==)/bc/bsp/sapzmnetkat/material.htm?matnr=40247069",
                    "maxLength": 250,
                    "minLength": 0,
                    "type": "string",
                    "description": "url for further description"
                },
                "emsNbiName": {
                    "example": "MA5600T",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "name in EMS"
                },
                "endSz": {
                    "example": "49/8571/0/76H1",
                    "pattern": "[0-9]{1,6}/[0-9]{1,6}/[0-9]{1,6}/[a-zA-Z0-9]{2,4}",
                    "maxLength": 25,
                    "minLength": 8,
                    "type": "string",
                    "description": "Endstellenschl\u00fcsselzahl"
                },
                "equipmentNumber": {
                    "example": "212880011",
                    "maxLength": 18,
                    "minLength": 0,
                    "type": "string",
                    "description": "equipment number of SRL system like PSL"
                },
                "fiberOnLocationId": {
                    "example": "71520003000065",
                    "pattern": "^\\d{0,19}$",
                    "maxLength": 19,
                    "minLength": 0,
                    "type": "string",
                    "description": "fiber on location id (folid, unique id), resource which represents the building or rather building-section (distribution-point) where the DPU is"
                },
                "firmwareVersion": {
                    "example": "MA5600V800R016C00",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "firmware version"
                },
                "fsz": {
                    "example": "76H1",
                    "maxLength": 4,
                    "minLength": 4,
                    "type": "string",
                    "description": "Fachstellenschl\u00fcsselzahl or FachSz"
                },
                "importDate": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "import date with timezone (ISO-8601)"
                },
                "ipAddress": {
                    "example": "10.182.112.196",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "IPv4 address"
                },
                "klsId": {
                    "example": "17056514",
                    "pattern": "[0-9]{1,12}",
                    "maxLength": 12,
                    "minLength": 1,
                    "type": "string",
                    "description": "KLS ID"
                },
                "lastDiscovery": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "Time of last discovery with timezone (ISO-8601)"
                },
                "manufacturer": {
                    "example": "HUAWEI",
                    "maxLength": 30,
                    "minLength": 0,
                    "type": "string",
                    "description": "manufacturer"
                },
                "materialNumber": {
                    "example": "40247069",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "material number"
                },
                "migrationState": {
                    "example": "FTTX1.7_MIGRATION_COMPLETED",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "MigrationStatus. Allowed values: FTTX1.7_MIGRATION_STARTED, FTTX1.7_MIGRATION_COMPLETED, TOPAS_MIGRATION_STARTED, TOPAS_MIGRATION_COMPLETED"
                },
                "modificationDate": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "modification date with timezone (ISO-8601)"
                },
                "name": {
                    "type": "string",
                    "description": "A string used to give a name to the resource"
                },
                "resourceId": {
                    "example": "9b37bc3e-9887-4eae-b485-2e3bccf5567a",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "resource ID, an UUID"
                },
                "serialNumber": {
                    "type": "string",
                    "description": "This is a string that represents a manufacturer-allocated number used to identify different instances of the same hardware item. The ModelNumber and PartNumber attributes are used to identify different types of hardware items. This is a REQUIRED attribute."
                },
                "shortName": {
                    "example": "MABC VB",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "short name"
                },
                "technicalLocation": {
                    "example": "000031-000000-001-004-002-021",
                    "maxLength": 30,
                    "minLength": 0,
                    "type": "string",
                    "description": "technical location"
                },
                "vpsz": {
                    "pattern": "^[0-9]{1,6}/[0-9]{1,6}/[0-9]{1,6}[/a-zA-Z0-9]{0,4}",
                    "maxLength": 25,
                    "minLength": 6,
                    "type": "string",
                    "description": "VPSZ"
                },
                "containsCardsRefOrValue": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CardRefOrValue_Create"
                    },
                    "description": "list of cards"
                },
                "containsPortsRefOrValue": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PortRefOrValue_Create"
                    },
                    "description": "list of ports"
                },
                "deviceType": {
                    "example": "OLT",
                    "$ref": "#/definitions/DeviceType",
                    "description": "device type"
                },
                "lifeCycleState": {
                    "example": "INSTALLING",
                    "$ref": "#/definitions/LifeCycleState",
                    "description": "lifecycle state"
                },
                "relatedParty": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RelatedParty"
                    }
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "format": "uri",
                    "type": "string",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                },
                "@referredType": {
                    "type": "string",
                    "description": "The actual type of the target instance when needed for disambiguation."
                }
            }
        },
        "DeviceType": {
            "type": "string",
            "description": "type enumeration of device",
            "enum": [
                "OLT",
                "DPU",
                "BNG"
            ]
        },
        "DpuEmsConfiguration": {
            "type": "object",
            "description": "DpuEmsConfiguration\nSkipped properties: category,endOperatingDate,administrativeState,operationalState,resourceStatus,usageState,note,place,resourceRelationship,resourceCharacteristic,attachment,resourceSpecification,startOperatingDate,resourceVersion,activationFeature,manufactureDate,powerState,versionNumber,value,shortName,materialNumber,descriptionUrl,lastDiscovery,description,manufacturer,name,equipmentNumber,relatedParty,resourceId",
            "required": [
                "href",
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Identifier of an instance of the resource. Required to be unique within the resource type.  Used in URIs as the identifier for specific instances of a type."
                },
                "href": {
                    "format": "uri",
                    "type": "string",
                    "description": "The URI for the object itself."
                },
                "ancpBngIpAddress": {
                    "example": "80.146.191.1",
                    "maxLength": 15,
                    "minLength": 1,
                    "type": "string",
                    "description": "ANCP IP address of BNG"
                },
                "ancpIpAddressSubnetMask": {
                    "example": "/24",
                    "maxLength": 3,
                    "minLength": 1,
                    "type": "string",
                    "description": "Subnet mask"
                },
                "ancpOwnIpAddress": {
                    "example": "80.145.191.2",
                    "maxLength": 15,
                    "minLength": 1,
                    "type": "string",
                    "description": "ANCP IP address of DPU"
                },
                "backhaulId": {
                    "example": "#bhid-06",
                    "maxLength": 32,
                    "minLength": 1,
                    "type": "string",
                    "description": "Backhaul ID"
                },
                "configurationState": {
                    "example": "INACTIVE",
                    "maxLength": 50,
                    "minLength": 1,
                    "type": "string",
                    "description": "configuration state"
                },
                "creationDate": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "creation date with timezone (ISO-8601)"
                },
                "dpuEndSz": {
                    "example": "49/8571/0/71G2",
                    "pattern": "[0-9]{1,6}/[0-9]{1,6}/[0-9]{1,6}/[a-zA-Z0-9]{2,4}",
                    "maxLength": 25,
                    "minLength": 8,
                    "type": "string",
                    "description": "Endstellenschl\u00fcsselzahl of DPU"
                },
                "emsNbiName": {
                    "example": "MA5600T",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "name in EMS"
                },
                "managedDomain": {
                    "example": "49_30_179_43G1",
                    "maxLength": 100,
                    "minLength": 1,
                    "type": "string",
                    "description": "name of managed domain"
                },
                "modificationDate": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "modification date with timezone (ISO-8601)"
                },
                "serialNumber": {
                    "example": "020123dsd23",
                    "maxLength": 50,
                    "minLength": 1,
                    "type": "string",
                    "description": "Serial number of DPU"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class entity name"
                }
            }
        },
        "DpuEmsConfiguration_Create": {
            "type": "object",
            "description": "DpuEmsConfiguration\nSkipped properties: category,endOperatingDate,administrativeState,operationalState,resourceStatus,usageState,note,place,resourceRelationship,resourceCharacteristic,attachment,resourceSpecification,startOperatingDate,resourceVersion,activationFeature,manufactureDate,powerState,versionNumber,value,shortName,materialNumber,descriptionUrl,lastDiscovery,description,manufacturer,name,equipmentNumber,relatedParty,resourceId,id,href",
            "required": [
                "dpuEndSz",
                "ancpBngIpAddress",
                "ancpIpAddressSubnetMask",
                "ancpOwnIpAddress"
            ],
            "properties": {
                "ancpBngIpAddress": {
                    "example": "80.146.191.1",
                    "maxLength": 15,
                    "minLength": 1,
                    "type": "string",
                    "description": "ANCP IP address of BNG"
                },
                "ancpIpAddressSubnetMask": {
                    "example": "/24",
                    "maxLength": 3,
                    "minLength": 1,
                    "type": "string",
                    "description": "Subnet mask"
                },
                "ancpOwnIpAddress": {
                    "example": "80.145.191.2",
                    "maxLength": 15,
                    "minLength": 1,
                    "type": "string",
                    "description": "ANCP IP address of DPU"
                },
                "backhaulId": {
                    "example": "#bhid-06",
                    "maxLength": 32,
                    "minLength": 1,
                    "type": "string",
                    "description": "Backhaul ID"
                },
                "configurationState": {
                    "example": "INACTIVE",
                    "maxLength": 50,
                    "minLength": 1,
                    "type": "string",
                    "description": "configuration state"
                },
                "creationDate": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "creation date with timezone (ISO-8601)"
                },
                "dpuEndSz": {
                    "example": "49/8571/0/71G2",
                    "pattern": "[0-9]{1,6}/[0-9]{1,6}/[0-9]{1,6}/[a-zA-Z0-9]{2,4}",
                    "maxLength": 25,
                    "minLength": 8,
                    "type": "string",
                    "description": "Endstellenschl\u00fcsselzahl of DPU"
                },
                "emsNbiName": {
                    "example": "MA5600T",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "name in EMS"
                },
                "managedDomain": {
                    "example": "49_30_179_43G1",
                    "maxLength": 100,
                    "minLength": 1,
                    "type": "string",
                    "description": "name of managed domain"
                },
                "modificationDate": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "modification date with timezone (ISO-8601)"
                },
                "serialNumber": {
                    "example": "020123dsd23",
                    "maxLength": 50,
                    "minLength": 1,
                    "type": "string",
                    "description": "Serial number of DPU"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class entity name"
                }
            }
        },
        "DpuEmsConfiguration_Update": {
            "type": "object",
            "description": "DpuEmsConfiguration\nSkipped properties: category,endOperatingDate,administrativeState,operationalState,resourceStatus,usageState,note,place,resourceRelationship,resourceCharacteristic,attachment,resourceSpecification,startOperatingDate,resourceVersion,activationFeature,manufactureDate,powerState,versionNumber,value,shortName,materialNumber,descriptionUrl,lastDiscovery,description,manufacturer,name,equipmentNumber,relatedParty,resourceId,id,href",
            "properties": {
                "ancpBngIpAddress": {
                    "example": "80.146.191.1",
                    "maxLength": 15,
                    "minLength": 1,
                    "type": "string",
                    "description": "ANCP IP address of BNG"
                },
                "ancpIpAddressSubnetMask": {
                    "example": "/24",
                    "maxLength": 3,
                    "minLength": 1,
                    "type": "string",
                    "description": "Subnet mask"
                },
                "ancpOwnIpAddress": {
                    "example": "80.145.191.2",
                    "maxLength": 15,
                    "minLength": 1,
                    "type": "string",
                    "description": "ANCP IP address of DPU"
                },
                "backhaulId": {
                    "example": "#bhid-06",
                    "maxLength": 32,
                    "minLength": 1,
                    "type": "string",
                    "description": "Backhaul ID"
                },
                "configurationState": {
                    "example": "INACTIVE",
                    "maxLength": 50,
                    "minLength": 1,
                    "type": "string",
                    "description": "configuration state"
                },
                "creationDate": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "creation date with timezone (ISO-8601)"
                },
                "dpuEndSz": {
                    "example": "49/8571/0/71G2",
                    "pattern": "[0-9]{1,6}/[0-9]{1,6}/[0-9]{1,6}/[a-zA-Z0-9]{2,4}",
                    "maxLength": 25,
                    "minLength": 8,
                    "type": "string",
                    "description": "Endstellenschl\u00fcsselzahl of DPU"
                },
                "emsNbiName": {
                    "example": "MA5600T",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "name in EMS"
                },
                "managedDomain": {
                    "example": "49_30_179_43G1",
                    "maxLength": 100,
                    "minLength": 1,
                    "type": "string",
                    "description": "name of managed domain"
                },
                "modificationDate": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "modification date with timezone (ISO-8601)"
                },
                "serialNumber": {
                    "example": "020123dsd23",
                    "maxLength": 50,
                    "minLength": 1,
                    "type": "string",
                    "description": "Serial number of DPU"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class entity name"
                }
            }
        },
        "DpuOltConfiguration": {
            "type": "object",
            "description": "DpuOltConfiguration\nSkipped properties: category,endOperatingDate,administrativeState,operationalState,resourceStatus,usageState,note,place,resourceRelationship,resourceCharacteristic,attachment,resourceSpecification,startOperatingDate,resourceVersion,activationFeature,manufactureDate,powerState,versionNumber,value,shortName,materialNumber,emsNbiName,descriptionUrl,lastDiscovery,description,manufacturer,name,equipmentNumber,relatedParty,resourceId",
            "required": [
                "href",
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Identifier of an instance of the resource. Required to be unique within the resource type.  Used in URIs as the identifier for specific instances of a type."
                },
                "href": {
                    "format": "uri",
                    "type": "string",
                    "description": "The URI for the object itself."
                },
                "backhaulId": {
                    "example": "#bhid-06",
                    "maxLength": 32,
                    "minLength": 1,
                    "type": "string",
                    "description": "Backhaul ID"
                },
                "configurationState": {
                    "example": "ACTIVE",
                    "maxLength": 50,
                    "minLength": 1,
                    "type": "string",
                    "description": "configuration state"
                },
                "creationDate": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "creation date with timezone (ISO-8601)"
                },
                "dpuEndSz": {
                    "example": "49/8571/0/71G2",
                    "pattern": "[0-9]{1,6}/[0-9]{1,6}/[0-9]{1,6}/[a-zA-Z0-9]{2,4}",
                    "maxLength": 25,
                    "minLength": 8,
                    "type": "string",
                    "description": "Endstellenschl\u00fcsselzahl of DPU"
                },
                "modificationDate": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "modification date with timezone (ISO-8601)"
                },
                "onuId": {
                    "example": "16",
                    "type": "integer",
                    "description": "unique id of optical network unit"
                },
                "serialNumber": {
                    "example": "020123dsd23",
                    "maxLength": 50,
                    "minLength": 1,
                    "type": "string",
                    "description": "serial number"
                },
                "ponPortEquipmentBusinessRef": {
                    "$ref": "#/definitions/EquipmentBusinessRef",
                    "description": "OLT port with additional data which is connected to the DPU"
                },
                "uplinkPortEquipmentBusinessRef": {
                    "$ref": "#/definitions/EquipmentBusinessRef",
                    "description": "OLT port with additional data which is connected to the BNG"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class entity name"
                }
            }
        },
        "DpuOltConfiguration_Create": {
            "type": "object",
            "description": "DpuOltConfiguration\nSkipped properties: category,endOperatingDate,administrativeState,operationalState,resourceStatus,usageState,note,place,resourceRelationship,resourceCharacteristic,attachment,resourceSpecification,startOperatingDate,resourceVersion,activationFeature,manufactureDate,powerState,versionNumber,value,shortName,materialNumber,emsNbiName,descriptionUrl,lastDiscovery,description,manufacturer,name,equipmentNumber,relatedParty,resourceId,id,href",
            "required": [
                "dpuEndSz",
                "ponPortEquipmentBusinessRef",
                "uplinkPortEquipmentBusinessRef"
            ],
            "properties": {
                "backhaulId": {
                    "example": "#bhid-06",
                    "maxLength": 32,
                    "minLength": 1,
                    "type": "string",
                    "description": "Backhaul ID"
                },
                "configurationState": {
                    "example": "ACTIVE",
                    "maxLength": 50,
                    "minLength": 1,
                    "type": "string",
                    "description": "configuration state"
                },
                "creationDate": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "creation date with timezone (ISO-8601)"
                },
                "dpuEndSz": {
                    "example": "49/8571/0/71G2",
                    "pattern": "[0-9]{1,6}/[0-9]{1,6}/[0-9]{1,6}/[a-zA-Z0-9]{2,4}",
                    "maxLength": 25,
                    "minLength": 8,
                    "type": "string",
                    "description": "Endstellenschl\u00fcsselzahl of DPU"
                },
                "modificationDate": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "modification date with timezone (ISO-8601)"
                },
                "onuId": {
                    "example": "16",
                    "type": "integer",
                    "description": "unique id of optical network unit"
                },
                "serialNumber": {
                    "example": "020123dsd23",
                    "maxLength": 50,
                    "minLength": 1,
                    "type": "string",
                    "description": "serial number"
                },
                "ponPortEquipmentBusinessRef": {
                    "$ref": "#/definitions/EquipmentBusinessRef",
                    "description": "OLT port with additional data which is connected to the DPU"
                },
                "uplinkPortEquipmentBusinessRef": {
                    "$ref": "#/definitions/EquipmentBusinessRef",
                    "description": "OLT port with additional data which is connected to the BNG"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class entity name"
                }
            }
        },
        "DpuOltConfiguration_Update": {
            "type": "object",
            "description": "DpuOltConfiguration\nSkipped properties: category,endOperatingDate,administrativeState,operationalState,resourceStatus,usageState,note,place,resourceRelationship,resourceCharacteristic,attachment,resourceSpecification,startOperatingDate,resourceVersion,activationFeature,manufactureDate,powerState,versionNumber,value,shortName,materialNumber,emsNbiName,descriptionUrl,lastDiscovery,description,manufacturer,name,equipmentNumber,relatedParty,resourceId,id,href",
            "properties": {
                "backhaulId": {
                    "example": "#bhid-06",
                    "maxLength": 32,
                    "minLength": 1,
                    "type": "string",
                    "description": "Backhaul ID"
                },
                "configurationState": {
                    "example": "ACTIVE",
                    "maxLength": 50,
                    "minLength": 1,
                    "type": "string",
                    "description": "configuration state"
                },
                "creationDate": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "creation date with timezone (ISO-8601)"
                },
                "dpuEndSz": {
                    "example": "49/8571/0/71G2",
                    "pattern": "[0-9]{1,6}/[0-9]{1,6}/[0-9]{1,6}/[a-zA-Z0-9]{2,4}",
                    "maxLength": 25,
                    "minLength": 8,
                    "type": "string",
                    "description": "Endstellenschl\u00fcsselzahl of DPU"
                },
                "modificationDate": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "modification date with timezone (ISO-8601)"
                },
                "onuId": {
                    "example": "16",
                    "type": "integer",
                    "description": "unique id of optical network unit"
                },
                "serialNumber": {
                    "example": "020123dsd23",
                    "maxLength": 50,
                    "minLength": 1,
                    "type": "string",
                    "description": "serial number"
                },
                "ponPortEquipmentBusinessRef": {
                    "$ref": "#/definitions/EquipmentBusinessRef",
                    "description": "OLT port with additional data which is connected to the DPU"
                },
                "uplinkPortEquipmentBusinessRef": {
                    "$ref": "#/definitions/EquipmentBusinessRef",
                    "description": "OLT port with additional data which is connected to the BNG"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class entity name"
                }
            }
        },
        "EntityRef": {
            "type": "object",
            "description": "Entity reference schema to be use for all entityRef class.",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "unique identifier"
                },
                "href": {
                    "format": "uri",
                    "type": "string",
                    "description": "Hyperlink reference"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the related entity."
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "format": "uri",
                    "type": "string",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                },
                "@referredType": {
                    "type": "string",
                    "description": "The actual type of the target instance when needed for disambiguation."
                }
            },
            "required": [
                "id"
            ]
        },
        "EquipmentBusinessRef": {
            "type": "object",
            "description": "business equipment data for use as reference\nSkipped properties: activationFeature,attachment,note,place,resourceSpecification,value,startOperatingDate,endOperatingDate,administrativeState,resourceStatus,usageState,name,resourceVersion,relatedParty,operationalState,category,resourceCharacteristic,resourceRelationship,powerState",
            "properties": {
                "endSz": {
                    "example": "49/8571/0/76H1",
                    "pattern": "[0-9]{1,6}/[0-9]{1,6}/[0-9]{1,6}/[a-zA-Z0-9]{2,4}",
                    "maxLength": 25,
                    "minLength": 8,
                    "type": "string",
                    "description": "Endstellenschl\u00fcsselzahl of device"
                },
                "portName": {
                    "example": "2",
                    "type": "string",
                    "description": "Name of port"
                },
                "slotName": {
                    "example": "1",
                    "type": "string",
                    "description": "Name of slot"
                },
                "deviceType": {
                    "example": "OLT, BNG, DPU",
                    "$ref": "#/definitions/DeviceType",
                    "description": "Type of device"
                },
                "portType": {
                    "example": "PON, ETHERNET, GFAST",
                    "$ref": "#/definitions/PortType",
                    "description": "Type of port"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class entity name"
                },
                "@referredType": {
                    "type": "string",
                    "format": "uri",
                    "description": "The type of the referred entity"
                }
            },
            "required": [
                "id"
            ]
        },
        "EquipmentRef": {
            "type": "object",
            "description": "reference data of an equipment\nSkipped properties: activationFeature,attachment,note,place,resourceSpecification,value,startOperatingDate,endOperatingDate,administrativeState,resourceStatus,usageState,name,resourceVersion,relatedParty,operationalState,category,resourceCharacteristic,resourceRelationship,powerState",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "unique identifier"
                },
                "href": {
                    "format": "uri",
                    "type": "string",
                    "description": "Hyperlink reference"
                },
                "endSz": {
                    "example": "49/8571/0/76H1",
                    "pattern": "[0-9]{1,6}/[0-9]{1,6}/[0-9]{1,6}/[a-zA-Z0-9]{2,4}",
                    "maxLength": 25,
                    "minLength": 8,
                    "type": "string",
                    "description": "Endstellenschl\u00fcsselzahl of device"
                },
                "portName": {
                    "example": "2",
                    "type": "string",
                    "description": "Name of port"
                },
                "slotName": {
                    "example": "1",
                    "type": "string",
                    "description": "Name of slot"
                },
                "deviceType": {
                    "example": "OLT, BNG, DPU",
                    "$ref": "#/definitions/DeviceType",
                    "description": "Type of device"
                },
                "portType": {
                    "example": "PON, ETHERNET, GFAST",
                    "$ref": "#/definitions/PortType",
                    "description": "Type of port"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "format": "uri",
                    "type": "string",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                },
                "@referredType": {
                    "type": "string",
                    "description": "The actual type of the target instance when needed for disambiguation."
                }
            },
            "required": [
                "id"
            ]
        },
        "Extensible": {
            "type": "object",
            "description": "Base Extensible schema for use in TMForum Open-APIs",
            "properties": {
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "format": "uri",
                    "type": "string",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                }
            }
        },
        "Feature": {
            "type": "object",
            "description": "Configuration feature.",
            "required": [
                "featureCharacteristic",
                "name"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Unique identifier of the feature."
                },
                "isBundle": {
                    "type": "boolean",
                    "description": "True if this is a feature group. Default is false."
                },
                "isEnabled": {
                    "type": "boolean",
                    "description": "True if this feature is enabled. Default is true."
                },
                "name": {
                    "type": "string",
                    "description": "This is the name for the feature."
                },
                "constraint": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ConstraintRef"
                    },
                    "description": "This is a list of feature constraints."
                },
                "featureCharacteristic": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Characteristic"
                    },
                    "minItems": 1,
                    "description": "This is a list of Characteristics for a particular feature."
                },
                "featureRelationship": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FeatureRelationship"
                    }
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class entity name"
                }
            }
        },
        "FeatureRelationship": {
            "type": "object",
            "description": "Configuration feature",
            "required": [
                "name",
                "relationshipType"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Unique identifier of the target feature."
                },
                "name": {
                    "type": "string",
                    "description": "This is the name of the target feature."
                },
                "relationshipType": {
                    "type": "string",
                    "description": "This is the type of the feature relationship."
                },
                "validFor": {
                    "$ref": "#/definitions/TimePeriod",
                    "description": "The period for which this feature relationship is valid."
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class entity name"
                }
            }
        },
        "LifeCycleState": {
            "type": "string",
            "description": "lifecycle state enumeration",
            "enum": [
                "NOT_OPERATING",
                "INSTALLING",
                "OPERATING",
                "RETIRING",
                "PLANNING"
            ]
        },
        "LogicalResource": {
            "type": "object",
            "description": "Logic resource is a type of resource that describes the common set of attributes shared by all concrete logical resources (e.g. TPE, MSISDN, IP Addresses) in the inventory.",
            "required": [
                "href",
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Identifier of an instance of the resource. Required to be unique within the resource type.  Used in URIs as the identifier for specific instances of a type."
                },
                "href": {
                    "format": "uri",
                    "type": "string",
                    "description": "The URI for the object itself."
                },
                "category": {
                    "type": "string",
                    "description": "Category of the concrete resource. e.g Gold, Silver for MSISDN concrete resource"
                },
                "description": {
                    "type": "string",
                    "description": "free-text description of the resource"
                },
                "endOperatingDate": {
                    "format": "date-time",
                    "type": "string",
                    "description": "A date time( DateTime). The date till the resource is operating"
                },
                "name": {
                    "type": "string",
                    "description": "A string used to give a name to the resource"
                },
                "resourceVersion": {
                    "type": "string",
                    "description": "A field that identifies the specific version of an instance of a resource."
                },
                "startOperatingDate": {
                    "format": "date-time",
                    "type": "string",
                    "description": "A date time( DateTime). The date from which the resource is operating"
                },
                "value": {
                    "type": "string",
                    "description": "the value of the logical resource. E.g '0746712345' for  MSISDN's"
                },
                "activationFeature": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Feature"
                    },
                    "description": "Configuration features"
                },
                "administrativeState": {
                    "$ref": "#/definitions/ResourceAdministrativeStateType",
                    "description": "Tracks the lifecycle status of the resource, such as planning, installing, opereating, retiring and so on."
                },
                "attachment": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AttachmentRefOrValue"
                    }
                },
                "note": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Note"
                    }
                },
                "operationalState": {
                    "$ref": "#/definitions/ResourceOperationalStateType",
                    "description": "Tracks the lifecycle status of the resource, such as planning, installing, opereating, retiring and so on."
                },
                "place": {
                    "$ref": "#/definitions/RelatedPlaceRefOrValue"
                },
                "relatedParty": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RelatedParty"
                    }
                },
                "resourceCharacteristic": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Characteristic"
                    }
                },
                "resourceRelationship": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ResourceRelationship"
                    }
                },
                "resourceSpecification": {
                    "$ref": "#/definitions/ResourceSpecificationRef"
                },
                "resourceStatus": {
                    "$ref": "#/definitions/ResourceStatusType",
                    "description": "Tracks the lifecycle status of the resource, such as planning, installing, opereating, retiring and so on."
                },
                "usageState": {
                    "$ref": "#/definitions/ResourceUsageStateType",
                    "description": "Tracks the lifecycle status of the resource, such as planning, installing, opereating, retiring and so on."
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class entity name"
                }
            }
        },
        "Note": {
            "type": "object",
            "description": "Extra information about a given entity",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Identifier of the note within its containing entity (may or may not be globally unique, depending on provider implementation)"
                },
                "author": {
                    "type": "string",
                    "description": "Author of the note"
                },
                "date": {
                    "format": "date-time",
                    "type": "string",
                    "description": "Date of the note"
                },
                "text": {
                    "type": "string",
                    "description": "Text of the note"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class entity name"
                }
            }
        },
        "OltZtcConfiguration": {
            "type": "object",
            "description": "OltZtcConfiguration\nSkipped properties: category,description,endOperatingDate,name,resourceVersion,startOperatingDate,value,activationFeature,administrativeState,attachment,note,operationalState,place,relatedParty,resourceCharacteristic,resourceRelationship,resourceSpecification,resourceStatus,usageState",
            "required": [
                "href",
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Identifier of an instance of the resource. Required to be unique within the resource type.  Used in URIs as the identifier for specific instances of a type."
                },
                "href": {
                    "format": "uri",
                    "type": "string",
                    "description": "The URI for the object itself."
                },
                "compositePartyId": {
                    "example": "10001",
                    "maxLength": 10,
                    "minLength": 1,
                    "type": "string",
                    "description": "compositePartyId"
                },
                "creationDate": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "creation date with timezone (ISO-8601)"
                },
                "installOltCorrelationId": {
                    "example": "929ab093-fae3-4dc5-9e8f-b276dea4e046",
                    "maxLength": 40,
                    "minLength": 1,
                    "type": "string",
                    "description": "id to correlate finish event of manual task for installing OLT in camunda process"
                },
                "message": {
                    "example": "",
                    "maxLength": 500,
                    "minLength": 1,
                    "type": "string",
                    "description": "error message in case of error state"
                },
                "modificationDate": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "modification date with timezone (ISO-8601)"
                },
                "numberOfPonPorts": {
                    "example": "1",
                    "maxLength": 5,
                    "minLength": 1,
                    "type": "string",
                    "description": "Number of PON ports"
                },
                "oltEndSz": {
                    "example": "49/8571/0/71H1",
                    "pattern": "[0-9]{1,6}/[0-9]{1,6}/[0-9]{1,6}/[a-zA-Z0-9]{2,4}",
                    "maxLength": 25,
                    "minLength": 8,
                    "type": "string",
                    "description": "Endstellenschl\u00fcsselzahl of OLT"
                },
                "oltType": {
                    "example": "ADTRAN.SDX.6320",
                    "maxLength": 50,
                    "minLength": 1,
                    "type": "string",
                    "description": "type of OLT"
                },
                "processId": {
                    "example": "929ab093-fae3-4dc5-9e8f-b276dea4e046",
                    "maxLength": 40,
                    "minLength": 1,
                    "type": "string",
                    "description": "processId of camunda process"
                },
                "serialNumber": {
                    "example": "SDX00000001",
                    "maxLength": 50,
                    "minLength": 1,
                    "type": "string",
                    "description": "Serial number of device"
                },
                "state": {
                    "example": "0",
                    "type": "integer",
                    "description": "state of process. Contains bit coded status flags."
                },
                "uplinkPortName": {
                    "example": "1",
                    "maxLength": 50,
                    "minLength": 1,
                    "type": "string",
                    "description": "portName of uplink port"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class entity name"
                }
            }
        },
        "OltZtcConfiguration_Create": {
            "type": "object",
            "description": "OltZtcConfiguration\nSkipped properties: category,description,endOperatingDate,name,resourceVersion,startOperatingDate,value,activationFeature,administrativeState,attachment,note,operationalState,place,relatedParty,resourceCharacteristic,resourceRelationship,resourceSpecification,resourceStatus,usageState,id,href",
            "required": [
                "oltEndSz",
                "state"
            ],
            "properties": {
                "compositePartyId": {
                    "example": "10001",
                    "maxLength": 10,
                    "minLength": 1,
                    "type": "string",
                    "description": "compositePartyId"
                },
                "creationDate": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "creation date with timezone (ISO-8601)"
                },
                "installOltCorrelationId": {
                    "example": "929ab093-fae3-4dc5-9e8f-b276dea4e046",
                    "maxLength": 40,
                    "minLength": 1,
                    "type": "string",
                    "description": "id to correlate finish event of manual task for installing OLT in camunda process"
                },
                "message": {
                    "example": "",
                    "maxLength": 500,
                    "minLength": 1,
                    "type": "string",
                    "description": "error message in case of error state"
                },
                "modificationDate": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "modification date with timezone (ISO-8601)"
                },
                "numberOfPonPorts": {
                    "example": "1",
                    "maxLength": 5,
                    "minLength": 1,
                    "type": "string",
                    "description": "Number of PON ports"
                },
                "oltEndSz": {
                    "example": "49/8571/0/71H1",
                    "pattern": "[0-9]{1,6}/[0-9]{1,6}/[0-9]{1,6}/[a-zA-Z0-9]{2,4}",
                    "maxLength": 25,
                    "minLength": 8,
                    "type": "string",
                    "description": "Endstellenschl\u00fcsselzahl of OLT"
                },
                "oltType": {
                    "example": "ADTRAN.SDX.6320",
                    "maxLength": 50,
                    "minLength": 1,
                    "type": "string",
                    "description": "type of OLT"
                },
                "processId": {
                    "example": "929ab093-fae3-4dc5-9e8f-b276dea4e046",
                    "maxLength": 40,
                    "minLength": 1,
                    "type": "string",
                    "description": "processId of camunda process"
                },
                "serialNumber": {
                    "example": "SDX00000001",
                    "maxLength": 50,
                    "minLength": 1,
                    "type": "string",
                    "description": "Serial number of device"
                },
                "state": {
                    "example": "0",
                    "type": "integer",
                    "description": "state of process. Contains bit coded status flags."
                },
                "uplinkPortName": {
                    "example": "1",
                    "maxLength": 50,
                    "minLength": 1,
                    "type": "string",
                    "description": "portName of uplink port"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class entity name"
                }
            }
        },
        "OltZtcConfiguration_Update": {
            "type": "object",
            "description": "OltZtcConfiguration\nSkipped properties: category,description,endOperatingDate,name,resourceVersion,startOperatingDate,value,activationFeature,administrativeState,attachment,note,operationalState,place,relatedParty,resourceCharacteristic,resourceRelationship,resourceSpecification,resourceStatus,usageState,id,href",
            "properties": {
                "compositePartyId": {
                    "example": "10001",
                    "maxLength": 10,
                    "minLength": 1,
                    "type": "string",
                    "description": "compositePartyId"
                },
                "creationDate": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "creation date with timezone (ISO-8601)"
                },
                "installOltCorrelationId": {
                    "example": "929ab093-fae3-4dc5-9e8f-b276dea4e046",
                    "maxLength": 40,
                    "minLength": 1,
                    "type": "string",
                    "description": "id to correlate finish event of manual task for installing OLT in camunda process"
                },
                "message": {
                    "example": "",
                    "maxLength": 500,
                    "minLength": 1,
                    "type": "string",
                    "description": "error message in case of error state"
                },
                "modificationDate": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "modification date with timezone (ISO-8601)"
                },
                "numberOfPonPorts": {
                    "example": "1",
                    "maxLength": 5,
                    "minLength": 1,
                    "type": "string",
                    "description": "Number of PON ports"
                },
                "oltEndSz": {
                    "example": "49/8571/0/71H1",
                    "pattern": "[0-9]{1,6}/[0-9]{1,6}/[0-9]{1,6}/[a-zA-Z0-9]{2,4}",
                    "maxLength": 25,
                    "minLength": 8,
                    "type": "string",
                    "description": "Endstellenschl\u00fcsselzahl of OLT"
                },
                "oltType": {
                    "example": "ADTRAN.SDX.6320",
                    "maxLength": 50,
                    "minLength": 1,
                    "type": "string",
                    "description": "type of OLT"
                },
                "processId": {
                    "example": "929ab093-fae3-4dc5-9e8f-b276dea4e046",
                    "maxLength": 40,
                    "minLength": 1,
                    "type": "string",
                    "description": "processId of camunda process"
                },
                "serialNumber": {
                    "example": "SDX00000001",
                    "maxLength": 50,
                    "minLength": 1,
                    "type": "string",
                    "description": "Serial number of device"
                },
                "state": {
                    "example": "0",
                    "type": "integer",
                    "description": "state of process. Contains bit coded status flags."
                },
                "uplinkPortName": {
                    "example": "1",
                    "maxLength": 50,
                    "minLength": 1,
                    "type": "string",
                    "description": "portName of uplink port"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class entity name"
                }
            }
        },
        "OpticalModule": {
            "type": "object",
            "description": "OpticalModule\nSkipped properties: category,endOperatingDate,administrativeState,operationalState,resourceStatus,usageState,note,place,resourceRelationship,resourceCharacteristic,attachment,resourceSpecification,startOperatingDate,resourceVersion,activationFeature,manufactureDate,powerState,versionNumber,value",
            "required": [
                "href",
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Identifier of an instance of the resource. Required to be unique within the resource type.  Used in URIs as the identifier for specific instances of a type."
                },
                "href": {
                    "format": "uri",
                    "type": "string",
                    "description": "The URI for the object itself."
                },
                "creationDate": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "creation date with timezone (ISO-8601)"
                },
                "description": {
                    "type": "string",
                    "description": "free-text description of the resource"
                },
                "descriptionUrl": {
                    "example": "https://edmpc3.one-erp.telekom.de/sap(bD1kZSZjPTAzMA==)/bc/bsp/sapzmnetkat/material.htm?matnr=40247069",
                    "maxLength": 250,
                    "minLength": 0,
                    "type": "string",
                    "description": "url for further description"
                },
                "emsNbiName": {
                    "example": "MA5600T",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "name in EMS"
                },
                "equipmentNumber": {
                    "example": "212880011",
                    "maxLength": 18,
                    "minLength": 0,
                    "type": "string",
                    "description": "equipment number of SRL system like PSL"
                },
                "lastDiscovery": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "Time of last discovery with timezone (ISO-8601)"
                },
                "manufacturer": {
                    "example": "HUAWEI",
                    "maxLength": 30,
                    "minLength": 0,
                    "type": "string",
                    "description": "manufacturer"
                },
                "materialNumber": {
                    "example": "40247069",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "material number"
                },
                "modificationDate": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "modification date with timezone (ISO-8601)"
                },
                "name": {
                    "type": "string",
                    "description": "A string used to give a name to the resource"
                },
                "resourceId": {
                    "example": "9b37bc3e-9887-4eae-b485-2e3bccf5567a",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "resource ID, an UUID"
                },
                "serialNumber": {
                    "type": "string",
                    "description": "This is a string that represents a manufacturer-allocated number used to identify different instances of the same hardware item. The ModelNumber and PartNumber attributes are used to identify different types of hardware items. This is a REQUIRED attribute."
                },
                "shortName": {
                    "example": "MABC VB",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "short name"
                },
                "parentPortEquipmentRef": {
                    "$ref": "#/definitions/EquipmentRef",
                    "description": "port where the optical module is plugged in"
                },
                "relatedParty": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RelatedParty"
                    }
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class entity name"
                }
            }
        },
        "OpticalModule_Create": {
            "type": "object",
            "description": "OpticalModule\nSkipped properties: category,endOperatingDate,administrativeState,operationalState,resourceStatus,usageState,note,place,resourceRelationship,resourceCharacteristic,attachment,resourceSpecification,startOperatingDate,resourceVersion,activationFeature,manufactureDate,powerState,versionNumber,value,id,href",
            "properties": {
                "creationDate": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "creation date with timezone (ISO-8601)"
                },
                "description": {
                    "type": "string",
                    "description": "free-text description of the resource"
                },
                "descriptionUrl": {
                    "example": "https://edmpc3.one-erp.telekom.de/sap(bD1kZSZjPTAzMA==)/bc/bsp/sapzmnetkat/material.htm?matnr=40247069",
                    "maxLength": 250,
                    "minLength": 0,
                    "type": "string",
                    "description": "url for further description"
                },
                "emsNbiName": {
                    "example": "MA5600T",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "name in EMS"
                },
                "equipmentNumber": {
                    "example": "212880011",
                    "maxLength": 18,
                    "minLength": 0,
                    "type": "string",
                    "description": "equipment number of SRL system like PSL"
                },
                "lastDiscovery": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "Time of last discovery with timezone (ISO-8601)"
                },
                "manufacturer": {
                    "example": "HUAWEI",
                    "maxLength": 30,
                    "minLength": 0,
                    "type": "string",
                    "description": "manufacturer"
                },
                "materialNumber": {
                    "example": "40247069",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "material number"
                },
                "modificationDate": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "modification date with timezone (ISO-8601)"
                },
                "name": {
                    "type": "string",
                    "description": "A string used to give a name to the resource"
                },
                "resourceId": {
                    "example": "9b37bc3e-9887-4eae-b485-2e3bccf5567a",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "resource ID, an UUID"
                },
                "serialNumber": {
                    "type": "string",
                    "description": "This is a string that represents a manufacturer-allocated number used to identify different instances of the same hardware item. The ModelNumber and PartNumber attributes are used to identify different types of hardware items. This is a REQUIRED attribute."
                },
                "shortName": {
                    "example": "MABC VB",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "short name"
                },
                "parentPortEquipmentRef": {
                    "$ref": "#/definitions/EquipmentRef",
                    "description": "port where the optical module is plugged in"
                },
                "relatedParty": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RelatedParty"
                    }
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class entity name"
                }
            }
        },
        "OpticalModule_Update": {
            "type": "object",
            "description": "OpticalModule\nSkipped properties: category,endOperatingDate,administrativeState,operationalState,resourceStatus,usageState,note,place,resourceRelationship,resourceCharacteristic,attachment,resourceSpecification,startOperatingDate,resourceVersion,activationFeature,manufactureDate,powerState,versionNumber,value,id,href",
            "properties": {
                "creationDate": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "creation date with timezone (ISO-8601)"
                },
                "description": {
                    "type": "string",
                    "description": "free-text description of the resource"
                },
                "descriptionUrl": {
                    "example": "https://edmpc3.one-erp.telekom.de/sap(bD1kZSZjPTAzMA==)/bc/bsp/sapzmnetkat/material.htm?matnr=40247069",
                    "maxLength": 250,
                    "minLength": 0,
                    "type": "string",
                    "description": "url for further description"
                },
                "emsNbiName": {
                    "example": "MA5600T",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "name in EMS"
                },
                "equipmentNumber": {
                    "example": "212880011",
                    "maxLength": 18,
                    "minLength": 0,
                    "type": "string",
                    "description": "equipment number of SRL system like PSL"
                },
                "lastDiscovery": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "Time of last discovery with timezone (ISO-8601)"
                },
                "manufacturer": {
                    "example": "HUAWEI",
                    "maxLength": 30,
                    "minLength": 0,
                    "type": "string",
                    "description": "manufacturer"
                },
                "materialNumber": {
                    "example": "40247069",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "material number"
                },
                "modificationDate": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "modification date with timezone (ISO-8601)"
                },
                "name": {
                    "type": "string",
                    "description": "A string used to give a name to the resource"
                },
                "resourceId": {
                    "example": "9b37bc3e-9887-4eae-b485-2e3bccf5567a",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "resource ID, an UUID"
                },
                "serialNumber": {
                    "type": "string",
                    "description": "This is a string that represents a manufacturer-allocated number used to identify different instances of the same hardware item. The ModelNumber and PartNumber attributes are used to identify different types of hardware items. This is a REQUIRED attribute."
                },
                "shortName": {
                    "example": "MABC VB",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "short name"
                },
                "parentPortEquipmentRef": {
                    "$ref": "#/definitions/EquipmentRef",
                    "description": "port where the optical module is plugged in"
                },
                "relatedParty": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RelatedParty"
                    }
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class entity name"
                }
            }
        },
        "OpticalModuleRefOrValue": {
            "type": "object",
            "description": "reference or value of optical module\nSkipped properties: activationFeature,attachment,note,place,resourceSpecification,value,startOperatingDate,endOperatingDate,administrativeState,resourceStatus,usageState,resourceVersion,operationalState,category,resourceCharacteristic,resourceRelationship,powerState,manufactureDate,versionNumber",
            "required": [
                "href",
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Identifier of an instance of the resource. Required to be unique within the resource type.  Used in URIs as the identifier for specific instances of a type."
                },
                "href": {
                    "format": "uri",
                    "type": "string",
                    "description": "The URI for the object itself."
                },
                "creationDate": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "creation date with timezone (ISO-8601)"
                },
                "description": {
                    "type": "string",
                    "description": "free-text description of the resource"
                },
                "descriptionUrl": {
                    "example": "https://edmpc3.one-erp.telekom.de/sap(bD1kZSZjPTAzMA==)/bc/bsp/sapzmnetkat/material.htm?matnr=40247069",
                    "maxLength": 250,
                    "minLength": 0,
                    "type": "string",
                    "description": "url for further description"
                },
                "emsNbiName": {
                    "example": "MA5600T",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "name in EMS"
                },
                "equipmentNumber": {
                    "example": "212880011",
                    "maxLength": 18,
                    "minLength": 0,
                    "type": "string",
                    "description": "equipment number of SRL system like PSL"
                },
                "lastDiscovery": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "Time of last discovery with timezone (ISO-8601)"
                },
                "manufacturer": {
                    "example": "HUAWEI",
                    "maxLength": 30,
                    "minLength": 0,
                    "type": "string",
                    "description": "manufacturer"
                },
                "materialNumber": {
                    "example": "40247069",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "material number"
                },
                "modificationDate": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "modification date with timezone (ISO-8601)"
                },
                "name": {
                    "type": "string",
                    "description": "A string used to give a name to the resource"
                },
                "resourceId": {
                    "example": "9b37bc3e-9887-4eae-b485-2e3bccf5567a",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "resource ID, an UUID"
                },
                "serialNumber": {
                    "type": "string",
                    "description": "This is a string that represents a manufacturer-allocated number used to identify different instances of the same hardware item. The ModelNumber and PartNumber attributes are used to identify different types of hardware items. This is a REQUIRED attribute."
                },
                "shortName": {
                    "example": "MABC VB",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "short name"
                },
                "parentPortEquipmentRef": {
                    "$ref": "#/definitions/EquipmentRef",
                    "description": "port where the optical module is plugged in"
                },
                "relatedParty": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RelatedParty"
                    }
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "format": "uri",
                    "type": "string",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                },
                "@referredType": {
                    "type": "string",
                    "description": "The actual type of the target instance when needed for disambiguation."
                }
            }
        },
        "OpticalModuleRefOrValue_Create": {
            "type": "object",
            "description": "reference or value of optical module\nSkipped properties: activationFeature,attachment,note,place,resourceSpecification,value,startOperatingDate,endOperatingDate,administrativeState,resourceStatus,usageState,resourceVersion,operationalState,category,resourceCharacteristic,resourceRelationship,powerState,manufactureDate,versionNumber",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Identifier of an instance of the resource. Required to be unique within the resource type.  Used in URIs as the identifier for specific instances of a type."
                },
                "href": {
                    "format": "uri",
                    "type": "string",
                    "description": "The URI for the object itself."
                },
                "creationDate": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "creation date with timezone (ISO-8601)"
                },
                "description": {
                    "type": "string",
                    "description": "free-text description of the resource"
                },
                "descriptionUrl": {
                    "example": "https://edmpc3.one-erp.telekom.de/sap(bD1kZSZjPTAzMA==)/bc/bsp/sapzmnetkat/material.htm?matnr=40247069",
                    "maxLength": 250,
                    "minLength": 0,
                    "type": "string",
                    "description": "url for further description"
                },
                "emsNbiName": {
                    "example": "MA5600T",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "name in EMS"
                },
                "equipmentNumber": {
                    "example": "212880011",
                    "maxLength": 18,
                    "minLength": 0,
                    "type": "string",
                    "description": "equipment number of SRL system like PSL"
                },
                "lastDiscovery": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "Time of last discovery with timezone (ISO-8601)"
                },
                "manufacturer": {
                    "example": "HUAWEI",
                    "maxLength": 30,
                    "minLength": 0,
                    "type": "string",
                    "description": "manufacturer"
                },
                "materialNumber": {
                    "example": "40247069",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "material number"
                },
                "modificationDate": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "modification date with timezone (ISO-8601)"
                },
                "name": {
                    "type": "string",
                    "description": "A string used to give a name to the resource"
                },
                "resourceId": {
                    "example": "9b37bc3e-9887-4eae-b485-2e3bccf5567a",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "resource ID, an UUID"
                },
                "serialNumber": {
                    "type": "string",
                    "description": "This is a string that represents a manufacturer-allocated number used to identify different instances of the same hardware item. The ModelNumber and PartNumber attributes are used to identify different types of hardware items. This is a REQUIRED attribute."
                },
                "shortName": {
                    "example": "MABC VB",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "short name"
                },
                "parentPortEquipmentRef": {
                    "$ref": "#/definitions/EquipmentRef",
                    "description": "port where the optical module is plugged in"
                },
                "relatedParty": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RelatedParty"
                    }
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "format": "uri",
                    "type": "string",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                },
                "@referredType": {
                    "type": "string",
                    "description": "The actual type of the target instance when needed for disambiguation."
                }
            }
        },
        "PhysicalResource": {
            "type": "object",
            "description": "Physical resource is a type of resource that describes the common set of attributes shared by all concrete physical resources (e.g. EQUIPMENT) in the inventory.",
            "required": [
                "href",
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Identifier of an instance of the resource. Required to be unique within the resource type.  Used in URIs as the identifier for specific instances of a type."
                },
                "href": {
                    "format": "uri",
                    "type": "string",
                    "description": "The URI for the object itself."
                },
                "category": {
                    "type": "string",
                    "description": "Category of the concrete resource. e.g Gold, Silver for MSISDN concrete resource"
                },
                "description": {
                    "type": "string",
                    "description": "free-text description of the resource"
                },
                "endOperatingDate": {
                    "format": "date-time",
                    "type": "string",
                    "description": "A date time( DateTime). The date till the resource is operating"
                },
                "manufactureDate": {
                    "format": "date-time",
                    "type": "string",
                    "description": "This is a string attribute that defines the date of manufacture of this item in the fixed format \"dd/mm/yyyy\". This is an optional attribute."
                },
                "name": {
                    "type": "string",
                    "description": "A string used to give a name to the resource"
                },
                "powerState": {
                    "type": "string",
                    "description": "This defines the current power status of the hardware item. Values include:\n\n  0:  Unknown\n  1:  Not Applicable\n  2:  No Power Applied\n  3: Full Power Applied\n  4:  Power Save - Normal\n  5:  Power Save - Degraded\n  6:  Power Save - Standby\n  7:  Power Save - Critical\n  8:  Power Save - Low Power Mode\n  9:  Power Save - Unknown\n 10: Power Cycle\n 11: Power Warning\n 12: Power Off"
                },
                "resourceVersion": {
                    "type": "string",
                    "description": "A field that identifies the specific version of an instance of a resource."
                },
                "serialNumber": {
                    "type": "string",
                    "description": "This is a string that represents a manufacturer-allocated number used to identify different instances of the same hardware item. The ModelNumber and PartNumber attributes are used to identify different types of hardware items. This is a REQUIRED attribute."
                },
                "startOperatingDate": {
                    "format": "date-time",
                    "type": "string",
                    "description": "A date time( DateTime). The date from which the resource is operating"
                },
                "versionNumber": {
                    "type": "string",
                    "description": "This is a string that identifies the version of this physical resource. This is an optional attribute."
                },
                "activationFeature": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Feature"
                    },
                    "description": "Configuration features"
                },
                "administrativeState": {
                    "$ref": "#/definitions/ResourceAdministrativeStateType",
                    "description": "Tracks the lifecycle status of the resource, such as planning, installing, opereating, retiring and so on."
                },
                "attachment": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AttachmentRefOrValue"
                    }
                },
                "note": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Note"
                    }
                },
                "operationalState": {
                    "$ref": "#/definitions/ResourceOperationalStateType",
                    "description": "Tracks the lifecycle status of the resource, such as planning, installing, opereating, retiring and so on."
                },
                "place": {
                    "$ref": "#/definitions/RelatedPlaceRefOrValue"
                },
                "relatedParty": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RelatedParty"
                    }
                },
                "resourceCharacteristic": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Characteristic"
                    }
                },
                "resourceRelationship": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ResourceRelationship"
                    }
                },
                "resourceSpecification": {
                    "$ref": "#/definitions/ResourceSpecificationRef"
                },
                "resourceStatus": {
                    "$ref": "#/definitions/ResourceStatusType",
                    "description": "Tracks the lifecycle status of the resource, such as planning, installing, opereating, retiring and so on."
                },
                "usageState": {
                    "$ref": "#/definitions/ResourceUsageStateType",
                    "description": "Tracks the lifecycle status of the resource, such as planning, installing, opereating, retiring and so on."
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class entity name"
                }
            }
        },
        "Place": {
            "type": "object",
            "description": "Place reference. Place defines the places where the products are sold or delivered.",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Unique identifier of the place"
                },
                "href": {
                    "format": "uri",
                    "type": "string",
                    "description": "Unique reference of the place"
                },
                "name": {
                    "type": "string",
                    "description": "A user-friendly name for the place, such as [Paris Store], [London Store], [Main Home]"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class entity name"
                }
            }
        },
        "PlaceRef": {
            "type": "object",
            "description": "Place reference. PlaceRef defines the placeRefs where the products are sold or delivered.",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "unique identifier"
                },
                "href": {
                    "format": "uri",
                    "type": "string",
                    "description": "Hyperlink reference"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the related entity."
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "format": "uri",
                    "type": "string",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                },
                "@referredType": {
                    "type": "string",
                    "description": "The actual type of the target instance when needed for disambiguation."
                }
            },
            "required": [
                "id"
            ]
        },
        "Port": {
            "type": "object",
            "description": "Port\nSkipped properties: category,endOperatingDate,administrativeState,operationalState,resourceStatus,usageState,note,place,resourceRelationship,resourceCharacteristic,attachment,resourceSpecification,startOperatingDate,resourceVersion,activationFeature,manufactureDate,powerState,versionNumber,serialNumber,value,shortName,materialNumber,emsNbiName,descriptionUrl,lastDiscovery,description,manufacturer,equipmentNumber,name",
            "required": [
                "href",
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Identifier of an instance of the resource. Required to be unique within the resource type.  Used in URIs as the identifier for specific instances of a type."
                },
                "href": {
                    "format": "uri",
                    "type": "string",
                    "description": "The URI for the object itself."
                },
                "creationDate": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "creation date with timezone (ISO-8601)"
                },
                "modificationDate": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "modification date with timezone (ISO-8601)"
                },
                "portName": {
                    "example": "1",
                    "maxLength": 50,
                    "minLength": 1,
                    "type": "string",
                    "description": "name of port or port number"
                },
                "resourceId": {
                    "example": "9b37bc3e-9887-4eae-b485-2e3bccf5567a",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "resource ID, an UUID"
                },
                "containsOpticalModuleRefOrValue": {
                    "$ref": "#/definitions/OpticalModuleRefOrValue",
                    "description": "optical module at this port"
                },
                "lifeCycleState": {
                    "example": "INSTALLING",
                    "$ref": "#/definitions/LifeCycleState",
                    "description": "lifecycle state"
                },
                "parentEquipmentRef": {
                    "$ref": "#/definitions/EquipmentRef",
                    "description": "device or card where the port is"
                },
                "portType": {
                    "example": "ETHERNET",
                    "$ref": "#/definitions/PortType",
                    "description": "port type"
                },
                "relatedParty": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RelatedParty"
                    }
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class entity name"
                }
            }
        },
        "Port_Update": {
            "type": "object",
            "description": "Port\nSkipped properties: category,endOperatingDate,administrativeState,operationalState,resourceStatus,usageState,note,place,resourceRelationship,resourceCharacteristic,attachment,resourceSpecification,startOperatingDate,resourceVersion,activationFeature,manufactureDate,powerState,versionNumber,serialNumber,value,shortName,materialNumber,emsNbiName,descriptionUrl,lastDiscovery,description,manufacturer,equipmentNumber,name,id,href",
            "properties": {
                "creationDate": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "creation date with timezone (ISO-8601)"
                },
                "modificationDate": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "modification date with timezone (ISO-8601)"
                },
                "portName": {
                    "example": "1",
                    "maxLength": 50,
                    "minLength": 1,
                    "type": "string",
                    "description": "name of port or port number"
                },
                "resourceId": {
                    "example": "9b37bc3e-9887-4eae-b485-2e3bccf5567a",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "resource ID, an UUID"
                },
                "containsOpticalModuleRefOrValue": {
                    "$ref": "#/definitions/OpticalModuleRefOrValue",
                    "description": "optical module at this port"
                },
                "lifeCycleState": {
                    "example": "INSTALLING",
                    "$ref": "#/definitions/LifeCycleState",
                    "description": "lifecycle state"
                },
                "parentEquipmentRef": {
                    "$ref": "#/definitions/EquipmentRef",
                    "description": "device or card where the port is"
                },
                "portType": {
                    "example": "ETHERNET",
                    "$ref": "#/definitions/PortType",
                    "description": "port type"
                },
                "relatedParty": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RelatedParty"
                    }
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class entity name"
                }
            }
        },
        "PortRefOrValue": {
            "type": "object",
            "description": "reference or value of port\nSkipped properties: activationFeature,attachment,note,place,resourceSpecification,value,startOperatingDate,endOperatingDate,administrativeState,resourceStatus,usageState,resourceVersion,operationalState,category,resourceCharacteristic,resourceRelationship,powerState,manufactureDate,versionNumber,emsNbiName,descriptionUrl,lastDiscovery,description,manufacturer,equipmentNumber,shortName,materialNumber,serialNumber,name",
            "required": [
                "href",
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Identifier of an instance of the resource. Required to be unique within the resource type.  Used in URIs as the identifier for specific instances of a type."
                },
                "href": {
                    "format": "uri",
                    "type": "string",
                    "description": "The URI for the object itself."
                },
                "creationDate": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "creation date with timezone (ISO-8601)"
                },
                "modificationDate": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "modification date with timezone (ISO-8601)"
                },
                "portName": {
                    "example": "1",
                    "maxLength": 50,
                    "minLength": 1,
                    "type": "string",
                    "description": "name of port or port number"
                },
                "resourceId": {
                    "example": "9b37bc3e-9887-4eae-b485-2e3bccf5567a",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "resource ID, an UUID"
                },
                "containsOpticalModuleRefOrValue": {
                    "$ref": "#/definitions/OpticalModuleRefOrValue",
                    "description": "optical module at this port"
                },
                "lifeCycleState": {
                    "example": "INSTALLING",
                    "$ref": "#/definitions/LifeCycleState",
                    "description": "lifecycle state"
                },
                "parentEquipmentRef": {
                    "$ref": "#/definitions/EquipmentRef",
                    "description": "device or card where the port is"
                },
                "portType": {
                    "example": "ETHERNET",
                    "$ref": "#/definitions/PortType",
                    "description": "port type"
                },
                "relatedParty": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RelatedParty"
                    }
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "format": "uri",
                    "type": "string",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                },
                "@referredType": {
                    "type": "string",
                    "description": "The actual type of the target instance when needed for disambiguation."
                }
            }
        },
        "PortRefOrValue_Create": {
            "type": "object",
            "description": "reference or value of port\nSkipped properties: activationFeature,attachment,note,place,resourceSpecification,value,startOperatingDate,endOperatingDate,administrativeState,resourceStatus,usageState,resourceVersion,operationalState,category,resourceCharacteristic,resourceRelationship,powerState,manufactureDate,versionNumber,emsNbiName,descriptionUrl,lastDiscovery,description,manufacturer,equipmentNumber,shortName,materialNumber,serialNumber,name",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Identifier of an instance of the resource. Required to be unique within the resource type.  Used in URIs as the identifier for specific instances of a type."
                },
                "href": {
                    "format": "uri",
                    "type": "string",
                    "description": "The URI for the object itself."
                },
                "creationDate": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "creation date with timezone (ISO-8601)"
                },
                "modificationDate": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "modification date with timezone (ISO-8601)"
                },
                "portName": {
                    "example": "1",
                    "maxLength": 50,
                    "minLength": 1,
                    "type": "string",
                    "description": "name of port or port number"
                },
                "resourceId": {
                    "example": "9b37bc3e-9887-4eae-b485-2e3bccf5567a",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "resource ID, an UUID"
                },
                "containsOpticalModuleRefOrValue": {
                    "$ref": "#/definitions/OpticalModuleRefOrValue_Create",
                    "description": "optical module at this port"
                },
                "lifeCycleState": {
                    "example": "INSTALLING",
                    "$ref": "#/definitions/LifeCycleState",
                    "description": "lifecycle state"
                },
                "parentEquipmentRef": {
                    "$ref": "#/definitions/EquipmentRef",
                    "description": "device or card where the port is"
                },
                "portType": {
                    "example": "ETHERNET",
                    "$ref": "#/definitions/PortType",
                    "description": "port type"
                },
                "relatedParty": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RelatedParty"
                    }
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "format": "uri",
                    "type": "string",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                },
                "@referredType": {
                    "type": "string",
                    "description": "The actual type of the target instance when needed for disambiguation."
                }
            }
        },
        "PortType": {
            "type": "string",
            "description": "type enumeration of port",
            "enum": [
                "PON",
                "ETHERNET",
                "GFAST"
            ]
        },
        "Quantity": {
            "type": "object",
            "description": "An amount in a given unit",
            "properties": {
                "amount": {
                    "default": 1,
                    "format": "float",
                    "type": "number",
                    "description": "Numeric value in a given unit"
                },
                "units": {
                    "type": "string",
                    "description": "Unit"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class entity name"
                }
            }
        },
        "RelatedParty": {
            "type": "object",
            "description": "Related Entity reference. A related party defines party or party role linked to a specific entity.",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "description": "unique identifier"
                },
                "href": {
                    "format": "uri",
                    "type": "string",
                    "description": "Hyperlink reference"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the related entity."
                },
                "role": {
                    "type": "string",
                    "description": "Role played by the related party"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "format": "uri",
                    "type": "string",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                },
                "@referredType": {
                    "type": "string",
                    "description": "The actual type of the target instance when needed for disambiguation."
                }
            }
        },
        "RelatedPlaceRefOrValue": {
            "type": "object",
            "description": "Related Entity reference. A related place defines a place described by reference or by value linked to a specific entity. The polymorphic attributes @type, @schemaLocation & @referredType are related to the place entity and not the RelatedPlaceRefOrValue class itself",
            "required": [
                "role"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Unique identifier of the place"
                },
                "href": {
                    "format": "uri",
                    "type": "string",
                    "description": "Unique reference of the place"
                },
                "name": {
                    "type": "string",
                    "description": "A user-friendly name for the place, such as [Paris Store], [London Store], [Main Home]"
                },
                "role": {
                    "type": "string"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "format": "uri",
                    "type": "string",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                },
                "@referredType": {
                    "type": "string",
                    "description": "The actual type of the target instance when needed for disambiguation."
                }
            }
        },
        "RelatedPlaceRefOrValue_Create": {
            "type": "object",
            "description": "Related Entity reference. A related place defines a place described by reference or by value linked to a specific entity. The polymorphic attributes @type, @schemaLocation & @referredType are related to the place entity and not the RelatedPlaceRefOrValue class itself",
            "required": [
                "role"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Unique identifier of the place"
                },
                "href": {
                    "format": "uri",
                    "type": "string",
                    "description": "Unique reference of the place"
                },
                "name": {
                    "type": "string",
                    "description": "A user-friendly name for the place, such as [Paris Store], [London Store], [Main Home]"
                },
                "role": {
                    "type": "string"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "format": "uri",
                    "type": "string",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                },
                "@referredType": {
                    "type": "string",
                    "description": "The actual type of the target instance when needed for disambiguation."
                }
            }
        },
        "Resource": {
            "type": "object",
            "description": "Resource is an abstract entity that describes the common set of attributes shared by all concrete resources (e.g. TPE, EQUIPMENT) in the inventory.",
            "required": [
                "href",
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Identifier of an instance of the resource. Required to be unique within the resource type.  Used in URIs as the identifier for specific instances of a type."
                },
                "href": {
                    "format": "uri",
                    "type": "string",
                    "description": "The URI for the object itself."
                },
                "category": {
                    "type": "string",
                    "description": "Category of the concrete resource. e.g Gold, Silver for MSISDN concrete resource"
                },
                "description": {
                    "type": "string",
                    "description": "free-text description of the resource"
                },
                "endOperatingDate": {
                    "format": "date-time",
                    "type": "string",
                    "description": "A date time( DateTime). The date till the resource is operating"
                },
                "name": {
                    "type": "string",
                    "description": "A string used to give a name to the resource"
                },
                "resourceVersion": {
                    "type": "string",
                    "description": "A field that identifies the specific version of an instance of a resource."
                },
                "startOperatingDate": {
                    "format": "date-time",
                    "type": "string",
                    "description": "A date time( DateTime). The date from which the resource is operating"
                },
                "activationFeature": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Feature"
                    },
                    "description": "Configuration features"
                },
                "administrativeState": {
                    "$ref": "#/definitions/ResourceAdministrativeStateType",
                    "description": "Tracks the lifecycle status of the resource, such as planning, installing, opereating, retiring and so on."
                },
                "attachment": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AttachmentRefOrValue"
                    }
                },
                "note": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Note"
                    }
                },
                "operationalState": {
                    "$ref": "#/definitions/ResourceOperationalStateType",
                    "description": "Tracks the lifecycle status of the resource, such as planning, installing, opereating, retiring and so on."
                },
                "place": {
                    "$ref": "#/definitions/RelatedPlaceRefOrValue"
                },
                "relatedParty": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RelatedParty"
                    }
                },
                "resourceCharacteristic": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Characteristic"
                    }
                },
                "resourceRelationship": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ResourceRelationship"
                    }
                },
                "resourceSpecification": {
                    "$ref": "#/definitions/ResourceSpecificationRef"
                },
                "resourceStatus": {
                    "$ref": "#/definitions/ResourceStatusType",
                    "description": "Tracks the lifecycle status of the resource, such as planning, installing, opereating, retiring and so on."
                },
                "usageState": {
                    "$ref": "#/definitions/ResourceUsageStateType",
                    "description": "Tracks the lifecycle status of the resource, such as planning, installing, opereating, retiring and so on."
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class entity name"
                }
            }
        },
        "ResourceAdministrativeStateType": {
            "type": "string",
            "description": "ResourceAdministrativeStateType enumerations",
            "enum": [
                "locked",
                "unlocked",
                "shutdown"
            ]
        },
        "ResourceOperationalStateType": {
            "type": "string",
            "description": "ResourceOperationalStateType enumerations",
            "enum": [
                "enable",
                "disable"
            ]
        },
        "ResourceRef": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "unique identifier"
                },
                "href": {
                    "format": "uri",
                    "type": "string",
                    "description": "Hyperlink reference"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the related entity."
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "format": "uri",
                    "type": "string",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                },
                "@referredType": {
                    "type": "string",
                    "description": "The actual type of the target instance when needed for disambiguation."
                }
            },
            "required": [
                "id"
            ]
        },
        "ResourceRefOrValue": {
            "type": "object",
            "description": "Resource is an abstract entity that describes the common set of attributes shared by all concrete resources. The polymorphic attributes @type, @schemaLocation & @referredType are related to the Resource entity and not the related ResourceRefOrValue class itself",
            "required": [
                "href",
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Identifier of an instance of the resource. Required to be unique within the resource type.  Used in URIs as the identifier for specific instances of a type."
                },
                "href": {
                    "format": "uri",
                    "type": "string",
                    "description": "The URI for the object itself."
                },
                "category": {
                    "type": "string",
                    "description": "Category of the concrete resource. e.g Gold, Silver for MSISDN concrete resource"
                },
                "description": {
                    "type": "string",
                    "description": "free-text description of the resource"
                },
                "endOperatingDate": {
                    "format": "date-time",
                    "type": "string",
                    "description": "A date time( DateTime). The date till the resource is operating"
                },
                "name": {
                    "type": "string",
                    "description": "A string used to give a name to the resource"
                },
                "resourceVersion": {
                    "type": "string",
                    "description": "A field that identifies the specific version of an instance of a resource."
                },
                "startOperatingDate": {
                    "format": "date-time",
                    "type": "string",
                    "description": "A date time( DateTime). The date from which the resource is operating"
                },
                "activationFeature": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Feature"
                    },
                    "description": "Configuration features"
                },
                "administrativeState": {
                    "$ref": "#/definitions/ResourceAdministrativeStateType",
                    "description": "Tracks the lifecycle status of the resource, such as planning, installing, opereating, retiring and so on."
                },
                "attachment": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AttachmentRefOrValue"
                    }
                },
                "note": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Note"
                    }
                },
                "operationalState": {
                    "$ref": "#/definitions/ResourceOperationalStateType",
                    "description": "Tracks the lifecycle status of the resource, such as planning, installing, opereating, retiring and so on."
                },
                "place": {
                    "$ref": "#/definitions/RelatedPlaceRefOrValue"
                },
                "relatedParty": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RelatedParty"
                    }
                },
                "resourceCharacteristic": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Characteristic"
                    }
                },
                "resourceRelationship": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ResourceRelationship"
                    }
                },
                "resourceSpecification": {
                    "$ref": "#/definitions/ResourceSpecificationRef"
                },
                "resourceStatus": {
                    "$ref": "#/definitions/ResourceStatusType",
                    "description": "Tracks the lifecycle status of the resource, such as planning, installing, opereating, retiring and so on."
                },
                "usageState": {
                    "$ref": "#/definitions/ResourceUsageStateType",
                    "description": "Tracks the lifecycle status of the resource, such as planning, installing, opereating, retiring and so on."
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "format": "uri",
                    "type": "string",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                },
                "@referredType": {
                    "type": "string",
                    "description": "The actual type of the target instance when needed for disambiguation."
                }
            }
        },
        "ResourceRefOrValue_Create": {
            "type": "object",
            "description": "Resource is an abstract entity that describes the common set of attributes shared by all concrete resources. The polymorphic attributes @type, @schemaLocation & @referredType are related to the Resource entity and not the related ResourceRefOrValue class itself",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Identifier of an instance of the resource. Required to be unique within the resource type.  Used in URIs as the identifier for specific instances of a type."
                },
                "href": {
                    "format": "uri",
                    "type": "string",
                    "description": "The URI for the object itself."
                },
                "category": {
                    "type": "string",
                    "description": "Category of the concrete resource. e.g Gold, Silver for MSISDN concrete resource"
                },
                "description": {
                    "type": "string",
                    "description": "free-text description of the resource"
                },
                "endOperatingDate": {
                    "format": "date-time",
                    "type": "string",
                    "description": "A date time( DateTime). The date till the resource is operating"
                },
                "name": {
                    "type": "string",
                    "description": "A string used to give a name to the resource"
                },
                "resourceVersion": {
                    "type": "string",
                    "description": "A field that identifies the specific version of an instance of a resource."
                },
                "startOperatingDate": {
                    "format": "date-time",
                    "type": "string",
                    "description": "A date time( DateTime). The date from which the resource is operating"
                },
                "activationFeature": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Feature"
                    },
                    "description": "Configuration features"
                },
                "administrativeState": {
                    "$ref": "#/definitions/ResourceAdministrativeStateType",
                    "description": "Tracks the lifecycle status of the resource, such as planning, installing, opereating, retiring and so on."
                },
                "attachment": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AttachmentRefOrValue_Create"
                    }
                },
                "note": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Note"
                    }
                },
                "operationalState": {
                    "$ref": "#/definitions/ResourceOperationalStateType",
                    "description": "Tracks the lifecycle status of the resource, such as planning, installing, opereating, retiring and so on."
                },
                "place": {
                    "$ref": "#/definitions/RelatedPlaceRefOrValue_Create"
                },
                "relatedParty": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RelatedParty"
                    }
                },
                "resourceCharacteristic": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Characteristic"
                    }
                },
                "resourceRelationship": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ResourceRelationship"
                    }
                },
                "resourceSpecification": {
                    "$ref": "#/definitions/ResourceSpecificationRef"
                },
                "resourceStatus": {
                    "$ref": "#/definitions/ResourceStatusType",
                    "description": "Tracks the lifecycle status of the resource, such as planning, installing, opereating, retiring and so on."
                },
                "usageState": {
                    "$ref": "#/definitions/ResourceUsageStateType",
                    "description": "Tracks the lifecycle status of the resource, such as planning, installing, opereating, retiring and so on."
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "format": "uri",
                    "type": "string",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                },
                "@referredType": {
                    "type": "string",
                    "description": "The actual type of the target instance when needed for disambiguation."
                }
            }
        },
        "ResourceRelationship": {
            "type": "object",
            "description": "Linked resources to the one instantiate, such as [bundled] if the resource is a bundle and you want to describe the bundled resources inside this bundle; [reliesOn] if the resource needs another already owned resource to rely on (e.g. an option on an already owned mobile access resource) [targets] or [isTargeted] (depending on the way of expressing the link) for any other kind of links that may be useful",
            "required": [
                "relationshipType",
                "resource"
            ],
            "properties": {
                "relationshipType": {
                    "example": "bundled",
                    "type": "string",
                    "description": "Type of the resource relationship, such as [bundled] if the resource is a bundle and you want to describe the bundled resources inside this bundle; [reliesOn] if the resource needs another already owned resource to rely on (eg: an option on an already owned mobile access resource) [targets] or [isTargeted] (depending on the way of expressing the link) for any other kind of links that may be useful"
                },
                "resource": {
                    "$ref": "#/definitions/ResourceRefOrValue"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class entity name"
                }
            }
        },
        "ResourceSpecificationRef": {
            "type": "object",
            "description": "Resources are physical or non-physical components (or some combination of these) within an enterprise's infrastructure or inventory. They are typically consumed or used by services (for example a physical port assigned to a service) or contribute to the realization of a Product (for example, a SIM card). They can be drawn from the Application, Computing and Network domains, and include, for example, Network Elements, software, IT systems, content and information, and technology components.\nA ResourceSpecification is an abstract base class for representing a generic means for implementing a particular type of Resource. In essence, a ResourceSpecification defines the common attributes and relationships of a set of related Resources, while Resource defines a specific instance that is based on a particular ResourceSpecification.",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "unique identifier"
                },
                "href": {
                    "format": "uri",
                    "type": "string",
                    "description": "Hyperlink reference"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the related entity."
                },
                "version": {
                    "type": "string",
                    "description": "Resource Specification version"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "format": "uri",
                    "type": "string",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                },
                "@referredType": {
                    "type": "string",
                    "description": "The actual type of the target instance when needed for disambiguation."
                }
            },
            "required": [
                "id"
            ]
        },
        "ResourceStatusType": {
            "type": "string",
            "description": "ResourceStatusType enumerations",
            "enum": [
                "standby",
                "alarm",
                "available",
                "reserved",
                "unknown",
                "suspended"
            ]
        },
        "ResourceUsageStateType": {
            "type": "string",
            "description": "ResourceUsageStateType enumerations",
            "enum": [
                "idle",
                "active",
                "busy"
            ]
        },
        "TimePeriod": {
            "type": "object",
            "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
            "properties": {
                "endDateTime": {
                    "example": "1985-04-12T23:20:50.52Z",
                    "format": "date-time",
                    "type": "string",
                    "description": "End of the time period, using IETC-RFC-3339 format"
                },
                "startDateTime": {
                    "example": "1985-04-12T23:20:50.52Z",
                    "format": "date-time",
                    "type": "string",
                    "description": "Start of the time period, using IETC-RFC-3339 format"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class entity name"
                }
            }
        },
        "Uplink": {
            "type": "object",
            "description": "Uplink\nSkipped properties: category,endOperatingDate,administrativeState,operationalState,resourceStatus,usageState,note,place,resourceRelationship,resourceCharacteristic,attachment,resourceSpecification,startOperatingDate,resourceVersion,activationFeature,manufactureDate,powerState,versionNumber,value,shortName,materialNumber,emsNbiName,descriptionUrl,lastDiscovery,description,manufacturer,name,serialNumber,equipmentNumber",
            "required": [
                "href",
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Identifier of an instance of the resource. Required to be unique within the resource type.  Used in URIs as the identifier for specific instances of a type."
                },
                "href": {
                    "format": "uri",
                    "type": "string",
                    "description": "The URI for the object itself."
                },
                "creationDate": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "creation date with timezone (ISO-8601)"
                },
                "modificationDate": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "modification date with timezone (ISO-8601)"
                },
                "ordnungsnummer": {
                    "example": "42",
                    "minimum": 0,
                    "type": "integer",
                    "description": "Ordnungsnummer, identifier of link"
                },
                "pluralId": {
                    "example": "",
                    "pattern": "^[A-Z/a-z/0-9]{9}$",
                    "maxLength": 9,
                    "minLength": 9,
                    "type": "string",
                    "description": "Plural id"
                },
                "resourceId": {
                    "example": "9b37bc3e-9887-4eae-b485-2e3bccf5567a",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "resource ID, an UUID"
                },
                "uewegId": {
                    "example": "R123456789",
                    "pattern": "^[A-Z/a-z][0-9]{9}$",
                    "maxLength": 10,
                    "minLength": 10,
                    "type": "string",
                    "description": "ueweg id"
                },
                "version": {
                    "example": "2",
                    "maxLength": 4,
                    "minLength": 1,
                    "type": "string",
                    "description": "version e.g. at Rebell/Ironman/PropMan"
                },
                "versionId": {
                    "example": "",
                    "pattern": "^102/1/[0-9]{4}/[0-9]{1,14}$",
                    "maxLength": 25,
                    "minLength": 12,
                    "type": "string",
                    "description": "version id"
                },
                "lsz": {
                    "example": "4C1",
                    "$ref": "#/definitions/UplinkLsz",
                    "description": "Leitungsschl\u00fcsselzahl"
                },
                "portsEquipmentBusinessRef": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/EquipmentBusinessRef"
                    },
                    "description": "array of ports with additional data for endpoint A and B, max. two items in array"
                },
                "relatedParty": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RelatedParty"
                    }
                },
                "state": {
                    "example": "ACTIVE",
                    "$ref": "#/definitions/UplinkState",
                    "description": "state"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class entity name"
                }
            }
        },
        "Uplink_Create": {
            "type": "object",
            "description": "Uplink\nSkipped properties: category,endOperatingDate,administrativeState,operationalState,resourceStatus,usageState,note,place,resourceRelationship,resourceCharacteristic,attachment,resourceSpecification,startOperatingDate,resourceVersion,activationFeature,manufactureDate,powerState,versionNumber,value,shortName,materialNumber,emsNbiName,descriptionUrl,lastDiscovery,description,manufacturer,name,serialNumber,equipmentNumber,id,href",
            "required": [
                "state",
                "lsz",
                "portsEquipmentBusinessRef"
            ],
            "properties": {
                "creationDate": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "creation date with timezone (ISO-8601)"
                },
                "modificationDate": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "modification date with timezone (ISO-8601)"
                },
                "ordnungsnummer": {
                    "example": "42",
                    "minimum": 0,
                    "type": "integer",
                    "description": "Ordnungsnummer, identifier of link"
                },
                "pluralId": {
                    "example": "",
                    "pattern": "^[A-Z/a-z/0-9]{9}$",
                    "maxLength": 9,
                    "minLength": 9,
                    "type": "string",
                    "description": "Plural id"
                },
                "resourceId": {
                    "example": "9b37bc3e-9887-4eae-b485-2e3bccf5567a",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "resource ID, an UUID"
                },
                "uewegId": {
                    "example": "R123456789",
                    "pattern": "^[A-Z/a-z][0-9]{9}$",
                    "maxLength": 10,
                    "minLength": 10,
                    "type": "string",
                    "description": "ueweg id"
                },
                "version": {
                    "example": "2",
                    "maxLength": 4,
                    "minLength": 1,
                    "type": "string",
                    "description": "version e.g. at Rebell/Ironman/PropMan"
                },
                "versionId": {
                    "example": "",
                    "pattern": "^102/1/[0-9]{4}/[0-9]{1,14}$",
                    "maxLength": 25,
                    "minLength": 12,
                    "type": "string",
                    "description": "version id"
                },
                "lsz": {
                    "example": "4C1",
                    "$ref": "#/definitions/UplinkLsz",
                    "description": "Leitungsschl\u00fcsselzahl"
                },
                "portsEquipmentBusinessRef": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/EquipmentBusinessRef"
                    },
                    "minItems": 1,
                    "description": "array of ports with additional data for endpoint A and B, max. two items in array"
                },
                "relatedParty": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RelatedParty"
                    }
                },
                "state": {
                    "example": "ACTIVE",
                    "$ref": "#/definitions/UplinkState",
                    "description": "state"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class entity name"
                }
            }
        },
        "Uplink_Update": {
            "type": "object",
            "description": "Uplink\nSkipped properties: category,endOperatingDate,administrativeState,operationalState,resourceStatus,usageState,note,place,resourceRelationship,resourceCharacteristic,attachment,resourceSpecification,startOperatingDate,resourceVersion,activationFeature,manufactureDate,powerState,versionNumber,value,shortName,materialNumber,emsNbiName,descriptionUrl,lastDiscovery,description,manufacturer,name,serialNumber,equipmentNumber,id,href",
            "properties": {
                "creationDate": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "creation date with timezone (ISO-8601)"
                },
                "modificationDate": {
                    "example": "2021-01-22T15:21:27.19554+01:00",
                    "format": "date-time",
                    "type": "string",
                    "description": "modification date with timezone (ISO-8601)"
                },
                "ordnungsnummer": {
                    "example": "42",
                    "minimum": 0,
                    "type": "integer",
                    "description": "Ordnungsnummer, identifier of link"
                },
                "pluralId": {
                    "example": "",
                    "pattern": "^[A-Z/a-z/0-9]{9}$",
                    "maxLength": 9,
                    "minLength": 9,
                    "type": "string",
                    "description": "Plural id"
                },
                "resourceId": {
                    "example": "9b37bc3e-9887-4eae-b485-2e3bccf5567a",
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string",
                    "description": "resource ID, an UUID"
                },
                "uewegId": {
                    "example": "R123456789",
                    "pattern": "^[A-Z/a-z][0-9]{9}$",
                    "maxLength": 10,
                    "minLength": 10,
                    "type": "string",
                    "description": "ueweg id"
                },
                "version": {
                    "example": "2",
                    "maxLength": 4,
                    "minLength": 1,
                    "type": "string",
                    "description": "version e.g. at Rebell/Ironman/PropMan"
                },
                "versionId": {
                    "example": "",
                    "pattern": "^102/1/[0-9]{4}/[0-9]{1,14}$",
                    "maxLength": 25,
                    "minLength": 12,
                    "type": "string",
                    "description": "version id"
                },
                "lsz": {
                    "example": "4C1",
                    "$ref": "#/definitions/UplinkLsz",
                    "description": "Leitungsschl\u00fcsselzahl"
                },
                "portsEquipmentBusinessRef": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/EquipmentBusinessRef"
                    },
                    "description": "array of ports with additional data for endpoint A and B, max. two items in array"
                },
                "relatedParty": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RelatedParty"
                    }
                },
                "state": {
                    "example": "ACTIVE",
                    "$ref": "#/definitions/UplinkState",
                    "description": "state"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class entity name"
                }
            }
        },
        "UplinkLsz": {
            "type": "string",
            "description": "LSZ enumeration of an uplink",
            "enum": [
                "4C1",
                "4C2",
                "4Z2"
            ]
        },
        "UplinkState": {
            "type": "string",
            "description": "state enumeration of an uplink",
            "enum": [
                "ACTIVE",
                "PLANNED",
                "ACTIVATION_PROCESS"
            ]
        },
        "Error": {
            "description": "Used when an API throws an Error, typically with a HTTP error response-code (3xx, 4xx, 5xx)",
            "type": "object",
            "required": [
                "code",
                "reason"
            ],
            "properties": {
                "code": {
                    "type": "string",
                    "description": "Application relevant detail, defined in the API or a common list."
                },
                "reason": {
                    "type": "string",
                    "description": "Explanation of the reason for the error which can be shown to a client user."
                },
                "message": {
                    "type": "string",
                    "description": "More details and corrective actions related to the error which can be shown to a client user."
                },
                "status": {
                    "type": "string",
                    "description": "HTTP Error code extension"
                },
                "referenceError": {
                    "type": "string",
                    "format": "uri",
                    "description": "URI of documentation describing the error."
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class."
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class entity name."
                }
            }
        }
    }
}