swagger: '2.0'
info:
  description: >-

    ## Latest Update for T-Magic : 11th of August 2020

    The WorkOrder API provides a draft of a standardized mechanism for managing
    WorkOrder, a type of order which can be used to place an order for (here
    mostly fiber installation)  that a supplier has to do so that further
    services can used.


    ### Workorder resource

    A workorder describes the work/action that the supplier has to do.
    There are different Workorder types where supplier has to do something at the
    customer location like installing OneBox/Gf-TA or performing an Exploration/Site Survey,
    or work needs to be done on common infrastructure like NVT-Installation etc.

    ### Workorder API performs the following operations on workorder :
     - creation of a workorder
     - update of a workorder (e.g. to change status, update appointment info etc.)
     - delete workorder

    ### Implementation Notes T-Magic

     - there is still no official TMF REST API for workorders, so  following services are not following any TMF REST API guidelines

    ### History:
     - 5.0.12 / 20.10.2020 / Rafal Nowak: Added workorderTypeDefinition endpoint description
     - v5.0.11 / 24.09.2020 / Piotr Pawlaczyk: Added date-ranges in find workorder
     -  5.0.10 / 01.09.2020 / Michal Ratajczyk: removed 'v' prefix from version number
     - v5.0.10 / 11.08.2020 / Florian Falkenstein: added new externalOrderReferenceType Enum BUILDING_ORDER
     - v5.0.9 / 06.08.2020 / Jakub Pietrzak: changed 403 responses to 401 and added response with payload (workorder) to PATCH operation
     - v5.0.8 / 22.07.2020 / Jakub Pietrzak: removed type attribute from workorder update request body (PATCH)
     - v5.0.7 / 25.06.2020 / Florian Falkenstein: removed status READY, changed supplierProjectId to mandatory
     - v5.0.6 / 22.06.2020 / Florian Falkenstein: description changes and switch mandatory flag between title and salutation of Contact Person
     - v5.0.5 / 18.06.2020 / Florian Falkenstein: added workcharacteristics to PATCH workorder and changed/added externalOrderReferenceTypes CUSTOMER_INSTALLATION_ORDER and DISTRIBUTION_POINT_ORDER
     - v5.0.4 / 11.06.2020 / Florian Falkenstein: changed folId from long to string & marked it as required

  version: "5.0.12"
  title: external Workorder API
host: workorder-app
basePath: /workorder-rs
tags:
  - name: workorders
  - name: workorderTypeDefinition
schemes:
  - http
  - https
paths:
  /giga-project-dioss/v5/workorders:
    post:
      tags:
        - workorders
      summary: 'Creates a new Workorder.'
      description: 'This operation creates a new Workorder entity.<br>
        Initial Status of Workorder is CREATED. Also if status is not provided, Status is set to CREATED.'
      operationId: createWorkorder
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: workorder
          in: body
          required: true
          schema:
            $ref: '#/definitions/WorkorderCreationRequest'
        - name: apm-principal-token
          in: header
          description: Identity JWT Token of user/consumer
          type: string
      responses:
        '201':
          description: Workorder has been created successfully
          headers:
            Location:
              type: string
              description: URI to a representation of the created Workorder.
          schema:
            $ref: "#/definitions/Workorder"
        '400':
          description: Bad request, please check Problem Details
          schema:
            $ref: "#/definitions/RFCProblem"
        '401':
          description: Unauthorized, Authentication failed.
          schema:
            $ref: "#/definitions/RFCProblem"
        '409':
          description: Conflict in Workorder Creation, please check Problem Details
          schema:
            $ref: "#/definitions/RFCProblem"
        '500':
          description: Internal Server Error, please check Problem Details
          schema:
            $ref: "#/definitions/RFCProblem"
    get:
      tags:
        - workorders
      summary: Find/Search Workorder by different Search Criteria.
      description: 'With this operation, workorders are returned based on search criteria'
      operationId: findWorkorder
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: "offset"
          in: query
          type: integer
          minimum: 1
          default: 1
          required: false
          description: Offset/Page of Pagination that will returned. If not provided it will be set automatically to 1.
        - name: "limit"
          in: query
          type: integer
          minimum: 1
          default: 10
          maximum: 100
          required: false
          description: Limit/Pagesize of Pagination, so number of Workorders that will be returned per page. If not provided it will be set automatically to 10. Min is 1, Max is 100.
        - name: "type"
          in: query
          description: 'Type of Workorder, describes which type of workorder will be done by supplier. Possible Values (not complete list): <br>
           AUSKUNDUNG, GIGA_TA_INSTALLATION, GF_AP_INSTALLATION, DPU_INSTALLATION, INHOUSE_NETZ, NVT_INSTALLATION, NACHBESTUECKUNG_GF_AP, NACHBESTUECKUNG_NVT, PASSED_PLUS_BAU, A4_INBETRIEBNAHME, NETZUMSCHALTUNG, PLANNING'
          type: string
          required: false
        - name: "workforceExternalId"
          in: query
          description: Id of external Workforce System.
          type: string
          required: false
        - name: "status"
          in: query
          description: "Status of Workorder (Enumeration). Possible Values: <br>
           <li> CREATED:  Workorder is created, Supplier can start work on Workorder.</li>
           <li> IN_PROGRESS: Supplier started work on Workorder. </li>
           <li> COMPLETED: Supplier completed Workorder successfully. </li>
           <li> CANCELED: Workorder was canceled.</li> "
          type: string
          enum:
            - "CREATED"
            - "IN_PROGRESS"
            - "COMPLETED"
            - "CANCELED"
          required: false
        - name: "externalOrderReferenceId"
          in: query
          required: false
          description: Reference Id of external Order Service. Should be used together with externalOrderType
          type: string
        - name: "externalOrderReferenceType"
          in: query
          required: false
          description: Reference Type of external Order Service.
          type: string
          enum:
            - CUSTOMER_INSTALLATION_ORDER
            - DISTRIBUTION_POINT_ORDER
            - BUILDING_TASK_ORDER
            - BUILDING_ORDER
            - NETWORK_CAPACITY_ORDER
            - NETWORK_SWITCHING_ORDER
            - NETWORK_CONSTRUCTION_ORDER
        - name: "klsId"
          in: query
          required: false
          description: KLS-ID of Workorder, a reference to address where workorder will be done.
          type: integer
          format: int64
        - name: "folId"
          in: query
          required: false
          description: FiberOnLocation-ID of Workorder, a reference to location where workorder will be done.
          type: string
        - name: "gigaAreaNumber"
          in: query
          required: false
          description: Giga Area number (Gebiet ID) as Reference.
          type: string
        - name: "supplierProjectId"
          in: query
          required: false
          description: ProjectId of SupplierProjectReference for this workorder.
          type: integer
          format: int64
        - name: "supplierPartyId"
          in: query
          required: false
          description: Party-ID of supplier assigned to this workorder
          type: integer
          format: int64
        - name: "networkTopology"
          in: query
          required: false
          description: Network Topology on which workorder will be done.
          type: string
          enum:
            - "NE2"
            - "NE3"
            - "NE4"
            - "NE5"
        - name: "dueDateTimeBeginFrom"
          in: query
          description: Beginning Timestamp start of Timeslot, when Workorder is due to be done. Relevant especially for Workorder with Customers when Appointment has be scheduled.
          type: string
          format: date-time
        - name: "dueDateTimeBeginTo"
          in: query
          description: Ending Timestamp start of Timeslot, when Workorder is due to be done. Relevant especially for Workorder with Customers when Appointment has be scheduled.
          type: string
          format: date-time
        - name: "dueDateTimeEndFrom"
          in: query
          description: Beginning Timestamp end of Timeslot, when Workorder is due to be done. Relevant especially for Workorder with Customers when Appointment has be scheduled.
          type: string
          format: date-time
        - name: "dueDateTimeEndTo"
          in: query
          description: Ending Timestamp end of Timeslot, when Workorder is due to be done. Relevant especially for Workorder with Customers when Appointment has be scheduled.
          type: string
          format: date-time
        - name: "creationDateFrom"
          in: query
          description: Beginning of range of Date/Timestamp when Workorder was created.
          type: string
          format: date-time
        - name: "creationDateTo"
          in: query
          description: The end of range of Date/Timestamp when Workorder was created.
          type: string
          format: date-time
        - name: "completionDateTimeEndFrom"
          in: query
          description: Beginning of range of completion Timestamp when Workorder was completed/cancelled.
          type: string
          format: date-time
        - name: "completionDateTimeEndTo"
          in: query
          description: The end of range of completion Timestamp when Workorder was completed/cancelled.
          type: string
          format: date-time
        - name: apm-principal-token
          in: header
          description: Identity JWT Token of user/consumer
          type: string
      responses:
        '200':
          description: Return List of Workorders matching search criteria.
          schema:
            $ref: "#/definitions/PagedWorkorderList"
        '400':
          description: Bad request, please check Problem Details
          schema:
            $ref: "#/definitions/RFCProblem"
        '401':
          description: Unauthorized, Authentication failed.
          schema:
            $ref: "#/definitions/RFCProblem"
        '500':
          description: Internal Server Error, please check Problem Details
          schema:
            $ref: "#/definitions/RFCProblem"
  '/giga-project-dioss/v5/workorders/{id}':
    patch:
      tags:
        - workorders
      summary: Updates a Workorder partially, e.g. for updating Status or dueDates.
      description: 'This operation updates partially a Workorder entity i.e. only attributes that are present in the request body will be applied to the entity, attributes that were not present in the request body will remain unchanged.<br><br>
        To be considered for Status Changes:
        <li> When status changes, an StatusChangeEvent will be sent with all WorkCharacteristics, so WorkCharacteristics should be set in same update call.</li>
        <li> When Supplier starts working on a Workorder, Status must be set to IN_PROGRESS to avoid cancelations.</li><br>
        Cancelation of a Workorder is only possible in state created and done by setting status = CANCELED (not by calling DELETE service).'
      operationId: updateWorkorder
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          required: true
          description: Identifier of the Workorder
          type: integer
          format: int64
        - in: body
          name: workorder
          required: false
          schema:
            $ref: '#/definitions/WorkorderUpdateRequest'
        - name: apm-principal-token
          in: header
          description: Identity JWT Token of user/consumer
          type: string
      responses:
        '200':
          description: Workorder successfully updated.
          schema:
            $ref: "#/definitions/Workorder"
        '400':
          description: Bad request, please check Problem Details
          schema:
            $ref: "#/definitions/RFCProblem"
        '401':
          description: Unauthorized, Authentication failed.
          schema:
            $ref: "#/definitions/RFCProblem"
        '404':
          description: Workorder not found by requested ID.
        '409':
          description: Conflict for Workorder Update, please check Problem Details
          schema:
            $ref: "#/definitions/RFCProblem"
        '500':
          description: Internal Server Error, please check Problem Details
          schema:
            $ref: "#/definitions/RFCProblem"
    get:
      tags:
        - workorders
      summary: Get Workorder by Id.
      description: 'With this operation, a single workorder with given id is retrieved.<br>
      If not found a 404 is returned'
      operationId: getWorkorder
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          required: true
          description: Identifier of the Workorder
          type: integer
          format: int64
        - name: apm-principal-token
          in: header
          description: Identity JWT Token of user/consumer
          type: string
      responses:
        '200':
          description: Workorder found and returned.
          schema:
            $ref: "#/definitions/Workorder"
        '400':
          description: Bad request, please check Problem Details
          schema:
            $ref: "#/definitions/RFCProblem"
        '401':
          description: Unauthorized, Authentication failed.
          schema:
            $ref: "#/definitions/RFCProblem"
        '404':
          description: Workorder not found by requested ID.
        '500':
          description: Internal Server Error, please check Problem Details
          schema:
            $ref: "#/definitions/RFCProblem"
    delete:
      tags:
        - workorders
      summary: Deletes an existing Workorder.
      description: "This operation deletes an existing Workorder entity.<br>
      Service can only called with special permissions (WORKORDER#DELETE) <br><br>
      Cancelation of a Workorder is done by setting status = CANCELED, not by delete."
      operationId: deleteWorkorder
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          required: true
          description: Identifier of the Workorder
          type: integer
          format: int64
        - name: apm-principal-token
          in: header
          description: Identity JWT Token of user/consumer
          type: string
      responses:
        '204':
          description: Workoder successfully deleted
        '400':
          description: Bad request, please check Problem Details
          schema:
            $ref: "#/definitions/RFCProblem"
        '401':
          description: Unauthorized, Authentication failed.
          schema:
            $ref: "#/definitions/RFCProblem"
        '404':
          description: Workorder not found by requested ID.
        '500':
          description: Internal Server Error, please check Problem Details
          schema:
            $ref: "#/definitions/RFCProblem"
  '/giga-project-dioss/v5/workorders/{id}/contactPersons':
    get:
      tags:
        - workorders
      summary: This operation returns all Contact Persons of a Workorder.
      description: 'This operation returns all Contact Persons of a Workorder'
      operationId: getWorkorderContactPersons
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          required: true
          description: Identifier of the Workorder
          type: integer
          format: int64
        - name: apm-principal-token
          in: header
          description: Identity JWT Token of user/consumer
          type: string
      responses:
        '200':
          description: Workorder found, returning related Contact Persons.
          schema:
            $ref: "#/definitions/ContactPersons"
        '400':
          description: Bad request, please check Problem Details
          schema:
            $ref: "#/definitions/RFCProblem"
        '401':
          description: Unauthorized, Authentication failed.
          schema:
            $ref: "#/definitions/RFCProblem"
        '404':
          description: Workorder not found by requested id.
        '500':
          description: Internal Server Error, please check Problem Details
          schema:
            $ref: "#/definitions/RFCProblem"
    put:
      tags:
        - workorders
      summary: Replaces Contact Persons for a Workorder completly.
      description: 'Replaces Contact Persons for a Workorder completly.'
      operationId: replaceContactPersons
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          required: true
          description: Identifier of the Workorder
          type: integer
          format: int64
        - in: body
          name: contactPersons
          description: List of complete Contact Persons that will be updated on Workorder. Can be empty to delete all Contact Persons.
          required: false
          schema:
            $ref: '#/definitions/ContactPersons'
        - name: apm-principal-token
          in: header
          description: Identity JWT Token of user/consumer
          type: string
      responses:
        '200':
          description: Workorder Contact Persons successfully updated.
          schema:
            $ref: "#/definitions/Workorder"
        '400':
          description: Bad request, please check Problem Details
          schema:
            $ref: "#/definitions/RFCProblem"
        '401':
          description: Unauthorized, Authentication failed.
          schema:
            $ref: "#/definitions/RFCProblem"
        '404':
          description: Workorder not found by requested ID.
        '500':
          description: Internal Server Error, please check Problem Details
          schema:
            $ref: "#/definitions/RFCProblem"
  '/giga-project-dioss/v5/workorders/{id}/workCharacteristics/{name}':
    get:
      tags:
        - workorders
      summary: This operation returns a Work Characteristic by Workorder-Id and Characteristic Name.
      description: 'This operation returns a Work Characteristic by Workorder-Id and Characteristic Name.'
      operationId: getWorkCharacteristic
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          required: true
          description: Identifier of the Workorder
          type: integer
          format: int64
        - name: name
          in: path
          required: true
          description: name of the Work Characteristic of existing  Workorder
          type: string
        - name: apm-principal-token
          in: header
          description: Identity JWT Token of user/consumer
          type: string
      responses:
        '200':
          description: Work Characteristic found and returned.
          schema:
            $ref: "#/definitions/WorkCharacteristic"
        '400':
          description: Bad request, please check Problem Details
          schema:
            $ref: "#/definitions/RFCProblem"
        '401':
          description: Unauthorized, Authentication failed.
          schema:
            $ref: "#/definitions/RFCProblem"
        '404':
          description: Workorder and/or Work Characteristic not found by requested id/name.
        '500':
          description: Internal Server Error, please check Problem Details
          schema:
            $ref: "#/definitions/RFCProblem"
    put:
      tags:
        - workorders
      summary: Creates a new Work Characteristic for an existing Workorder. If Work Characteristic already exists, value will replaced.
      description: 'Creates a new Work Characteristic for an existing Workorder.<br>
      If Work Characteristic already exists, value will replaced.'
      operationId: createOrUpdateWorkCharacteristic
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          required: true
          description: Identifier of the Workorder
          type: integer
          format: int64
        - name: name
          in: path
          required: true
          description: name of the Work Characteristic of existing Workorder
          type: string
        - in: body
          name: workCharacteristicValue
          description:  Work Characteristics Value that will updated.
          required: false
          schema:
            $ref: '#/definitions/WorkCharacteristicValue'
        - name: apm-principal-token
          in: header
          description: Identity JWT Token of user/consumer
          type: string
      responses:
        '200':
          description: Workorder Characteristic was successfully updated.
          schema:
            $ref: "#/definitions/WorkCharacteristic"
        '400':
          description: Bad request, please check Problem Details
          schema:
            $ref: "#/definitions/RFCProblem"
        '401':
          description: Unauthorized, Authentication failed.
          schema:
            $ref: "#/definitions/RFCProblem"
        '404':
          description: Workorder not found by requested ID.
        '409':
          description: Conflict for Workorder Characteristic Creation/Update, please check Problem Details
          schema:
            $ref: "#/definitions/RFCProblem"
        '500':
          description: Internal Server Error, please check Problem Details
          schema:
            $ref: "#/definitions/RFCProblem"
    delete:
      tags:
        - workorders
      summary: This operation deletes an existing Work Characteristic.
      description: 'This operation deletes an existing Work Characteristic.'
      operationId: deleteWorkCharacteristic
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          required: true
          description: Identifier of the Workorder
          type: integer
          format: int64
        - name: name
          in: path
          required: true
          description: name of the Work Characteristic of existing  Workorder
          type: string
        - name: apm-principal-token
          in: header
          description: Identity JWT Token of user/consumer
          type: string
      responses:
        '204':
          description: Work Characteristic successfully deleted
        '400':
          description: Bad request, please check Problem Details
          schema:
            $ref: "#/definitions/RFCProblem"
        '401':
          description: Unauthorized, Authentication failed.
          schema:
            $ref: "#/definitions/RFCProblem"
        '404':
          description: Workorder and/or Work Characteristic not found by requested id/name.
        '500':
          description: Internal Server Error, please check Problem Details
          schema:
            $ref: "#/definitions/RFCProblem"
  /workorderTypeDefinitions:
    get:
      tags:
        - "workorderTypeDefinition"
      summary: "Get active workorder type definitions."
      description: "With this operation, currently active workorder type definitions\
        \ are returned"
      operationId: "getActiveTypeDefinitions"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters: []
      responses:
        200:
          description: "Return List of Workorder Type definitions"
          schema:
            $ref: "#/definitions/WoTypeDefinition"
        400:
          description: "Bad request, please check Problem Details"
          schema:
            $ref: "#/definitions/RFCProblem"
        401:
          description: "Unauthorized, Authentication failed."
          schema:
            $ref: "#/definitions/RFCProblem"
        500:
          description: "Internal Server Error, please check Problem Details"
          schema:
            $ref: "#/definitions/RFCProblem"
definitions:
  Workorder:
    type: object
    required:
      - id
      - type
      - status
      - source
      - networkTopology
      - externalOrderReferenceType
      - externalOrderReferenceId
      - klsId
      - folId
      - supplierPartyId
      - supplierProjectId
    properties:
      id:
        description: ID of Workorder. In case of Problems eventually not set
        type: integer
        format: int64
        example: 10022
      type:
        description: "Type of Workorder, describes which type of workorder will be done by supplier. Possible Values (not complete list): AUSKUNDUNG, GIGA_TA_INSTALLATION, GF_AP_INSTALLATION, DPU_INSTALLATION, INHOUSE_NETZ, NVT_INSTALLATION, NACHBESTUECKUNG_GF_AP, NACHBESTUECKUNG_NVT, PASSED_PLUS_BAU, A4_INBETRIEBNAHME, NETZUMSCHALTUNG, PLANNING"
        type: string
        example: "GF_AP_INSTALLATION"
      status:
        type: string
        description: "Status of Workorder (Enumeration).<br>
            \ <li> CREATED:  Workorder is created, Supplier can start work on Workorder. </li>
            \ <li> IN_PROGRESS: Supplier started work.</li>
            \ <li> COMPLETED: Supplier completed Workorder successfully.</li>
            \ <li> CANCELED: Workorder has been canceled.</li>"
        enum:
          - "CREATED"
          - "IN_PROGRESS"
          - "COMPLETED"
          - "CANCELED"
      source:
        description: Source that created the Workorder
        type: string
        enum:
          - "IBT"
          - "INFRASTRUCTURE"
      networkTopology:
        description: Network Topology on which workorder will be done.
        type: string
        enum:
          - "NE2"
          - "NE3"
          - "NE4"
          - "NE5"
        example: "NE4"
      dueDateTimeBegin:
        description: Begin Timestamp of Timeslot, when Workorder is due to be done. Relevant especially for Workorder with Customers when Appointment has be scheduled.
        type: string
        format: date-time
      dueDateTimeEnd:
        description: End Timestamp of Timeslot, when Workorder is due to be done. Relevant especially for Workorder with Customers when Appointment has be scheduled.
        type: string
        format: date-time
      completionDateTimeEnd:
        description: Completion Timestamp when Workorder was completed/cancelled.
        type: string
        format: date-time
      workforceExternalId:
        description: Id of external Workforce System.
        type: string
        example: "123456ABC"
      taskDescription:
        description: Description what will be done within this workorder/task
        type: string
        example: "Gf-AP Installation im Hausanschluss-Raum inkl. Netzschalt-Taetigkeiten im NvT"
      supplierProjectId:
        description: ProjectId of SupplierReference for this workorder.
        type: integer
        format: int64
        example: 10032
      supplierPartyId:
        description: Party-ID of supplier assigned to this workorder
        type: number
        format: long
        example: "10001"
      externalOrderReferenceType:
        description: Reference Type of external Order Service.
        type: string
        enum:
          - "CUSTOMER_INSTALLATION_ORDER"
          - "DISTRIBUTION_POINT_ORDER"
          - "BUILDING_TASK_ORDER"
          - "BUILDING_ORDER"
          - "NETWORK_CAPACITY_ORDER"
          - "NETWORK_SWITCHING_ORDER"
          - "NETWORK_CONSTRUCTION_ORDER"
      externalOrderReferenceId:
        description: Reference Id of external Order Service. Should be used together with externalOrderType
        type: string
        example: 10122
      comment:
        description: Notes/Comments for a Workorder
        type: string
        example: "Bitte beim Nachbarn klingeln falls nicht anwesend."
      klsId:
        description: KLS-ID of Workorder, a reference to address where workorder will be done.
        type: number
        format: long
        example: "123456789"
      folId:
        description: FiberOnLocation-ID of Workorder, a reference to location where workorder will be done.
        type: string
        example: "1234567890"
      gigaAreaNumber:
        description: Giga Area number (Gebiet ID) as Reference.
        type: string
        example: "GigaArea_001"
      contactPersons:
        description: List of Workorder ContactPersons relevant for this Workorder
        type: array
        items:
          $ref: '#/definitions/ContactPerson'
      creationDate:
        description: Date/Timestamp when Workorder ws created
        type: string
        format: date-time
      workCharacteristic:
        description: Additional WorkCharacteristics
        type: array
        items:
          $ref: '#/definitions/WorkCharacteristic'
  ContactPerson:
    type: object
    required:
      - salutation
      - givenName
      - familyName
      - customer
      - propertyContact
      - primaryContact
      - contactMedium
    properties:
      salutation:
        description: Salutation of Contact Person, see Enum Values.
        type: string
        enum:
          - MR
          - MRS
          - COMPANY
          - NOT_DEFINED
      title:
        description: Additional Title of Contact Person
        example: "Dr."
        type: string
      role:
        description: Role of Contact Person for Workorder. Helpful for Supplier User to know e.g. how  ContactPerson could help him
        example: "Hausmeister"
        type: string
      givenName:
        description: Given Name of Contact Person for Workorder.
        example: "Max"
        type: string
      familyName:
        description: Family Name of Contact Person for Workorder.
        example: "Mustermann"
        type: string
      companyName:
        description: Company name of Contact Person (when relevant)
        example: "Musterfirma GbmH"
        type: string
      customer:
        description: Indicates whether Contact Person is a (end) customer, e.g. contact for Appartment
        type: boolean
      propertyContact:
        description: Indicates whether Contact Person is a (end) PropertyContact, e.g. contact for Building
        type: boolean
      primaryContact:
        description: Indicates whether Contact Person is primary/main contact for this workorder. One primary Contact Person should be existing.
        type: boolean
      contactMedium:
        $ref: '#/definitions/ContactMedium'
  ContactMedium:
    type: object
    description: Contact Medium of Contact Person. Medium how Supplier can contact Workorder Contact Person. At least one Contact Medium should be present.
    properties:
      emailAddress:
        description: Email Address of Contact Person
        example: "Max.Mustermann@t-online.de"
        type: string
      fixedLineNumber:
        description: Fixed Line Number of Contact Person
        example: "+49 221 1234567"
        type: string
      mobileNumber:
        description: Fixed Line Number of Contact Person
        example: "+49 151 1234567"
        type: string
      messengerNumber:
        description: MessengerNumber of Contact Person
        example: "+49 152 1234567"
        type: string
      preferredContactMedium:
        description: preferred Contact Medium of Contact Person, how he would like to be contacted
        type: string
        enum:
          - FIXED_LINE
          - MOBILE_PHONE
          - MAIL
          - MESSENGER
  ContactPersons:
    type: array
    items:
      $ref: '#/definitions/ContactPerson'
  WorkCharacteristic:
    description: A list of name value pairs that define the service characteristics
    required:
      - name
      - value
    type: object
    properties:
      name:
        description: Name of the characteristic
        type: string
        example: "ConnectionType"
      valueType:
        description: Type of value of characteristic
        type: string
        example: "boolean"
      value:
        description: Value of the characteristic
        type: string
        example: "FiberAccessHome"
  WorkCharacteristicValue:
    description: Value and Value-Type of a Work Characteristic.
    required:
      - value
    type: object
    properties:
      valueType:
        description: Type of value of characteristic
        type: string
        example: "boolean"
      value:
        description: Value of the characteristic
        type: string
        example: "FiberAccessHome"
  PagedWorkorderList:
    type: object
    description: A paged List of Workorders to prevent performance issues by returning big list of workorders
    properties:
      workorders:
        description: Workorders
        type: array
        items:
          $ref: '#/definitions/Workorder'
      paging:
        $ref: '#/definitions/PagingInfo'
  PagingInfo:
    type: object
    description: Paging information of paging
    properties:
      total:
        description: Total number of elements
        type: number
        format: integer
        example: 1022
      page:
        description: Current page number (offset)
        type: number
        format: integer
        example: 2
      pages:
        description: Total number of pages
        type: number
        format: integer
        example: 101
      last:
        description: Indicates whether current page is the last page
        type: boolean
  RFCProblem:
    type: object
    title: RFCProblem
    description: RFC Problem Details. See https://tools.ietf.org/html/rfc7807#page-5
      for more details.
    properties:
      type:
        type: string
        format: uri
        description: A URI reference [RFC3986] that identifies the problem type. Consumers
          MUST use the "type" string as the primary identifier for the problem type.
        default: about:blank
      title:
        type: string
        description: A short, human-readable summary of the problem type. Consumers
          SHOULD NOT automatically dereference the type URI.
      status:
        description: The HTTP status code ([RFC7231], Section 6) generated by the
          origin server for this occurrence of the problem. The "status" member, if
          present, is only advisory; it conveys the HTTP status code used for the
          convenience of the consumer. Generators MUST use the same status code in
          the actual HTTP response.
        type: integer
      detail:
        type: string
        description: 'A human-readable explanation specific to this occurrence of
          the problem.  The "detail" member, if present, ought to focus on helping
          the client correct the problem, rather than giving debugging information.'
      instance:
        type: string
        description: A URI reference that identifies the specific occurrence of the
          problem.  It may or may not yield further information if dereferenced.
        format: uri
      problems:
        type: array
        items:
          $ref: '#/definitions/RFCProblemDetail'
    required:
      - type
      - title
  RFCProblemDetail:
    type: object
    title: RFCProblemDetail
    description: Contains details to a problem in fulfilling a business validation.
    properties:
      message:
        type: string
        description: A detailed human-readable message of the occurence of the problem.
      messageId:
        type: string
        description: >-
          An internal application related code, like the violated business rule
          Id.
      code:
        type: string
        description: >-
          Application related code (as defined in the API or from a common
          list). This would be the application specific error (such as the
          16-digit "Fehlerbildnummer"). To support zero prefixed error code
          numbers (0000123412341234), the string format is used. The error code
          MUST be 16 digits in length for coherence across applications.
        minLength: 16
        maxLength: 16
      messageType:
        type: string
    required:
      - message
      - messageId
      - messageType
  WorkorderCreationRequest:
    type: object
    required:
      - type
      - source
      - externalOrderReferenceType
      - externalOrderReferenceId
      - klsId
      - folId
      - supplierProjectId
    properties:
      type:
        description: "Type of Workorder, describes which type of workorder will be done by supplier. Possible Values (not complete list): AUSKUNDUNG, GIGA_TA_INSTALLATION, GF_AP_INSTALLATION, DPU_INSTALLATION, INHOUSE_NETZ, NVT_INSTALLATION, NACHBESTUECKUNG_GF_AP, NACHBESTUECKUNG_NVT, PASSED_PLUS_BAU, A4_INBETRIEBNAHME, NETZUMSCHALTUNG, PLANNING"
        type: string
        example: "GF_AP_INSTALLATION"
      status:
        type: string
        description: "Status of Workorder (Enumeration) - if not provided automatically set to CREATED. Possible Values: <br>
            \ <li> CREATED: Workorder is created, Supplier can start work on Workorder.</li>
            \ <li> IN_PROGRESS: Supplier started work.</li>
            \ <li> COMPLETED: Supplier completed Workorder successfully.</li>
            \ <li> CANCELED: Workorder has been canceled.</li> "
        enum:
          - "CREATED"
          - "IN_PROGRESS"
          - "COMPLETED"
          - "CANCELED"
      source:
        description: Source that created the Workorder
        type: string
        enum:
          - "IBT"
          - "INFRASTRUCTURE"
      networkTopology:
        description: Network Topology on which workorder will be done. If not set identified by SupplierProject
        type: string
        enum:
          - "NE2"
          - "NE3"
          - "NE4"
          - "NE5"
        example: "NE4"
      dueDateTimeBegin:
        description: Begin Timestamp of Timeslot, when Workorder is due to be done. Relevant especially for Workorder with Customers when Appointment has be scheduled.
        type: string
        format: date-time
      dueDateTimeEnd:
        description: End Timestamp of Timeslot, when Workorder is due to be done. Relevant especially for Workorder with Customers when Appointment has be scheduled.
        type: string
        format: date-time
      workforceExternalId:
        description: Id of external Workforce System.
        type: string
        example: "123456ABC"
      taskDescription:
        description: Description what will be done within this workorder/task
        type: string
        example: "Gf-AP Installation im Hausanschluss-Raum inkl. Netzschalt-Taetigkeiten im NvT"
      supplierProjectId:
        description: ProjectId of SupplierReference for this workorder. Either supplierProjectId or supplierPartyId needs to be provided.
        type: integer
        format: int64
        example: 10032
      externalOrderReferenceType:
        description: Reference Type of external Order Service.
        type: string
        enum:
          - "CUSTOMER_INSTALLATION_ORDER"
          - "DISTRIBUTION_POINT_ORDER"
          - "BUILDING_TASK_ORDER"
          - "BUILDING_ORDER"
          - "NETWORK_CAPACITY_ORDER"
          - "NETWORK_SWITCHING_ORDER"
          - "NETWORK_CONSTRUCTION_ORDER"
      externalOrderReferenceId:
        description: Reference Id of external Order Service. Should be used together with externalOrderType
        type: string
        example: 10122
      comment:
        description: Notes/Comments for a Workorder
        type: string
        example: "Bitte beim Nachbarn klingeln falls nicht anwesend."
      klsId:
        description: KLS-ID of Workorder, a reference to address where workorder will be done.
        type: number
        format: long
        example: "123456789"
      folId:
        description: FiberOnLocation-ID of Workorder, a reference to location where workorder will be done.
        type: string
        example: "1234567890"
      contactPersons:
        description: List of Workorder ContactPersons relevant for this Workorder
        type: array
        items:
          $ref: '#/definitions/ContactPerson'
      workCharacteristic:
        description: Additional WorkCharacteristics. Please contact provider of API or WorkorderCatalog for relevant Data.
        type: array
        items:
          $ref: '#/definitions/WorkCharacteristic'
  WorkorderUpdateRequest:
    type: object
    properties:
      status:
        type: string
        description: "Status of Workorder (Enumeration). <br>
            \ <li> CREATED:  Workorder is created, Supplier can start work on Workorder.. </li>
            \ <li> IN_PROGRESS: Supplier started work. </li>
            \ <li> COMPLETED: Supplier completed Workorder successfully. </li>
            \ <li> CANCELED: Workorder has been canceled. </li>"
        enum:
          - "CREATED"
          - "IN_PROGRESS"
          - "COMPLETED"
          - "CANCELED"
      source:
        description: Source that created the Workorder. Cannot be set to null.
        type: string
        enum:
          - "IBT"
          - "INFRASTRUCTURE"
      networkTopology:
        description: Network Topology on which workorder will be done.
        type: string
        enum:
          - "NE2"
          - "NE3"
          - "NE4"
          - "NE5"
        example: "NE4"
      dueDateTimeBegin:
        description: Begin Timestamp of Timeslot, when Workorder is due to be done. Relevant especially for Workorder with Customers when Appointment has be scheduled.
        type: string
        format: date-time
      dueDateTimeEnd:
        description: End Timestamp of Timeslot, when Workorder is due to be done. Relevant especially for Workorder with Customers when Appointment has be scheduled.
        type: string
        format: date-time
      completionDateTimeEnd:
        description: Completion Timestamp when Workorder was completed/cancelled.
        type: string
        format: date-time
      workforceExternalId:
        description: Id of external Workforce System. Cannot be set to null.
        type: string
        example: "123456ABC"
      taskDescription:
        description: Description what will be done within this workorder/task
        type: string
        example: "Gf-AP Installation im Hausanschluss-Raum inkl. Netzschalt-Taetigkeiten im NvT"
      supplierProjectId:
        description: ProjectId of SupplierProjectReference for this workorder. Cannot be set to null.
        type: integer
        format: int64
        example: 10032
      externalOrderReferenceType:
        description: Reference Type of external Order Service, see Enum for possible Values.
        type: string
        enum:
          - "CUSTOMER_INSTALLATION_ORDER"
          - "DISTRIBUTION_POINT_ORDER"
          - "BUILDING_TASK_ORDER"
          - "BUILDING_ORDER"
          - "NETWORK_CAPACITY_ORDER"
          - "NETWORK_SWITCHING_ORDER"
          - "NETWORK_CONSTRUCTION_ORDER"
      externalOrderReferenceId:
        description: Reference Id of external Order Service. Should be used together with externalOrderType
        type: string
        example: 10122
      comment:
        description: Notes/Comments for a Workorder
        type: string
        example: "Bitte beim Nachbarn klingeln falls nicht anwesend."
      klsId:
        description: KLS-ID of Workorder, a reference to address where workorder will be done. Cannot be set to null.
        type: integer
        format: int64
        example: "123456789"
      folId:
        description: FiberOnLocation-ID of Workorder, a reference to location where workorder will be done. Cannot be set to null.
        type: string
        example: "1234567890"
      workCharacteristic:
        description: Updates Work Characteristic for an existing Workorder. If Work Characteristic (identified by name) already exists, value will be updated. If it doesn't exist, a new Work Characteristic will be added.
        type: array
        items:
          $ref: '#/definitions/WorkCharacteristic'
  ApplyWhen:
    type: "object"
    properties:
      operations:
        type: "array"
        items:
          type: "string"
          enum:
            - "REST_PATCH"
            - "REST_CREATE"
      futureStatus:
        type: "string"
      currentStatus:
        type: "string"
  CharacteristicDefinition:
    type: "object"
    required:
      - "characteristicName"
    properties:
      characteristicName:
        type: "string"
      uiConfig:
        $ref: "#/definitions/WorkCharacteristicUIConfig"
      defaultValue:
        type: "string"
      type:
        type: "string"
      validationRules:
        type: "array"
        items:
          $ref: "#/definitions/ValidationRule"
  ValidationRule:
    type: "object"
    required:
      - "errorCode"
      - "ruleName"
    properties:
      parameters:
        type: "object"
        additionalProperties:
          type: "string"
      ruleName:
        type: "string"
      errorCode:
        type: "integer"
        format: "int32"
      errorMessage:
        type: "string"
      applyWhen:
        $ref: "#/definitions/ApplyWhen"
      constraint:
        type: "string"
  WoTypeDefinition:
    type: "object"
    required:
      - "responsible"
      - "source"
      - "workorderType"
    properties:
      workorderType:
        type: "string"
      synonym:
        type: "string"
      responsible:
        type: "string"
      source:
        type: "string"
      version:
        type: "string"
      characteristicsDefinitions:
        type: "object"
        additionalProperties:
          $ref: "#/definitions/CharacteristicDefinition"
      uiConfig:
        $ref: "#/definitions/WoUIConfig"
  WoUIConfig:
    type: "object"
    properties:
      displayName:
        type: "string"
      i18n:
        type: "object"
        additionalProperties:
          type: "string"
      pathSuffix:
        type: "string"
      showDistributionPointLaunchButton:
        type: "boolean"
  WorkCharacteristicUIConfig:
    type: "object"
    properties:
      name:
        type: "string"
      showInUI:
        type: "boolean"
      showInMobileUI:
        type: "boolean"
      nameI18n:
        type: "object"
        additionalProperties:
          type: "string"
